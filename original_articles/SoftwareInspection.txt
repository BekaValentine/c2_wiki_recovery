This is described in a book [ISBN 0201631814] by TomGilb and DorothyGraham 1993. There is a lot of followup literature including free to use Powerpoint Slides at http://www.result-planning.com

There are other sources such as Software Inspection Process (Mcgraw Hill) by Robert Ebenau and co-author, and IEEE Publication Software Inspection: a Software Best practice. Ron Radice (a founder of the method at IBM along with Fagan, and inventor of CapabilityMaturityModel, CMM) is currently finalizing a new book on the subject (May 1999).

The main thing to understand is that Inspection is much more than structured walkthrough or peer reviews. It is a systematic method for checking and measuring that any form of documentation (test cases, code, requirements, contracts) meets defined specification standards ('Rules'). The primary tactic is sampling, using lots of time per small sample to crosscheck against all related documents, at the Optimum Checking Rate (about 1 page per hour) looking for Major (= big downstream effect if not caught) Defects. And, more importantly, trying to learn about defect root causes and prevent them by process improvement (see Robert Mays on Defect Prevention Process in for example Chapter 17 of Gilb: SoftwareInspection.

----

Gilb and Graham make very big claims for this practice in their book.
Has anyone here any practical experience? Does it work? Does it work
much better than ordinary code reviews? How onerous is the overhead?
How well does it work if you simplify way down, throw away most of the
structure and just replace "conventional" reviews with the "check
individually, meet and discuss, edit, repeat" procedure? --GarethMcCaughan
----
Let me borrow some of my own blather from TestsCantProveTheAbsenceOfBugs:

''Forgive me if I sound like some kind of new religious convert. It's just that I have seen the Fagan Defect-Free Process work in real life, right in front of my face, using real code and real documents that we created. I have yet to see any of the aspects of XP come to bear fruit at this client. My time here has been short -- about ten months -- but so far, nothing. Fagan, on the other hand, is happening right away and in real time.''

I still believe this is a significant improvement over any other "checking" process -- be it formal, informal, or implied -- that I have been exposed to. I've gotten paid for developing software on and off over the last 25 years. These days it's all I do [no electronics -- shame]. This Fagan Defect-Free Process stuff is so much better than anything else I have seen that there is no basis of comparison. Check out FaganDefectFreeProcess. -- MartySchrader

More on SoftwareInspection, including variations which are apparently better than the Fagan method:
	* http://www.stickyminds.com/r.asp?F=W2587 

''(Heh -- I'd like to see '''that.''')''

''The above article draws an amazing conclusion.  Software Inspections are not catching any problems, therefore they are working!''

Anybody else reminded of _DeadLine_?
----
CategoryBook