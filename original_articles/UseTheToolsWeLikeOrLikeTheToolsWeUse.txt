Do we UseTheToolsWeLikeOrLikeTheToolsWeUse?

Whether it is languages, editors, databases, operating systems, we become familiar with the tools that fate chooses for us. We find we can work more easily with them than with other tools. We think they are better than other tools.

If we have to make a choice between 2 unfamiliar tools, we don't have the time to become proficient at each. We make an arbitrary choice. Two years down the line, our tool has moved on, but we still have an impression of version n-2 of the other tool and happily engage in flame wars about it.

''How about use the tools you use?  Do the best with the tool set you are given and quit whining.''

There's nothing wrong with my tools. They're better than your tools. That's the point.

----

Why work with inferior tools if much better are easily available.  If nothing better is available, and your tools are still poor, perhaps it is worth the time to create better ones.  Why settle for mediocrity (or worse). Strange concept.  I have a picture in my mind of someone handing a tool-and-die maker a cheap set of walmart sockets and saying 'now just use these and quit whining' :)

----

A "rare" counter example:
''(In the tradition of "the exception that proves the rule.")''

I continue to use "vi", even though I believe that emacs is a better editor.
I know vi very well, while it would take an investment of time to become similarly proficient in emacs (and from there things would get better).
'''But''' the "payoff" is currently insufficient for me to pay the conversion cost -- to "go through the deep dark valley" of training and low productivity to get from one to the other -- because I'm not currently doing enough text editing to get the payback.
(Emacs doesn't work from within the Visual Basic IDE.)

So this is a rare example of *not* favoring my current tool.
(But if I were still doing lots of text editing, I'd switch to EMACS, and probably be a strong advocate of it -- proving the rule.)
-- JeffGrigg

''You can use Viper mode of Emacs (http://www.delorie.com/gnu/docs/emacs/viper.html).  In fact, Emacs can be considered a heavy feature-rich "vi" implementation.''

-----

There are a lot of languages and tools competing for our attention. Generally people will explore a bit of each and then gravitate toward those which seem more promising. This breadth-first exploration approach is rational. However, this may result in people bypassing languages or tools with deep U-shaped learning curve, those that may require a complete mind overhaul before delivering grand productivity. It is hard to know whether they are really U-shaped or L-shaped for a given person, though. Further U (and L) curved tools are often the ones with the biggest technical evanglists promoting them.

----
See also:
* ChooseYourRutCarefully
* MicrosoftVsOpenSourceDatabases
* PickTheRightToolForTheJob
* InkBlotSoftwareEngineering