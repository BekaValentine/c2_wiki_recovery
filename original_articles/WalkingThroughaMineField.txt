Walking Through a Mine Field, as the name adequately suggests, is a situation encountered, most often, with software components and products which are not adequately tested and thus have residual bugs. These bugs turn up at critical times, for instance server overload etc. The name is given to this antipattern, possibly because one is never very sure of the effect of the untested/poorly tested component/product and thus lives in a constant fear of system failure.

----

This kind of buggy software enters organizations through niche vendors and internal development without adequate quality control systems, like the major financial services firm for which I worked. The solutions were obvious to most of us who had something to do with implementation.

First, compare software from several different vendors and make the choice based on demonstrated quality and price, rather than price, or political reasons. Investigate the vendor's internal development practices. Do not trust a software demonstration on a salesman's laptop; obtain a fully working demo with a limited license and install and test it internally for functionality and compatibility with your own systems. Run a stress testing tool against it and see if it breaks (increasing errors or diminishing performance) under projected production load levels. Make sure that the contract has a strong Service Level Agreement for addressing and fixing issues. Put a vendor who consistently tries to sell this kind of software on a probation list. And make sure that the contract has some kind of clause to void the deal if the software does not perform up to stated functionality and compatibility.

Second, insist on sound development practices internally and adequate testing despite schedule pressure. Lack of time to complete testing and fix critical defects is a sign of a poor project plan, poor design, poor development practices, or any of the above.

''Sometimes this problem is caused by a MicrosoftCertifiedSolitaireExpert using MineSweeper too much.''

----

Gosh, and here I thought this was a management pattern.

The ManagementMinefield pattern is a barrier to development - or any other accomplishment for that matter.

----
CategoryAntiPattern CategoryDevelopmentAntiPattern, CategoryQuality