Actually spelt Strongtalk, this is a statically checked version of Smalltalk. The declarations and checks are optional; the underlying virtual machine does not interact with the type system and runs typed and untyped programs with the same performance.

- See: http://www.cs.ucsb.edu/projects/strongtalk to download Strongtalk. You can also read about the history and
get hold of several whitepapers and the  (quite dated) OOPSLA 93 technical paper.

''Expanding on the above: Usually people expect type annotations help improve performance, and apparently StrongTalk is indeed fast, but a comment on SmallTalkFrequentlyAnsweredFud says that StrongTalk runs very fast, but independently of whether type annotations are used. In other words, the performance of StrongTalk apparently is purely due to the compiler technology, not the type annotations.''

----

The OOPSLA'93 paper does NOT live up to their claims of being able to
handle every Smalltalk program.  That paper requires changes to the
language.  This web page claims that the next version of the system
solved the remaining problems.  Perhaps so, since the authors are
smart folks who worked hard at it.  However, we will probably never
see this system, because the company got bought by Sun.  So, for all
practical purposes, the claims on this page are just empty boasting, with
nothing to back it up.  -RalphJohnson

----

We never claimed that the Strongtalk type-system could handle every Smalltalk program.  However, we do claim that it works (on a large scale, not just on toy programs), and preserves the essential flavor of programming in Smalltalk.  The system is now available for free download at the link above, so anyone is welcome to see for themself.  -Dave Griswold

----

Is there some connection to TypedSmalltalk?

----

CategorySmalltalk