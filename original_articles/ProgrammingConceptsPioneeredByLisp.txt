Most notably:

* conditional expressions (like ?: in C)
* recursion
** and stack call discipline (see how subroutines are implemented in Knuth's TheArtOfComputerProgramming?)
* Writing a compiler in the same language that it compiles - and making it compile itself while running under an interpreter.
* EssExpressions
* LispMacro''''''s
* GarbageCollection
* DynamicTyping
* FirstClassFunction''''''s
* DataAndCodeAreTheSameThing
* MetaObjectProtocol
* Extensible syntax

For a more extensive list read Paul Graham's ''What Made Lisp Different'' at http://www.paulgraham.com/diff.html.
----
CategoryLisp