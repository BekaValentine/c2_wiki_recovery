In about 7 hours of rapid downhill TestDrivenDevelopment, I applied ExtractAlgorithmRefactor to port a packed binary data file reader from ANSI-C to PythonLanguage. It extracts and corrects the endianness for 4 record types, including trace data stored as small deltas. Then I tossed in a viewer to show these traces as charts. The original was >1,000 lines of CeeLanguage, plus all the support stuff like reinvented dynamic arrays. My result was <200 lines of source and ~300 of test. Python rules. (But I could'a done it in RubyLanguage at the same rate.) -- PhlIp

----

Continuing the visual language advocacy:

(Seen on the weblog of Joey "the happiest geek on earth" de V,
nominally http://www.kode-fu.com/geek/ -- Doug L.)

''BrokenLink; I am now hosting it in some old scrap webspace of my own, since I thought it was quite amusing.''

''I had some difficulty making it work :/ Try now:''
''http://jove.prohosting.com/~zahlman/cpp.html''

''-- KarlKnechtel''

----

PythonLanguage cannot ''yet'' convert a BadProgrammer MicrosoftSlave. He needs a VbClassic alternative that has a good alternative amongst PythonGuiBuilders, trouble free (meaning ItJustWorks) ActivexDataObject integration, and interface to BerkeleyDbXml. -- DavidLiu

'''Please post response to challenge to PythonXml'''

----

While it's true that Python can't correct bad programming, there is an incredibly good book about Python which helps even wayward DelphiLanguage programmers such as myself get it: ''Dive Into Python'' written by MarkPilgrim -- MikeWarot

----
Compare: ThereIsNothingPerlCannotDo, ThereIsNothingIntercalCannotDo