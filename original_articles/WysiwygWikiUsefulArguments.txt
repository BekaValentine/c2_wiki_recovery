This is a a presentation of arguments if Wysiwyg is useful for editing wikis.

See also WhyWhatYouSeeIsWhatYouGetWorksNot.

WYSIWYG-editing might save many people from having to learn yet another syntax. But it is possible that it might not work well in practice because, e.g., automatic table of contents might be difficult, when people manually choose font-sizes instead of using a formal outline. 

''It's not only learning new syntax that matters. Even if I know the wiki syntax well, its syntax imposes additional costs on human visual processing apparatus. That's what makes WYSIWYG preferable in the first place.''

''Copied from WhyWhatYouSeeIsWhatYouGetWorksNot:''

WYSIWYG does not have a FatalFlaw. The availability of WYSIWYG editors is a great improvement over the days when you couldn't see how documents would turn out until after you printed them. For casual users, or people who don't want to learn the intricacies of something like LaTeX, WYSIWYG is an empowering technology, and not a crutch for the "illiterate". WYSIWYG does work: it serves the needs of a lot of users. It should not be damned just because it doesn't serve the needs of the most-sophisticated document creators. -- KrisJohnson

I wholeheartedly agree with KrisJohnson. - Alex Hall, mr_alex_hall@sisna.com

True. Within a limited scope, a WYSIWYG editor is the best choice. That they are often used outside this scope does not diminish that - and a little education about the best tool for a given job would go a long way to address some of the prejudice of folk who have been bitten by using the wrong editor.

I'm very unclear on what you mean by that, and if you mean that people should just be educated on Wiki syntax, that won't fly.  People won't just be educated. --Alex Hall

It uses the only wiki-common syntax in existence, HTML. Every WikiEngine in existence invents its own little syntax extensions, but everybody can edit pure HTML, esp. with a such nice control, which hides the complexity. --ReiniUrban

I believe it would be best to have a WYSIWYG editor create Wiki syntax, and hide all of the HTML.  Wiki syntax is much simpler than HTML, and I would find it useful to be able either to write Wiki syntax in a text box or just whatever I stinking please in a WYSIWYG environment. --Alex Hall

One of the main advantages of a wiki is its lightweight structure. To work with a WYSIWYG editor meens quit often to get lost in formating content, and increases the amount of data to be stored in the database.
Further more the articles will miss a consistent layout. 
On the simple wiki-syntax functions like 'search', 'history' and 'diff' are also much more lightweigt. --Robert 

But when I think WYSIWYG wiki I don't think of a full HTML WYSIWYG Editor, I think of WIKI WYSIWYG Editor, an editor that would display what the user will see at the end but behind the scene would spit out wiki syntax. This means that user would be restricted on the format. Example they shouldn't be able to change the font, since in wiki syntax you can't. We should not forget that in wikis content is king, format is secondary. -- Martin Lortie

Yes, just because you give someone WYSIWYG doesn't mean you have to let them foul up the content with lots of formatting tags. Whether you use wiki markup (which I don't prefer because there are too many different flavors) or html, just allow the user to insert *structural* tags, not layout tags. Then layout stays consistent. Also, if the UI is designed carefully, it can help educate the user on what structure (vs. layout) is all about. -- Jonathan Camenisch

WYSIWYG is great when it works. However, the web-based WYSIWYG editors I've tried all have significant bugs in basic features, e.g. lack of full undo/redo, broken cut/copy/paste (don't even try to paste an image), incorrectly implemented cursor navigation, and so on. Given a choice between a buggy WYSIWIG experience and a bugless plain text experience, many people prefer the plain text editors. -- Jon Meyer
----
CategoryWiki