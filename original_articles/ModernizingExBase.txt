MicrosoftAccess continues to frustrate me for internal batch and ad-hoc data-chomping chores. I miss much of ExBase (dBASE derivatives), but realize that its conventions are a bit outdated to be accepted in most organizations. Maybe if us ExBase fans can manage to find a way to modernize the good parts of the language and tool conventions, we can resurrect the wounded beast into a new species that is more palatable to modern conventions/fashions. For one, it probably has to better resemble and better integrate with SQL. SQL is the lingua franca of query languages for good or bad (see SqlFlaws). --top

-----

Suggestions to ponder:

* Replace "FOR" with "WHERE" to fit SQL conventions

* Make "memory" variables start with "$" to avoid confusion with column names.

* Better management and cleanup of "temp" or intermediate/virtual tables, such as auto-cleanup and user/session-specific temporary tables.

* "Mousey" wizards for certain kinds of code generation, and/or perhaps a "format" ControlTable/DataDictionary for column-mapping etc. 

* Better or more standardized "area" (handle) management.

* Ability to use multiple RDBMS as its underlying data engine.

* Easy "escape" into direct SQL when needed.

* Review commands that rely on "modey" (global) settings and either remove them, or create non-modal alternatives.

* Toss or make optional hard-wired size limits left over from the early micro-computer era. Example: maximum recognized variable name length. (Older dialects ignored characters beyond a certain name length as a compromise between efficiency and name expressiveness.)

* Table-driven index and auto-join management.