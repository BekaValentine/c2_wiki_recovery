Somebody stated something to the effect that "Patterns are stating the obvious".  I could swear I read it somewhere around here, but I can't find the quote anymore.  Anyway, I certainly feel that a lot of DesignPatterns are obvious.

This made me think a little bit about why I find patterns interesting, and one of the reasons I came up with was this:

'''The problem may be more interesting than the solution.'''  Once the problem has been explained there may be a fairly obvious solution to the problem, but it may well be that you've never thought about that kind of problem before.

This implies that patterns could be more interesting without the solution.  I suppose this is exactly opposite of what design patterns are trying to do, but who doesn't enjoy solving a problem themselves more than just being told the answer?
-- CurtisBartley
----

Isn't that a big part of man's age-old fascination with riddles? Typically the answer is rather mundane, the joy is in teasing out the truth from the complicated way the problem is stated... BillBarnett

-----

Certainly the description of a problem can have a lot of interest. That is partly what I was getting at on the PatternComponent(s) page. The idea is to find abstractions within the problem space, and thereby understand the conflicting forces at a deeper level. From this we discover whether the problem is general and recurring. There's a wonderful moment, when reading someone else's pattern, where you realise you '''have''' thought about that kind of problem before, only not in those ways. You may not even have realised it was the same problem.
-- DaveHarris

Joy comes from the ''texture'' of the problem not the ingenuity of the solution. Try looking at the most ordinary solutions first. Look at code you write every day. What is it about the world that makes that necessary?  -- WardCunningham

-----

The idea of "pattern format" as a mechanism for communicating a problem and a solution is also quite nice. The beauty of DesignPatterns wasn't so much for 
the knowledge, but that the knowledge was so easily accessible. 

I think this is something that gets lost sometimes. MartinFowler's Refactoring pages are a joy to read '''not''' because of the profundity of his work but because each example is so darn accessible--- there's a ''motivation'' 
and a ''mechanics'' section. 

Anyway, the reason for saying the above ''here'' (on this page) is that I'm working on lecture notes for a course. And what I'm discovering is that almost
everything I want to say also fits into a nice pattern-style format. Which intrigued me (even though, duh, it's a completely obvious notion). Because
now I'm wondering-- what can and can't be expressed naturally in a pattern format. 

WilliamGrosso

--------

Sometimes the pattern format is simply a useful way of organizing information.  One may not be certain a particular nexus of information is really a pattern, but she can give it a meaningful name and collect further information to see if a pattern eventually emerges.

EdBuffaloe
