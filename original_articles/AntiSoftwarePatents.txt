'''WikiSingleVote'''

[xxxx] SoftwarePatents are Evil; like copyright and all laws relating to IntellectualProperty. 

[x] Software Patents are Evil. They promote anti-competitive practices by big companies in advanced technological fields.

[x] Software Patents are Evil. The patent system was designed to protect the interests of the inventor of tangible devices.

[xx] The patent system is Evil. It no longer protects the inventor's interests. We need a WorkingPatentSystem.

[x] The patent system is Evil. We need to abolish patents altogether.

[yx] Software Patents aren't Evil. Why shouldn't an inventor of a novel algorithm be provided with a *limited term* monopoly *in exchange* for disclosure of the result?

(y) - ''But see below. -- MikeSmith''

''Please add your vote.'' 

----
Well, let's take a look at this. Suppose Ward patented the original wiki. AND copyrighted it. Not only can you not install and use such a program without license from the owner, YOU CANNOT WRITE YOUR OWN VERSION OF IT.

Now, I just wrote WikiNehesa, and he knows it- and is complimented that I thought enough of his wonderful idea to imitate his creativity. BTW, it's licensed under the GnuGeneralPublicLicense.

But suppose his name - and mindset - was 'Bill Gates'? Ever read a MicroSoft EULA?

I would now be in violation of his patent. Even though it's not even written in the same language ( I used python, he used perl. Different strokes for different folks, I guess...). I would owe him a LOT of money.

How does that sort of social order serve mankind? I challenge the argument that it does. Debate? Comment? -- KirkBailey

----
Do not let that happen in Europe (and fight against it in USA and anywhere else). Please, see http://petition.eurolinux.org.

Software patents aren't evil. The corruption of the patent process (in two areas in specific) is evil, however. 

----
''Disagree.  Patents were intended to support inventors, not writers.  No program is a machine or device, therefore none can be patented. Software is protected by copyright well enough.'' -- Pete Hardie

----
''Disagree with that disagreement.'' '''Invent:''' To produce or contrive by the use of ingenuity or imagination. ''Software concepts can be invented and thus should be patentable to create incentive for continued software research. Copyright only protects plagiarism of the writing, not reproduction of the concept.'' -- JayceMil

----
Disagree^3. Whether or not you are inventing is irrelevant. Patents were devised to protect inventors of *devices*. Period. Software patents protect *corporations'* (not inventors') *investment* in algorithms and software. *Not* devices... but this is propped up by a legal fallacy. There is huge economic pressure to do this, but no logical connection to the original intention of patents. The entire patent system has been subverted to corporate interests, and as such should be thrown out (start again? perhaps). Furthermore, even if you agree with the legal distortions that have resulted in current IP law, you cannot claim that software patents in any way reflect the intent of a patent to provide a *limited term* monopoly *in exchange* for disclosure of the result. In many software cases, disclosure is irrelevant (i.e., obvious tech) so there is no worthwhile exchange. Even worse, software patents are almost universally active for the useful life of the idea (terms are poorly matched to the current speed of technological change). Thus the term is not limited. The current state of US IP law is completely brain-damaged, IMO.

----
I agree that patents were devised to protect inventors of *devices*. At the time, *devices* defined everything that could be invented. The concept of software did not exist and the legal system has been struggling with it ever since it arose. Why shouldn't an inventor of a novel algorithm be provided with a *limited term* monopoly *in exchange* for disclosure of the result? I wholeheartedly agree that the patent system has been subverted as was eluded to at the top of this page. The corruption of the patent process is most definitely evil and is by no means limited to the software side of things. Semiconductor patents are just as ludicrous. But assuming we had a working patent system, one that applied expirations based on the content of the patent, actually disallowed patents based on obviousness, etc., why should intellectual creations be treated differently than physical creations? It is all IP. The patent system, when all is said and done, is there to provide incentive and protection for people to create. -- JayceMil

----
Devices defined everything that could be invented? Balderdash! Why shouldn't the inventor of a software algorithm be granted a monopoly? For the same reason that inventor of an algorithm wasn't granted one before computers existed. Algorithms predate computers by centuries. Essentially, a patent (or for that matter, all IP) is a social contract, created so that the most societal gain from an invention would be realized. It was always apparent that the closed development encouraged by such monopolies (i.e., a capital-based system creating a scarcity where none 'really' exists - since capitalism requires scarcity) were antithetical to the necessary openness needed for progress in the sciences and mathematics. The patenting of algorthims faces this same problem. The patenting of software, per say, does not. Unfortunately, SP are often about 'fenceposting' an algorithm. Society does not (net) gain by this practice, and it should be abhorred by all intellectually competent members of the society. I think that a limited IP applied to software could be beneficial, providing the terms were reasonable and corporate control were removed, but the current IP model is heading down a path that may lead to intellectual stagnation.

----
The argument is being clouded by the current patent system. Most would agree that the patent system has broken down into a forum for corporate posturing. However, the spirit of the system is to promote openness in the creative community. The lightbulb and the LZW compression algorithm are both novel and useful inventions. They both required development and research. They both can be implemented in multiple ways. One is a physical device that is directly producible and enables a final produt (lamp). The other is an intellectual construct that is directly implementable and enables a final product as well (digital camera).  How are these different with respect to the spirit of the patent system? How does society not gain from the LZW compression algorithm being released to the public under protection of a patent rather than being holed up in some obscure Compuserv image viewer where it could not be studied and improved upon? -- JM

----
Society loses because the patent office is granting invalid patents, and the patent holders are using litigation to impede progress. Obvious ideas, sole method ideas, and ideas already in use are getting patents, and being used as clubs to limit innovation. A 7 year patent for a mechanical invention is great, because of the time needed to build a factory and produce the items; a 7 year patent on a software process is bad - because it stifles all development in that area for 7 years. Until the Patent Office is computer-literate, there is too much lost to bad patents to make them even slightly beneficial. -- Pete Hardie

----
Absolutely agreed as I stated above. Now, assuming we knew how to create a WorkingPatentSystem, why are software patents inherently bad as opposed to circuit patents, semiconductor patents, or lightbulb patents? The question posed by the analogy above (lightbulb vs compression) still stands. -- JM

----
Ok, as above: I would argue that the existence of patents on algorithms will hobble (and there is evidence of this already, see the contents of many computer 'science' 'journals' these days) intellectual progress in the field of C.S. Why should it be any different from maths/physics/whatever? Those fields have (correctly, IMO) determined that (something approaching) global access is the appropriate methodology. Patents are simply a social contract - there is no reason to have them if the net effect to society is not positive. But for the above reasons, I feel that the net effect will be *negative*. Or do you think that it would be better if all of the encryption, compression, spreadsheet, database, etc..., companies (and the genetic companies, for that matter) are constantly in hock to the mathematicians? For that seems to be the logical extension of your stance; e.g., your example of LZW could not even have been begun without (far more significant than the LZW algorithm) results in mathematics.

----
Software: Patents are being granted which impede others from doing business. The amazon one-click-ordering patent is a perfect example. This is tantamount to somebody, way back, patenting the grocery store shopping cart. Not, mind you, patenting the ''design'' of a particular shopping cart, but rather the notion of ''using'' a shopping cart to collect goods and take them to the checkout counter. It's utter nonsense. 

Genetic materials: Simply put, human genes belong to ''humanity''. Allowing a company to "own" them is tantamount to slavery. Likewise, our food supply belongs to the public, not to private individuals or corporations. The current trend is to favour engineered crops over biodiversity. This is leading us in a direction of more and more volume of fewer and fewer different kinds of crops making up our food supply. And those crops are based on patented genes and owned by corporations. 

-- AnthonyLander

----
''Genes belong to humanity, the intellectual property created when a biotech company spends billions on deciphering and exploiting those genes is patentable. Unfortunately, the legal systems of the world are all too good at erasing that distinction. The same applies to software patents as explained above. The one-click patent is laughable, however, trademarking 'one-click' would be reasonable.'' -- JayceMil

----
BritishTelecom asserted they had a patent on the hyperlink which underlies the WWW, and approached U.S. ISPs for royalties.  Prior art, in the form of TheMotherOfAllDemos - the famous video of DougEngelbart demonstrating NLS - effectively clobbered their claims.

----
See? All that is what I was referring to... Patents used for what they were invented some too-many-years ago, may be okay. But software business corrupt their purpose and just create a corporate weapon for mass destruc^H^H^H^H^H^H^Hmarket control...

And BT's claims, be it truth or not, are ridiculously childish... one would expect something better from a big company... -- DavidDeLis

''There's nothing wrong with patenting a specific implementation of one-click shopping. The problem is that the entire notion is patented. What is sensible is that nobody should be able to use Amazon's implementation without paying. What's not sensible is that nobody can implement their own that's completely different.''

----
Software patents aren't evil. Whether or not the invention is "tangible" is moot; the advent of software requires a re-evaluation of what constitutes a "device" for the purposes of patent. ''However'', the USPTO has repeatedly demonstrated its incompetence in determining what constitutes genuine invention, and what is simply prior art given a new spin by a multimegacorp. It might be appropriate to call for a moratorium on software patents until such time as the USPTO can get personnel more qualified to determine what is and is not legitimately patentable, instead of just handing out undeserved patents like Spanish Land Grants. -- MikeSmith

----
I have no problem with software patents. They should have a length of two years. Anybody who can't make a mint out of a two year software patent doesn't deserve to get one. Software doesn't require the investment in production facilities that hard patents do, therefore I fail to see why software patents should be as long as for hard ones. -- NeilWilson

----
I'd like to add a comment about this notion that software is not a "device".  It is.  It's as much a device as the cotton gin is a "device".  It is only our lack of understanding of mental processes that makes us talk, and believe, that software design is somehow different from hardware design.  It's our language that creates the difference, not the universe, or the work we are talking about.  In the end, we patent the design, not the hardware.  A cotton gin using Eli Whitney's design for a machine to remove seeds from cotton is as much a device as a digital camera using LZW's design for a device to maximize the number of pictures that can be stored in memory.  When you load software into a computer, if physically changes the device (by moving physical electrons around) just like cutting and welding steel physically changes metal into a cotton gin.  Software is the design of a physical machine (a computer) just as much as a blue print is the design of a physical machine.  Any argument that software should not be patented because it is not about a "device" is unfounded.

-- Curt Welch

----
I think that software patents are bad for society.  Technology moves too fast these days, and that the cross-pollination of ideas must be allowed to flow freely in order to maximize benefit to society.  Allowing any good idea to be frozen for years by a patent does more harm than good in today's society.

What if TimBernersLee had to negotiate rights to use the hyper text patent and the client server patent and the packet network patent before anyone could use the WWW?  Would we have the internet today if all these foundational ideas had been locked up in patents for decades?

When someone does create or find something new, it is a valid concern that they would not release it and would keep it as a trade secret if there were not a patent system. Or just never release it in any form, so the world ends up loosing.  However, I suspect that invention in software is not that magical.  How long will it take for someone else to invent the same thing (or something just as good) if there's really a need for it?  I believe months would be lost, but not decades.

In a healthy competitive, and open environment, I believe that good ideas will emerge from many different sources.  If one guy chooses not to publish, or use, his invention, someone else will invent it again in short order, and the invention will reach the world anyway.

The motivation to invent comes from the fact that the first one to market wins market share.  The motivation to invent comes from social recognition. There are plenty of reasons for corporations to invest in R&D, even without patent protection.  Trade secrets are always available for protecting most inventions for short periods.

I believe software patents are bad for society, because I believe they slow down innovation instead of speeding it up.  Software technology moves too fast to be tied down by multi-year patents, and short term patents are pointless.  We can still sell and lease software technology with legal contracts as trade secrets without the help of software patent laws.

-- Curt Welch

----
See also: GeneticPatents, InanePatents
----
CategoryLegal