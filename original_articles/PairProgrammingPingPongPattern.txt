I haven't seen this described anywhere, so here's how PairProgramming works in my team.

	* A writes a new test and sees that it fails.
	* B implements the code needed to pass the test.
	* B writes the next test and sees that it fails.
	* A implements the code needed to pass the test.

And so on.  Refactoring is done whenever the need arises by whoever is driving.

We find that this method keeps both programmers in focus (or at least exposes "blackouts" early).

By the way, this is PairProgrammingInCpp.

---------
CategoryPairProgramming PairProgrammingTestimonials