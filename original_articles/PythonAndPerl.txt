This page is about PythonLanguage and PerlLanguage, but it is not PythonVsPerl (see ComparingNotPissing).

Both languages have a lot of character, and they prefer that the programmer work with the flow of the language.

It sometimes seems like Perl is an analogue to driftwood: organic and interesting and engaging the whole personality of the artist.  Python is more like carbon-fibre-composite: slick and perhaps more appropriate for big high-tech jobs, but also very beautiful in a way.  AllAnalogiesAreFalse.

----
In some ways, Python has a lot of the benefits of the Smalltalk philosophy: cleanliness and simplicity.  Conflicts between simplicity and the RightThing, are resolved in favour of simplicity.  (Contrast this with Perl, C++, VisualBasic and the EiffelLanguage. The length of ObjectOrientedSoftwareConstruction at over a thousand pages illustrates what can happen when you scrupulously try to do the RightThing.)

Some generalisations:
	* Perl is about WorseIsBetter.
	* Python is about DoTheSimplestThingThatCouldPossiblyWork.
	* Eiffel is about doing the RightThing.
----
For a comparision page, this sure seems to have a bias. Complaints about Perl's cleanliness can be dealt with by a small application of discipline and/or (failing that) PerlTidy.
----
Why choose, when you can have both?  See http://www.zope.org//Wikis/zope-perl/FAQ for "pyperl", which embeds Perl in Python (Zope support is optional).  (Still in beta state as of September 2000.)
----
CategoryProgrammingLanguageComparisons