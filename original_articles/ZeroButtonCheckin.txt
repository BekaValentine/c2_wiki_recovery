	Zero Button Checkin:	If we can commit our changes to the shared development source code repository whenever all the tests pass, and checking in more often is good, then why don't we check in '''every time''' all the tests pass?

Similar in concept to ZeroButtonTesting, what if our tools automatically ran all the tests whenever they could, and when all the tests passed, shared all of our changes with all other developers on our project?

Specifically...
* Whenever the software under development is in a state where the tests could be run...  (IE: For compiled languages, it would have to compile successfully.)
* Run all the tests.
* If all the tests pass...
* Automatically update the local source code from the shared repository, receiving any changes committed by other team members.
* If there were changes, and no merge conflicts that couldn't automatically be resolved, then...
** Run all the tests again.
* If all the tests still pass...
** Check in / commit all local changes to the team's shared development repository.
** Comment the change (if needed) as changes needed to support the story or bug fix currently being worked on.  (There would have to be a way to configure this in the tool, for the process to be fully automated.)

This is a concept that was discussed on this thread of the ExtremeProgramming Yahoo Group:
http://tech.groups.yahoo.com/group/extremeprogramming/message/149317

----
CategoryAutomated CategoryTesting