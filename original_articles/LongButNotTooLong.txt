''Artifacts Using a shorter version of very Long Names '' ThinkingOutLoud.DonaldNoyes.20101103.20131024

----

Names should be given to H''''''yperArtifacts which are LongButNotTooLong in order to convey the necessary context. Since they will usually be made up of at least two WikiWords in compound, they will necessarily be long. The rule for artifact naming is that they make the artifact they name clearly identifiable as to their name, place and handling at a minimum. 

Some one created a long name which is somewhat ironic: VeryLongDescriptiveNamesThatProgrammingPairsThinkProvideGoodDescriptions 
This might be reorganized using ArtifactDescriptor''''''s to 
 ProgrammingPairs_using_LongDescriptiveNames 
alias 
 WardsWikiPage_VeryLongDescriptiveNamesThatProgrammingPairsThinkProvideGoodDescriptions 

----

There are various existing topics that debate naming techniques. There is little agreement, I should warn.

''This is offered as a clarification of techniques or practices in projects involving HyperArtifacts, not as a definition, but more along the line of "this is a way one might shorten or tokenize long names".'' Most would agree that excessively long names are less desirable than are shorter, yet descriptive names. In fact the use of tokens in place of repetitive long strings as aliases can be a very GoodThing. 

As an example the InterwikiPrefix token of from two to four characters can be a good use of this technique. For example in some wikis (Clones of EddiesWiki) the prefix used as c2:FrontPage can serve as an abbreviation for the url prefix to the page name of WardsWiki meaning: http://c2.com/cgi/wiki?FrontPage. 

This technique is used in html where a base reference for oft repeated characters in an anchor is supplied as a prefix where it is simply omitted.  Thus if one uses <base href = "http://c2.com.cgi/"> once, usually in the <head> element, the reference for the above would be "<a href = "wiki?FrontPage"> - saving over a dozen characters for each anchor. 

Examine the page source of this page and you will see this used.

----

If you use long titles like that in code I have to maintain, I'll print out the entire application and make you eat every last fucking page of it, without water!

''Or, '''you''' could take typing lessons.''

It can hurt '''readability''' also (although WetWare preferences vary widely). Somewhere in this wiki is a discussion on that. RelationalDatabaseFieldNames also covers it.

''Typing lessons can hurt '''readability'''?  I'm intrigued, and would like you to tell me more.  Please send me your brochure.''

"It" = long shit. I'll be happy to send you a brochure of long shit, and a real sample.

----

A WikiWord is an entity which by technical means (being parsed by an engine) has a stronger boundary to its context than spoken names/words. A WikiWord either references a page or it does not; its context is the context understood by the engine (typically either the single context implies by the engine e.g. WardsWiki or the page NameSpace for more powerful engines). 
For a spoken word the context is cobbled together from many more sources like URL, wiki engine, author, language inference, sentence position... These context information support and add to each other in the end identifying the target of the word sufficiently. 

Now words can have different length too. How long can a spoken word get? Depends on the language. Sometimes words are really word sequences (e.g. "artificial intelligence"). Lets assume that we had a way to detect these as single wiki words (so ArtificialIntelligence). How long do these get in natural language? As long as neccessary and practical. 

On this wiki there will be no collisions for two part wiki words. But that is just because this wiki is small.
Look at Wikipedia and see how often their words contain a context indication like "Xxx (name)" or "Xxx (film)". You wouldn't want to supply this (neccessry) context each time you use that WikiWord. 

How do you supply the context? 

One way is to use a NameSpace. 

-- Gunnar Zarncke
----
Here is what you're going for:  concision ==> Unique''''''Ness <== maximal descriptiveness; like a good word in Literature, these two countervening pressures work to create new and evolving WikiWords.  --MarkJanssen
----

CategoryOrganization, CategoryNaming