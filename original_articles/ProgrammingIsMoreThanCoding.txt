I'm sure you've met these "programmers" too.  They like to write code. Forget this design stuff: they like to write code. Testing? Forget it! they like to write code. Gathering requirements from users? How boring! they like to write code. Discussing the business plan with the CEO, to make sure the architecture of the system fits into it? No thanks, they're not business people: they '''just''' like to write code.

I'm JustaProgrammer, but I think all of the above activities are part of my profession, and they all relate to programming. So to these coders, I say: grow up, take the good with the bad, and turn yourself into a well rounded, useful ''programmer''. After all, programming is more than coding.
----
This becomes especially obvious when you consider that CodingIsJustDataEntry.
----
Programming consists of four distinct kinds of activity, which map to the FourProcessesOfConsciousness in general:
	* Analysis -- Perception
	* Design -- Thought
	* Coding -- Action
	* Testing -- Feedback
How could you do any one of these in total isolation? How could you do without any of them?

A big problem with the WaterfallModel is trying to separate the above actions into distinct tasks often performed by different people and that XP, in contrast, tries to do these things in parallel.
----
Tough programmers don't ''program''; they ''code''. And that's what makes them special.

''What's a tough programmer anyway?'' See the StoryOfMel.

CodingWithoutThinkingIsaRecipeForDisaster.

'''However'''

When everybody's sitting around thinking, and thinking, and doing ''more'' thinking, and yet nothing gets done, because maybe some more thinking is necessary (AnalysisParalysis) '''then''' the person who takes the bold step of actually writing code is indeed a hero.

''Oh? Even when that code turns out to be useless? How about if it leads the team up the garden path?''
----
See: ListeningTestingCodingRefactoring

Contrast: ItsAllCodingOrItsAdministration

Contributors: EdwardKiser, WayneMack