InfoSelect is the high-performance JunkDrawer of the data storage world.

Home page: http://www.miclog.com/

Current version (Nov 2006): http://www.miclog.com/is/2007/index.shtml

Previous version: http://www.miclog.com/is/8/features/index.shtml

Older releases apparently are available at a discount from the newest release.

It has evolved over a couple of decades from a DOS product (TornadoNotes) into
a killer app in its own right.

It integrates word processing, browsing, email, disk management, and data organization
with a tree-structured outline manager.

Its searches and filtering are blindingly fast -- and this is what has kept it
alive over the years -- that, and the fact that it's been traditionally pretty
agnostic about where its data comes from.

I've used it for years.  It's been both a boon and a frustration for me.  It does
its basic task better than anything else (arbitrary heterogenous data storage)
but some of the more recent features are "almost" implemented correctly, in that 
"make you crazy" kind of way.

Nonetheless it's a good thing. -- GarryHamilton

Someone has this on their list of things they can't live without: http://www.pkshiu.com/tech/laptop_tools.html

----

'''Why it's so good'''

InfoSelect uses a progressive, keystroke-by-keystroke, elimination/narrowing technique to isolate desired data.  You hit the "find" key and start typing.  Usually, by the third or fourth keystroke, you've got a small handful of possible targets and the titles will generally allow you to select the desired item.

Imagine you are browsing wiki and you see a remark containing a word or phrase that you recognize or that makes you wonder if a related expression is discussed.  You hit the MagicKey (yes, I know, browsers can't do this unless running an applet) and begin to type the word "regulatory" (or "metaphysical" ...) and with each keystroke the candidate count drops until, after a portion of the word has been typed, the count is below 10 or 12.  At that point you would press <enter> and receive a list of the pages that contain the word or phrase.

This allows you to "zoom in" on text data so fast it's teleporting.

I've implemented this technique using FoxPro and its high-performance indexing to allow customer service personnel to "browse" the text memo content of tables containing discussions with customers/officials/other staff.  The user response was overwhelmingly positive.

Now all I have to do is find a way to do something like this via a web browser.

''Isn't this Incremental Search from GreatEmacsFeatures?''

Well, they've had this technology since DOS 2.x, and I've never seen another product that presents the results in quite the same way.  I'd have to say probably not from Emacs, although the FoundationConcept might have derived from it.  -- anon

This sounds closer to the way many of the MacOsx search boxes now work.  For example, when looking at a PDF file in Preview, when you start typing into the search box the drawer changes to show a list of matching phrases, which updates after each keypress.  IncrementalSearch in Emacs is closer to the LeapKeys of the CanonCat as described in TheHumaneInterface and TheHumaneEnvironment.

My mother used InfoSelect as a customer contact file when she took over marketing at a family business.  She used it to augment her memory, to help get customers who were doing similar things with her products in contact with each other.  The free-form data format was nice and flexible as she grew into the job and evolved her processes.  -- IanOsgood
----
CategoryPersonalInformationSystem