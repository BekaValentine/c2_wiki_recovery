http://www.newlisp.org/

A new cross-platform dialect of LispLanguage (a ModernCleanLisp) which (allegedly) strips out lotsa cruft from CommonLisp, brings in more interesting features from SchemeLanguage, and provides a standard and modern set of libraries for interfacing with the OutsideWorld.  Click on the link above for a LaundryList of features.

''No proper TailRecursion or FirstClassContinuation''''''s?''

To be fair, those items are only required for scheme, and ''most'' common lisp implementations lack first class continuations.  Still, I found newlisp pretty lacking in simple things like lexical scope (their claim is a crock -- newlisp has package prefixes, not lexical scope).  I wonder what other features of this language fall down under any scrutiny.  Anyway, nothing mzsheme doesn't have, nothing to see here...

newLisp claims to have a unique memory management scheme, which they call "One Reference Only Memory Management".  For more info, see http://www.newlisp.org/MemoryManagement.html

''This sounds like they have re-invented they way C does it -- just make the following replacements in their description and see what it sounds like:''

''Replace their "reference to memory object on the result stack" or "object not referenced by a symbol" with "function-local variable (on the stack)".''

''Replace "object referenced by a symbol" with "static or global variable".''

''Replace "higher order evaluation level is reached" with "the function returns".''

That was my impression too, but NewLISP is slightly different.  It uses DynamicScoping, so functions can reference any variable higher in the call stack, so there really are no "function-local variables".  It's more like assembly or Forth with manual memory management. -- JonathanTang

----
CategoryLisp CategoryLanguageImplementation