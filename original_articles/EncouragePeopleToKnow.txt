You cannot argue something to your colleagues because
of different experience. It's sometimes impossible
to transfer the information in a rational manner.
The solution is to try to develop common experience,
so EncouragePeopleToKnow something you feel your experience
depends on. Things I've tried successfully:

	* SmalltalkLanguage (EncouragePeopleToKnowSmalltalk)
	* Wiki.
	* ExtremeProgramming.
	* Patterns, as the way to communicate.  ''(not only DesignPatterns)’’
	*  ‘’ - - After more then 10 yrs - - ’’
	* Functional programming and Haskell 
	* Constructivism, intuitionistic logic, type theory and Agda
	* Category theory


Learning common things leads to recognizing the common patterns.

Don't forget that you're encouraged to learn too :)
-- PavelPerikov

''[Dealing with disappointment when people don't'' like ''Smalltalk/Wiki/XP/Patterns is left as an exercise to the reader. ;-)]''

Nice notice :)) Ok, I'll try to give the reader a hint about dealing with disappointments. First, ''even'' if someone doesn't like the above, they now have a sort of experience that can help you both to communicate. The goal was not to EncourageToLike, but EncourageToKnow. Second, if they don't like something you think is very essential to you, maybe it could be smart to consider effectiveness of collective work. You probably ''need'' some common preferences to work effectively. 

-----


''Sorry; I thought you meant DesignPatterns.  So what other kinds of patterns do you use for communication? -- jtg''

Jeff, here I meant patterns as the common way to structure knowledge. See OrganizationalPatterns, LearningPatterns, NegotiationPatternLanguage. -- PP


-----

''[ <MoveMe>  Should we make an unowned list of ways people found of creating a "common bond" with coworkers?  </MoveMe> ]''

Yes

''[ <MoveMe> Ok, one thing that I would like to put in the list but am afraid to, is paying attention to psychological aspects of people's technical reasoning. This is a part of ongoing research I hoped to sometimes to publicize on Wiki to get some feedback. It doesn't seem that there's much done in this area. </MoveMe>]''


'''General List, not owned by anyone:'''

	* DesignPatterns -- the language of OO design.

-----

In my experience, anything in common works. In one of my jobs, four of us played coin-op arcade games together at lunch, and that became our common framework for explanations.

''Everything can teach you if you're eager to learn. MineSweeper game is an example :) -- pp''
