Web browsers suck. They're getting better, but they still have a very very long way to go. Let's brainstorm about useful features that could be added on to web browsers in the near future. (And maybe to keep things focused, we should eschew features that would require new protocols, technologies, etc., etc.)

... Or maybe these features are already implemented in some obscure browser?

----

'''A columnize feature'''

My monitor at work is set at 1280 x 1024 resolution; if I'm reading a really really long article I want to be able to maximize the window, right-click the page, and split the text up into three columns. That way I can use all my pixels, but without unbearably long lines.

You'd have to figure out how to make this behavior integrate well with scrolling up and down, but I'm sure there's a way to do it.

''Yes, make it so when something disappears off the top of the third column, it appears at the bottom of the second. It would look a bit weird, but it would work.''

http://www.w3.org/TR/css3-multicol/ ImmeÃ«mosol - 22-08-2006

----

'''Use thead/tfoot'''

HTML now supports headers & footers for tables. A good browser would try to ensure that, when a table was larger than the window, that the headers & footers would remain as you scrolled/paged through the contents.

Like the columnize thing, this may look a bit weird being done dynamically in the browser instead of statically for the printed page, but these sorts of things that had long ago been solved for print need to find their way into browsers.

----

'''A useful cookie management window.'''

Think of a window of scrolling text, that tells me info about each cookie as it comes in, but doesn't do what both Mozilla and IE do; it doesn't create a new dialog box every time a cookie comes down the pipe. I don't want to have to click a button to approve or deny each cookie that shows up; just show me the list as it's created. If I want to delete a cookie, I can do that after it's been saved.

Also useful, and available in some browsers, are more contextual smarts about cookies. Some browsers can be configured to never accept a cookie from a domain that contains the string "adserver", or never accept cookies that come from other than the domain of the html page being rendered (ie. image cookies), or to treat all cookies from domain X as temporary for this session only (overriding what the cookie specifies), and so on.

For some time now Mozilla has had a cookie-management feature like the above described. View the list of stored cookies to see the Name, Host, Path, expire time, secure status, and the "information" field. You can delete them and also say to never re-accept that cookie. -- StevenNewton

----

'''Auto-anchoring'''

A well-formed large document, with lots of <H2>s, <H3>s, etc, could have a list of anchors automatically generated. So if the author didn't do it, you could have the browser come up with the list itself, and display it in a window on the left side. They'd function like anchors in that you could click on them, and they'd go to that point in the document.

(This would also have the nice side-effect of encouraging authors to use standard heading tags, instead of the godawful "FONT SIZE=5" crap littering the Web.)

''Ever since Mosaic, I've wished that Web browsers extracted the <Hx> structure from a document and displayed it using a tree widget. The ability to collapse or expand sections of the document lets readers quickly navigate the entire document (e.g., TreePad). With a small set of commands (expand/collapse node, expand/collapse all nodes of this type, view/hide non-header content), browsing documents (even ones that use <H6>) would be a snap.''

''The W3C testbed AmayaBrowser extracts the <Hx> tree, but displays it in another window which isn't tightly linked in the way envisioned above.''

''This was also a feature of Peter Brown's pre-Web HyperText system Guide.'' 

''Someone should add that to Mozilla as a sidebar... it'd probably be pretty easy. --ThomasTuttle''

----

'''Insert into history.'''

I think it would be nice if you could open a link without it clearing all subsequent history items, by having it insert itself into the history.

''This feature was implemented in IBM's WebExplorerBrowser that comes with OS/2 version 3 (~1995) and 4, it is called the "web map", which is a page you can call up with a click of button, showing a tree of the pages you have visited in this program instance. Unfortunately, not much effort was spent on it since and it quickly become obsolete.''

----

'''Less use of mouse.'''

You can go back to the previous page in IE with Alt-LeftArrow, and go forward with Alt-RightArrow. I wish there was a tag <next> or something that told the browser which link led to the continuation page of the current one. So instead of pressing 'next' link or whatever, You could just hit a key or key-combo to go to the next page.

''There are already tags for that -- the LINK tag with attribute "rel" having values like index, home, first, last, previous, next, copyright, help. Some browsers already support these tags.''

''Of course, the LINK tag has existed for a few years now and, to a first approximation, 0% of page authors are using it. It would be nice if latex2html at least did.''

Not quite 0%. Here are three URLs to pages that use LINK tags:
	* http://www.w3.org
	* http://www.htmlhelp.com/reference/html40/head/link.html
	* http://www.gnu.org/manual/make-3.79.1/html_node/make_1.html#SEC1

''(Three sites *are* zero percent, to at least four digits of precision.)''
(And two of them are sites about HTML; I want to see it at Wired.)

If you're using a recently Mozilla nightly (post October 3, 2001), you'll even see the links nav bar, which landed on the trunk then, and is scheduled for in the 0.9.5 release. -- StevenNewton
----
In a related vein, see the Pornzilla project (http://mywebpage.netscape.com/aufbau01/), which is an effort to turn Mozilla into the best porn browser around. It's hard to tell if there are actually programmers contributing to Mozilla under the Pornzilla banner, but at the least there's a focused list of porn-related bugs & enhancements.

----

'''Better Content Filtering/Blocking'''

Mozilla-based browsers allow one to block all images from a given domain, but it would also be nice to be able to block just specific images and also block all content from given domains.

''Try the Privoxy filtering proxy [http://www.privoxy.org/]. It can do all these things, as well as de-animate GIFs, filter cookies, and block images selectively based on their dimensions (great for filtering out banner ads). Configuration is done with the PowerOfPlainText. I've used it for several years, and find it blocks >99.9% of all ads.''

iCab lets you specify servers to block, as well as image widths and heights you don't want to see.

----

'''WysiWyg Editing''' (TimBernersLee''''''s'''''' original vision)

Wiki itself would be much better if it had some form of WysiWyg editing. There is no simple way of doing this with existing browsers. In fact the whole GUI aspect of the browser could be improved to allow truly portable web based applications.

'''Not true any more!''' I'm sure that the skillful application of MozillaXul in the MozillaBrowser could address this. I've been kicking around a bit of code to do it, but I need to brush on JavaScript enough to know how to write a WikiName recognizer. -- StevenNewton

----

'''Extensibility via Lisp!'''

Extensibility via Lisp would be way cool. I much prefer Lisp to javascript.
--BruceIde

Damn straight it would be cool! There has been one web browser implemented in Lisp, or so I'm told... but I don't know its name. Anyhow, there are no free implementations which provide concurrent GC or decent threading support, so that's pretty much out. I suppose something could be written in C with librep. -- DanielKnapp

The Emacs W3 web browser is, of course, written in Emacs Lisp. And DrScheme
has a simple HTML viewer/web browser used for the help system.
DrScheme also has support for threads. They are not OS-level threads, IIRC.
-- StephanHouben

----

'''Disable Pop-ups''' 

Ability to right click on a web page and select property "Disable pop-ups from this domain". Global property in settings that disables all pop-ups (instances of DOM window.open() ). --MichaelLeach

FYI: Mozilla and the Linux Galeon browser (Probably Konqueror too) allow you to disable pop-ups. With Mozilla you have to check an item in the preferences. In Galeon all the handy features are accessable via the menu. You can also disable animation. The web is a lot less obnoxious with those features turned off.

This just in, Netscape now does Pop-up Blocking!

----

'''Keyword Search-based URL Management for Bookmarks/Favorites'''

I would like better integration of saved links (Netscape Bookmarks and IE Favorites). The newest versions of the Opera browser have a good start on new features. An URL organizer named ''PowerMarks (http://www.kaylon.com/power.html)'' has great data management and usable interface, but is an add-on/launcher, not truly integrated. Hierarchical drop-down menus are too organizationally limiting and slow, keyword searching are really the next generation. Though not context-sensitive, they are intuitive, and faster. There's no fixed structure to learn or single field hierarchy. Any and/or all fields are searchable. A standardized set of core ''property fields'' autopopulated upon a ''save'' function could streamline adding contact-style details, like the ''property fields'' of normal data files on the Microsoft Explorer file summary tab. Then we can truly manage URLs instead of just sorting them. -- GregGola

----

'''Spailing chekker!'''

One that hilites suspicious words and allows you to right-click on such a word to see options.

Further, the ability to embed an editor of our choice. IOW, create a standard interface so that many vendors can supply editor products to the different browsers.

----

'''Business-Form-Friendly-GUI'''

A page would not have to be entirely redrawn just to change one small portion. True, one can emulate such with DOM and frames, but it is not very graceful. 

Standardized "grid" widget for spreadsheet-like data entry and display.

See also: RemoteGuiProtocols

----

'''Back Options'''

Some pages ask to be refreshed upon re-visits. However, sometimes I wish to go back to a prior page without refreshing. Thus, a "Back-without-refresh" option would be nice.

----
----

'''Note that what follows are proposed additions to ''HTML'', not Web browsers.'''

----

<MAIN_TEXT> / <VOICE_2_SPEECH> tag

I'd like a tag dedicated enclosing only the main message text of a Web page. I'd guess 98 percent of Web pages are communicating through written words, versus graphics or sound files. Even though reading (visual) is faster than listening (audio) for gathering information, it would be nice to have a tag to parse just the written content for conversion to speech (text-to-speech) for times when you can't visually learn/be distracted, such as listening to the radio while driving. I'm sure something is being discussed for ''Web-to-phone'' use, but I suspect it we be a new markup language rather the modifing the existing HTML specs. IHMO creating another markup language would just add an unnecessary higher layer. I know of programs that will extract some text, but they are too inaccurate and limiting. My guess is due to a lack of a standard parsing tag. I don't know all existing tags, but propose something like: '''<STORY>, <MAIN_TEXT>, <CONTENT>, <VOICE>, <SPEECH>''', or just plain '''<TEXT>'''.

''This can be accomplished through judicious use of CascadingStyleSheets.''

----

<SAMEPAGE>

For short units of content that should not have a page-break inside them. Example use: a headline, topic paragraph, and picture. Another example: the picture itself. 

This is similar to CSS' "page-break-inside=avoid" property, but can be extended over more than one <P>, <IMG>, or <Hn>.

Work-arounds: table cells and images do this in Netscape Navigator 3.0, but Microsoft Internet Explorer does not.

Why don't you just use a <DIV style="page-break-inside: avoid"> around the elements you want to stay together? -- Jesse Ruderman


----

<PHRASE>

Similar to the nonstandard tag <NOBR>, a <PHRASE>'s contents should not be broken across lines.

''Why not just standardize NOBR?''

''Why not just use &nbsp;? That's what it's for! -- ThomasTuttle''

CSS "white-space:nowrap" does this

----

'''And just how many languages do we need?'''

How about one non-freaking language? Spaghettiing my way through a site with HTML, CSS, JavaScript, and PHP all twisted together is nigh on kissing chaos itself on the lips, but combined with having to account with cross-browser and resolution inadequacies is the equivalent of diving head-first into a pile tomato sauce.

----
See also: ToggleYourFlash
----
CategoryWebDesign CategoryWebBrowser