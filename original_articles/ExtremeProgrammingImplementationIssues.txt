As a result of our ongoing field research (AlejandroGoyen ArielErlijman) we have found a series of XP implementation issues that repeateadly appear on discussion groups such as Wiki and EGroups (http://groups.yahoo.com/group/extremeprogramming).

Here are links to pages open for discussion. If you have any links/references to information related to each issue and/or its possible solutions, feel free to add them.

	1. ExtremeProgrammingWithLegacyCode : XP implementation issues in legacy code/systems
	1. ExtremeProgrammingTestingPrivateMethods : Should private methods be unit tested? If so, how?
	1. ExtremeProgrammingPracticeAdoptionOrder : Defining an optimal order in adopting XP practices
	1. ExtremeProgrammingTestingGuiIntensiveApps : Testing GUI-intensive applications
	1. ExtremeProgrammingSpareTime : What to do as an XP programmer when you're done with your engineering tasks
	1. ExtremeProgrammingUnitTestingApproach : Test-Code-Refactor Strategies (nested, serialized, etc.)
	1. ExtremeProgrammingChallengeTwenty : Defining priority between fixing bugs or implementing stories
	1. ExtremeProgrammingMetaphorVsArchitecture: Is the metaphor a valid substitute for System Architecture?
	1. ExtremeProgrammingSimplicityDefinition: What does "simplicity" mean from an XP standpoint?
	1. ExtremeProgrammingChallengeTwentyOne: Keeping user documentation in sync as application develops
	1. ExtremeProgrammingChallengeOne: Is XP applicable to all software development projects, including compilers and embedded systems?
	1. ExtremeProgrammingDependencyManagement: Should we track dependencies between logical/physical components?
	1. HundredPersonProject: Can XP scale to large development projects?
	1. ExtremeProgrammingChallengeNine: Is XP applicable to projects that require formal documentation?
	1. ExtremeProgrammingMultipleVoices: How to deal with multiple client "voices"
	1. ExtremeProgrammingSourceCodeCollision: Are tools the solution to avoid source code editing collision?
	1. ExtremeProgrammingStoryDependencyManagement: Should we track dependencies between stories?
	1. ExtremeProgrammingInDistributedEnvironments: Is XP applicable when team members are  geographically separated from each other?
	1. ExtremeProgrammingProjectVelocity: How should Project Velocity be calculated for the first iteration?
	1. ExtremeProgrammingContinuousIntegrationIssues: How to integrate continuously if the build process takes hours or even days?
	1. ExtremeProgrammingOpenWorkingAreas: Some developers cannot concentrate in open work areas, and prefer quiet rooms.
	1. ExtremeProgrammingPairStrategies: How should pairs be formed in XP?
	1. ExtremeProgrammingUnitTestCode: Should UnitTest source code be treated with the same importance as production code, or should it be treated as "second-class" code?
	1. ExtremeProgrammingRoleCompatibility: How should XP roles be distributed in small teams?
	1. DevelopersAreMasochists: Sometimes we seem to enjoy the rocky path.

AdoptingXpPatternLanguage: A catalogue of approaches to take for getting an organization to transition to XP.
----
As of 3/15/2001, we've opened a discussion group at EGroups for spanish-speaking people: http://groups.yahoo.com/group/xpspanish
----
[CategoryExtremeProgramming | CategoryAdoptingXp]