From NewLanguagesForXp:

I'm starting to believe that the IT industry is staffed 99% by ''lemmings'' and 1% by people with a clue. Woe to you if you are in that 1%, but you don't control the decision making. IT can really suck the big one. --AnthonyLander

''See SturgeonsLaw''

Let me speak up for the lemmings for the moment.  Some at least of the 99% have seen the difficulties caused by decisions for technologies that seemed best on a purely technical basis but that turned out to be ... kind of less than the best.

For one very old example, when I arrived at the famous large company where he worked in 1990, DaveSteffe told me about how their techies of a few years before had decided that the DigitalEquipmentCorporation Rainbow was much superior as a personal computer than that cobbled together IBM effort.  The Dec salesman was delighted by the level of standardisation that followed.

They were still cluttering up the hallways and every unused boxroom when I got there.

--RichardDrake

I understand what you're saying, but that's not what I'm talking about. I'm talking about mindlessly discarding effective, working solutions only to replace them by (hopefully) equivalent systems which provide no more functionality than the original, for only the cost of twenty man-years effort and solely justified by the sad fact that everyone else is doing it. Or at least, the magazines lead you to think that everyone else is doing it. The lemming mentality is to follow blindly what's going on without thinking for yourself.

As to your example above, the techies obviously made a mistake in that they did not understand the larger picture, which RichardGabriel so aptly describes as WorseIsBetter. But even if they were wrong (this time)...at least they were thinking for themselves. --AnthonyLander

----

The DEC Rainbow decision was made by the 1% based almost exclusively on a 33% hardware discount from DEC. In addition as a ''DEC House'' they did so hate BigBlue. The 1% were most definitely thinking for (about) themselves! How could they recommend purchasing kit that ignored the very discount they negotiated? They completely ignored applications software which was of course tied to the operating systems (CP/M or a ported DOS). The 1% were blind and they did follow blindly. ''All'' DEC PC gear was replaced with IBM-PC/compatible systems within 15 months. Great, efficient use of capital eh!?

Er ... thinking for DEC rather than themselves perhaps.  Sorry my memory was so hazy.  But my main point is that DaveSteffe (as a user rather than an IT person in those days) recommended the 'right' thing (IBM compatible PCs) from the start, simply through having a broader perspective - a better idea of the real SuccessStatement's as I'd say now - rather more of a technical ''clue''.

Anthony, when you say ''effective, working solutions'' you're not thinking of Smalltalk by any chance?  I'd be interested to pick this up if so (and quite possibly if not!) - and take this back into NewLanguagesForXp.

''Well, you got me. Yup, I'm talking about Smalltalk. --AL''

WorseIsBetter (the page) talks about smallness, which is very close to my heart, but of course in the standards area size (the number of real users and the number of applications in Dave's example) does matter. 

LemmingsCreateStandards - how can those who have a real clue influence the final direction?  In languages especially ...

--RichardDrake

----

I know of only two ways: 

1. Have a clue...and $10 million. You can make your opinion count if you have lots of money.

2. Provide the only practical solution in a problem space. Leave them no choice.

Failing that, I think you must proceed exactly as RichardGabriel describes: Make something small, that run on every computer no matter how old, that runs on every operating system no matter how arcane, that spreads like a virus onto every system with great speed, and that provides only a half-***ed solution to any problem. Right now, I'm thinking of a word that starts with J...<sigh>  --AnthonyLander

WikiTherapists ... there's another one to attend to right here.  He may be close to giving up ...

''Sometimes Wiki feels like a bunch of old chess players complaining about everything wrong with the world, loving only the game.''

Hold that thought for ten to twenty years, and see how it sounds then.

''LifesJustTooShort to love only chess.''
-----
Conversely, LifesJustTooShort to ignore your true love.

Furthermore, I don't think the lemmings are responsible for the dearth of Smalltalk interest out there.  I think it's pretty clear that this was an industry war between vendors, and like the UNIX world, it tore apart the demand for Smalltalk.  One would hope that Squeak will one day do what Linux is now doing to revive interest in UNIX.

''Absolutely. But they are certainly responsible for adopting bloated, inferior technology in its place. Some people justify it quite well: Better industry support, larger workforce, etc. Sadly, more often, though, the justification is this: Everyone else is doing it. --A.L.''

The lemmings don't always create standards:  Smalltalk has succeeded in ways that transcend itself (manifested through the GUI, the mouse, the IDE, the symbolic debugger).   These standards are fundamental to computing today.

''Very true. Arguably those are the most important contributions from Smalltalk, and they are ubiquitous. --A.L.''

WorseIsBetter could be summed up in two statements: "spread like a virus", and "start small, think big".  Smalltalk took an evolutionary approach to its development, which I think embodies the second part to WorseIsBetter:  breakthrough, successful software is grown through experimentation.           BigDesignUpFront isn't going to yield breakthrough results.

Unfortunately the industry fouled up the "spread like a virus" part.

--StuCharlton

I agree about Smalltalk's beauty and influence but have two questions:

1. I haven't read Gabriel's original but in some senses "start small" was something Smalltalk-80 as released by Parc(Place) got absolutely wrong.  Price, size of image, size of learning curve ... that kind of thing.  Didn't this have a lot to do with the failure to "spread like a virus"?

2. ''"Smalltalk took the evolutionary approach"'' - well in some ways yes and in some ways (for example syntactically compared to what most people were used to) no. But more importantly, when AlanKay said BurnTheDiskpacks in 1976 (see also EarlyHistoryOfSmalltalk) did he want something much "smaller" than had evolved up to that point that might only have come about from a revolutionary "throw it all away" decision?  Now twenty four years later is Squeak Kay and Ingalls' second chance to show the value of "smallness" (at least in language/environment design)? 

Of course economic power has shifted just a little in that time - how much was Microsoft worth in 1976?

Evolution isn't the only good. The mind and hand of a designer is needed too, as I believe Smalltalk shows. But '''that''' gets us into deep waters!

--RichardDrake

I think "start small" for me was about how PARC developed a "revolutionary" language in an evolutionary manner (as DanIngalls notes in the DesignPrinciplesBehindSmalltalk).   The syntax is definitely a break from tradition, but the classes/objects concept was more evolutionary (from Simula)... and AlanKay compromised on BurnTheDiskpacks...

You're right though, Smalltalk-80 definitely wasn't ''small''.  Then again, neither is Squeak.. and with the amount of work happening on Morphic and Balloon, I don't see a trend towards "smallness of class library" (yet).  This probably did contribute to why Smalltalk didn't take off, but I have my doubts: look at Java's success given a much bigger (and uglier) class library.

Smalltalk's 'smallness' could arguably be a _result_ of that huge class library.  The language itself is small and expressive, and with the class library a programmer reallly doesn't have to "say" much to do something in the language.  I can't argue the same for Java. :-)   --StuCharlton

That's all fair comment.  I'd only add that Java's original success in gaining worldwide attention in 1995 (see TimeMagazineProductOfTheYear) had to do with applets being able to be downloaded into the Netscape browser reasonably quickly - and then doing something at least eyecatching when they'd arrived.  If the Java language and initial libraries and especially the class loading at run-time hadn't allowed the original applets to be '''small''' the big impact, the J-hype would never have happened.

How big would the download have had to be for VisualAge or VisualWorks to produce the same effect at that time?  And that was 15 years after Smalltalk's initial commercial release.  The fact that Java started small in this sense - and funnily enough Microsoft (with some able help from Sun) has made the code required for Java to work reliably across all browsers far bigger every year since then - was critical to its emergence.

So now indeed we have large ugly libraries, manifestly ugly in fact.  Worth learning the lessons of AppropriateInitialSmallness though.

--RichardDrake

