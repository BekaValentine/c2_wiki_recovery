http://www.cortext.co.il

"When you develop a GraphicalUserInterface for your application, you are faced with two conflicting forces: 

* Users want the usability of desktop applications 
* Users want the ease of administration of web applications 

"Rui balances these forces: develop a desktop application in JavaSwt or Perl Rui, and deploy to the web using Rui. Developers develop using a rich UserInterface FrameWork such as SWT or Perl Rui , and deploy to WebBrowser''''''s with no ActiveX, plugins, or Java on the client. 

"Users get a rich and thin UI, with minimal loss of fidelity. Developers are freed from working with DHTML, JavaScript, and clunky web application frameworks."

This is in a Web browser:

http://www.cortext.co.il/images/screenshots/perl-phonebook.png

----
This light GuiToolkit - written & tested in PerlLanguage, JavaLanguage & JavaScript by RanEliam and hosted at http://cortext.co.il/ - is a magnificent example of these solutions:

* TestFirstUserInterfaces, with tests on both the server and client
* Duplication between the server and client resolved
* Seamless client-side experience, without fetching pages
* Client-side widgets via ModelViewController.

A product that stretches languages' abilities so far (Perl to serve Web
pages, JavaScript to paint widgets, etc.) is often too fragile. But tests
keep this product robust.

The only downside is the product requires InternetExplorer 6. But
remember - in theory, to port to another browser, one need only get the
JavaScript tests to pass.

--PhlIp

----
See also: RemoteGuiProtocols
----
CategoryUserInterface