Almost everybody complains about how messy browser-based apps can be due to HTTP-based protocols not fitting usual GUI expectations.

However, we may be just about nearing the time that browsers with DHMTL, JavaScript, and DOM have enough features and stability to serve as the "GUI assembler language" (or machine language) for better frameworks. Thus, we can now perhaps bring back some of the better GUI development conventions. HtmlDomJsCss has grown into a fat client. 

It does not matter if direct HtmlDomJsCss sucks as long as they can serve as the basic building blocks for more developer-friendly frameworks. We can wrap them with something better. AjaxWebApplications may be the first generation of such.

-- top

''It does matter whether HtmlDomJsCss sucks. For 'GUI assemblers' we need performance and such that does not suck, and we'd still benefit from greater security and primitives to support composition and mashups, and an HTTP design that allows notification-driven AjaxWebApplications to operate without polling the server for updates.''

[EditHint: maybe this can be moved to another GUI/web topic. I vaguely remember a similar topic, but can't find it. -t]

-----
See also: GuiMachineLanguage, GoogleWebKit, ThinClientHasFailed
----
CategoryWebDesign, CategoryUserInterface, CategoryInternet