'''Myth #1.'''	The length of a software development effort can be accurately estimated instantaneously based on a one-sentence description.
	 :	Corollary #1. Providing an accurate estimate is a no cost operation. 
	 :	Corollary #2. An estimate provided at the beginning of an effort is just as accurate as an estimate provided near the end.

'''Myth #2.'''	Once a date has been given, tasks can be added at will without affecting the date. 

'''Myth #3.'''	Once a commitment has been made, the date can be moved up at will without affecting the commitment. 

'''Myth #4.'''	The cost of developing software is not a relevant factor in the decision to go ahead. 

'''Myth #5.'''	No software actually takes more than a week to develop. Most take a day. We have no clue what developers do with the rest of their time.

'''Myth #6.'''	After spending a few days testing software, all possible combinations of OS, browser, language, input files, system state, and user actions should be guaranteed to work.

'''Myth #7.'''	All discrepancies between how much work remains to be done and how much time is left can be solved by the application of magic PixieDust (aka overtime).

'''Myth #8.'''	The supply of magic PixieDust is inexhaustible.

'''Myth #9.'''	Once I receive an estimate, I can just say "do it" and the programmers can do it without any further input from me.

'''General Corollary A.'''	When I receive the software, I expect it to be ''finished''. It should include every feature, even the ones no one ever thought of until we'd been using the software for a month. Plus, it will be totally bug free regardless of the amount of testing done, even if that is zero.

'''General Corollary B.'''	Even though every other software project in the history of the world took longer than expected, this one is different.

'''General Corollary C.'''	Once I see that it "looks" like a functioning application (the UserInterface is done), chock full of cute little pull-down menus, then we can ship it tomorrow.
----
''On Myth 5:''

Programmers try as hard as possible to avoid working because they by nature loathe it. See TheoryXx.

''On General Corollary C:''

See http://www.joelonsoftware.com/articles/fog0000000356.html.
----
See: EstimationWoes

Contributors: JamieNettles

CategoryAntiPattern