Briefly, Ruri's law may be stated thus:

"The vast majority of people are idiots."

Named after Ruri Hoshino, a character on the Japanese animated series ''Martian Successor Nadesico'' (a sendup of Star Trek, Gundam, and just about every other robot anime ever made), who was famous for lamenting "Baka, baka, minna baka" (Idiots, idiots, they're all idiots) about her crewmates on the ship.

If you wish to be kind, you can rephrase Ruri's Law thus:

"The vast majority of people are averse to learning, thinking, or understanding."

Ruri's Law describes the AntiPattern in human behavior that's most likely to drive programmers right up the wall. Most people have lazy minds and are not willing to think things through, or understand them. In today's action-oriented society, convenience and expedience are favored over care and wisdom when it comes to developing solutions for our problems. So people tend to make bad decisions without thinking them through. They also tend to resist learning new things greatly, staying within the comfortable realm of the familiar. Another variant of Ruri's Law at work can be seen when people refuse to let go of assumptions that are dear to them, or in which they have a vested interest.

When a company deploys a flaky, bloated, but pre-packaged "solution" from MicrosoftCorporation instead of developing a more robust and stable solution in-house that could, in the long term, save them hundreds of thousands or millions, you're looking at Ruri's Law in action. I'm sure people on this Wiki can come up with oodles of other examples.

Programmers are not immune to Ruri's Law! Awareness of the problem within oneself, however, can lead to overcoming it, and becoming a better programmer (and a better person).

One interesting explanation for the principle can be found in the M0 and Ghost Not ideas in ReciprocalityTheory.

----

The corollary to RurisLaw:

* The speaker, however, is never among them.

----
''Hominem idiotae sunt''
----
See also SturgeonsLaw