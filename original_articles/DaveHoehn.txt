see MichelleHoehn that's me now

---

Hi. I have been lurking around this Wiki for a while.

I have been programming since I was in the third grade. I went to computer camp a couple of times when I was a kid, and had one good programming teacher in High School, but most of what I have learned has been self-taught from experience and reading.

I did get a concentration in Computer Science at Virginia Tech, although my major was Philosophy due to, um, differences with certain higher-ups in the department.  

I have worked professionaly as a programmer for around six years now, seven if you include some small programming I did at the electronic publisher I worked for for a time.

I like XP although I am currently not in a position to use it, for a number of reasons. However I believe strongly in many of the principles on this Wiki.  YouArentGoingToNeedIt, TheSourceCodeIsTheDesign, DoTheSimplestThingThatCouldPossiblyWork, RefactorMercilessly, CollectiveCodeOwnership, WorstThingsFirst, and probably others which I can't think of right now. I have always been a proponent of prototyping things (as in SpikeSolution). I have not yet been involved in an XP project, but I see that it is probably a very good choice compared to other methododolgies.    

Sometimes, I believe myself to be a MasterProgrammer, sometimes I'm not so sure.  :) 

I'd be happy to go into more details if anyone cares.

-- Dave

''Welcome to Wiki.''

Thank you! :)

''What programming languages do you use?''

The short answer: 
	* currently: C/C++, C#.  A bit of SQL if you count that.  A teeny little bit of client-side Java.  Inline assembler for optimizations.
	* for past serious projects: Visual Basic (with COM interfacing to C++), Pascal (loved TurboVision)  
	* for fun or class only: LISP, Prolog, FORTRAN (blecch!) (haven't done any of these in ages)
	* long ago and far away: Apple/IBM BASIC, QuickBASIC

Gotta say, I have used Visual Studio and Borland C++ Builder, and for using C++, I hate Builder.  Have had to work with it for years now, and the more I use it, the more I don't like it.  (And I used to love Borland products!)  I can deal with Linux C++ code in either KDE or from the command line, although there's really too much hand work for command-line programming for my taste.  And I looove .NET and C#.  (Frankly, the amount of time it took to do GUI work, even if you needed C++, was extremely shortened simply by being able to use VB and C++ COM controls.)  I don't like Microsoft's business practices, but they have certainly made my life easier as a programmer.

----
CategoryHomePage