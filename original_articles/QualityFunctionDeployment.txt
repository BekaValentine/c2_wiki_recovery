Quality Function Deployment (http://www.qfdi.org/)
----
A method that originated in Japan (hence the funny name, it's a transliteration) for mapping and prioritizing customer needs and wants into product, service, and business operations to optimize organization performance and meet or exceed customer expectations.

See TheRoadMapToRepeatableSuccess, for example, and other books on the topic.

At the risk of over-simplification, conducting a QFD is an intensive process, usually facilitated by an expert in the technique, of convening a group of stakeholders to:
	* identify the customer for a project,
	* brainstorm, break down, and priorize the customer's needs,
	* benchmark your organization's competitiveness versus the competition vis-a-vis the customer's needs,
	* identify and break down solution strategies for the needs, and
	* correlate the solution strategies to the needs,
for starters.  The output of the QFD process is a matrix that captures all this information; the matrix can serve as a starting point for the PlanningGame.

Assertion: QFD can help software development projects deliver RealValue.

--RandyStafford

I suppose that in QFD this "convening [of] a group of stakeholders" must include the customer? After all, how can you brainstorm user requirements without a user? But then why would you need to identify the customer? You already have. -- SunirShah

----
Absolutely.  The value of the exercise varies according to how reasonable your facsimile of a customer is.  For example a beta partner is better than a marketing product manager (or, in the case of my last project, a focus group would have been better than a supposed SubjectMatterExpert who was the BigBoss on the project).  This topic is treated in SoftwareRequirements.  But it can be worth some thought to contemplate who the ''real'' customer is.  For example if you're developing an application for a customer service representative to use, is the "customer" the CSR, or whoever they're talking to on the phone?  A chain of customers might imply relationships between their respective needs.

--RandyStafford

Let's not forget that QFD wants to PutaNumberOnIt for everything that goes into the requirements matrix. This completely eliminates the arguments over whether a requirement is "essential" or "tangential" to the finished product. It does not, however, eliminate the need to talk to real end users of the product to capture the relative values of the required features.
----
CategoryRequirements