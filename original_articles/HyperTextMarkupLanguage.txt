HTML is a MarkupLanguage, used to build WebSite''''''s. A markup language is a method of marking up text with semantics or presentation attributes ''(usually the latter, since very few people seem to be able to grok semantic markup)''. HTML is the markup language used for WorldWideWeb content, i.e. InternetExplorer and NetScape can interpret the tags in HTML.

HTML is also the most maddeningly frustrating markup to use, because of its lack of any standard implementation. This has its roots in NetScape's shameless "extension" practices to try to oust all other browsers in the market. MicroSoft, once they had a viable browser engine, picked up on this concept later. Today we have good, well-thought-out, written standards, but nobody seems as quick to implement them as they do to pay lip service to them. The closest we have to real, quality standards implementations are TheMozillaProject and TheKhtmlEngine.

If you write HTML for a living, you might be JustAnHtmlCoder.

-----

You can find the W3C 'recommendations' for HTML/XHTML: http://www.w3.org/MarkUp/ but how these become implemented is another matter entirely. I agree about the uneven implementation so far, but browser-wise, things are looking up. The real battle is to get those writing HTML to adopt the standards, something organizations like the Web Standards Project http://www.webstandards.org/ are encouraging. Beneath these partly-implemented recommendations there are many guides to writing HTML that 'degrades gracefully' under less and less compliant browsers, but still does the fancy stuff on compliant ones. For me, one of the biggest current bugbears is the uneven implementation of CascadingStyleSheets. I could go on and on about this - it's a bit of a speciality of mine. But let's see who else is interested.

Although HTML is not programming as such, I consider markup languages (including such devices as the 'tags' used in QuarkXPress) to be as much part of the programmer's world as other kinds of language. After all, TedNelson''''''s'''''' HyperText and the SGML superset of which HTML is a subset are as crucial to many of the things we now take for granted as (say) C++. -- DaveEveritt

----

As it turns out, TimBernersLee regarded HTML as the least important element of the WWW triad, after URIs and HTTP. He also never intended for people to compose HTML by hand. His vision was for the browser and editor to be incorporated, but as it turned out, folks who worked on the browsers apparently didn't find editors "sexy" enough.

''Too bad he didn't go on with that... Maybe he would've created some system of automatically interconnected pages that any user could edit... No, that seems too unrealistic :)''

-----

Guides to learning HTML:
LearningHtmlAndCss

----

Extremely easy to use. Read by all Web browsers, and most office suites.

May be replaced soon by XML, which is content-based markup, pure and simple. With XML, you must use CascadingStyleSheets to define presentation. Style sheets can be used with HTML, but are not strictly necessary.

IMHO, HTML should be a de facto standard file format for file-sharing, that is, when plain old ASCII isn't "good enough".

-- FrankRobinson

----

Largely considered broken (at least by me). HTML 4/XHTML 1 is an unholy mix of almost everything imaginable, including ancient presentational baggage and inconsistent bloat. Pedantic people should beware of this frustrating language, which, in combination with incomplete implementations of the various levels of CascadingStyleSheets still requires slews of ugly hacks and illogical markup.

The next major version of HTML drops all the worthless baggage and starts fresh, though. In theory, XHTML 2.0 would bring HTML back to what it should be: a logical document markup language. Essentially, it would be like HTML 2 all over again, only as XML with a fixed logical structure (no more <h1>s and <br>s: enter <section> and <line>) and more thought put into it.

Yes, I'm ranting again because I'm frustrated with the current state of the WWW. :-)

-- DanielBrockman

------
''See also: WhyDoesntWikiDoHtml''

I've been told by many of the technicians I talk with that activating the html support that is now incorporated into many of the WikiDialects I am studying activates intolerable security risks (one of RobertDiFalco's points in 'Why...'). Personally, I use it a lot to get at features that I find help me communicate more effectively, but only in my intranet Wiki. I then 'publish' the same text as standard *.htm files in read-only space I maintain on the net. This allows me to mix and match in a manner I have found efficient, without having to maintain separate source files. Watching my work habits evolve lately, I am forming the opinion that no single environment can possibly be 'best of breed' for all of the tasks I must undertake or users I serve. Hence I find myself creating 'composite' sites where content is spread accross quite a few different wikis and other web sites and I use links to take various user groups to whichever one I think best serves the current need. This does reduce some aspects of the 'community' experience, but mitigates many of the 'personal' biasis of individual users. -- HansWobbe
----
'''Syntax Complexity Rant'''

Why the heck did they deprecate "single" statements such as "<br>" for the ugly and bloated "<br />" (with a space)? The first was more human-friendly. HTML is not XML and trying to force to be for obscure reasons is stupid. Kick in the ass to the "standards body". Shame on you. Focus on humans, not on machines. Non-coders and power-users often have to know how to tweak HTML in certain circumstances. These anal rules make that harder. And get off my <lawn />!

''It makes parsing ambiguous.  Is <br> an unterminated opening tag, or is it a "single" tag?  The focus '''is''' on humans -- the humans who have to write code to deal with this stuff.  "Non-coders and power-users" will learn to do it properly; it's not that hard.''

We know what they are because they are part of the HTML language. A "<br>" is a "<br>". Simple. How is that going to bust your parsing panties? The other way is harder to remember, and remember correctly. I've accidentally typed "</br>" and "<br\>" myself before the coffee kicked in.

''Not very good at this "computer" stuff, are you?''

I readily admit I make stupid typos sometimes, and so do most developers and power users etc. That's why I want to see '''human friendly languages''' when possible. If the slightly extra parsing throws YOU off, then maybe you are not very good at this parsing stuff.

''So you'd rather we have separate (and one of them exception-laden) parsers for XML and well-formed HTML?  That attitude is what leads to abominations like IE6.''

Yes. HTML is more geared toward a general audience and '''content authors''' while XML is geared mostly for techies shuffling data around.

----
See also: RefactoringHtml, HtmlSucks
----
CategoryAcronym CategoryWebDesign