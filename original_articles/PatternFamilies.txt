Patterns form Families of compatible and interrelated ideas which together solve problems at a higher level of granularity than the Solution to a Problem In a Context -- these are called Pattern Languages.  Clearly the languages themselves are reusable in a sense of totality or wholeness, but to what extent are the language components, the individual patterns reusable?  What establishes their reusability?  What are the tests or rules which distinguish compatible patterns from incompatible patterns?  What role does CognitiveDissonance play when one decomposes PatternLanguages to Patterns and trys to do combine the elements into new and different PatternLanguages?  

Within its own context or domain PatternLanguages should be true.  This can only be the case if the individual patterns are true.  So don't PatternLanguages imply a particular view of truth within the context of the domain they serve?

A theory of PatternLanguages which addresses decomposition and recombination seems needed.  -- RaySchneider