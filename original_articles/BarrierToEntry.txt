A particularly high level of investment (money, effort, whatever) which is required to be able to effectively participate in some market, etc. - especially one dominated by one or more established players. Applies to traditional business markets, as well as other "markets" that have little if anything to do with money or commerce at all.

Various examples that affect technology:

* The WindowsApi has long been considered a BarrierToEntry (via NetworkEffects) into the operating system market - one that allowed MicroSoft to maintain a monopoly. Several technologies that threatened that barrier were blunted/co-opted by Microsoft (in violation of anti-trust law) - namely the Web browser, and JavaLanguage. (Java has not yet been successfully blunted on the server side, however). It is now alleged by European anti-trust authorities that media codecs/players are another BarrierToEntry.

** LinuxOs did manage to finally knock down this BarrierToEntry somewhat, by providing an OS which is a) more robust than any MS offering (though XP is far better than any of its predecessors); b) cheaper (free, in fact), and c) due to its FreeSoftware nature, unable to be put out of business.

*** Some are concerned that MicrosoftLonghorn will contain new technologies that try to rebuild the MS BarrierToEntry.

* In the programming language field; certain languages (C++, Java)are MainstreamLanguage''''''s; they have an ArmyOfProgrammers and a whole library of ForDummies books written about them, and gazillions of lines of code in production. Other languages, arguably superior, are not widely used. A BarrierToEntry exists; most shops won't consider SmalltalkLanguage (for example) for their IT infrastructure due to a (perceived) lack of Smalltalk programmers, a (perceived) paucity of Smalltalk tools and implementations, and a significant investment in some other language.  Likewise, many programmers (especially MoneyOrientedProgrammers) won't bother to learn a language if isn't something that will get their resume' noticed.

** PerlLanguage and PythonLanguage managed to get their feet in the door (and become "acceptable") much in the same way LinuxOs crept into the corporate computer room - by a) being free, b) gathering a bunch of mindshare in the hobbyist programmer community, and c) being used for tasks which are "under the radar" of the corporate power structure (scripting, dynamic Web content, etc.).