The Best Of Both Worlds 

AKA ''The Best of [n] Worlds'', where n represents both, three, five, six, etc.
''Worlds'' in the phrase represents 'methods', 'ways', 'options', ...,
i.e. we are ''not'' literally discussing planets, aliens, or worlds.

.

Advantages:
*More than likely to succeed in the long term with more 'ways' or methods available.
**Example: Many programming languages are available, not just one. A programmer can pick which language may suite his best needs, not just 'one'. A programmer can also combine languages inside other languages (using Perl regexes inside PHP, C++, Pascal, Python,..). This offers the best of both languages(worlds), rather than 'one' limited language.
*Different strokes for different folks. One way is not best for one thing or person. 
**Crude Example: Too often software programmers do not think in terms creating software for both the technical and non-techincal user, and in terms of both the 'developer-user' and the pure grandma-like 'user'. Microsoft for example offers Tools like Visual Studio for developers, but also tools like Excel for users who don't have time to ''program'' their accounting or bookeeping routines.   
*** ''Speaking of Microsoft... "The Best of Both Worlds" is the name of the (2-part) ST:TNG episode wherein CaptainHornHair gets assimilated by TheBorg.  "ResistanceIsFutile"''
****Laughing Out Loud...

Disadvantages:
*takes longer than offering just one way. Short term projects that need to get done right away don't have time for 'offerring all the best of everything'.
**Example: You offer a lightweight version of software, a featuresome version of software, and even a plug-in version of software. Creating separate versions took longer to write than if you had just picked one.

----
See also WinWin