The following TechnicalFailure''''''s 
confront any software with extreme working conditions
are candidates for AbuseCase''''''s:

* PowerFailure (the terminal failure for any application, even if delayed by a UPS)
* MemoryExhaustion (be allocating more memory, e.g. due to load or user request, than is actually present)
* Thrashing (e.g. by RunningIntoSwap, MultiplyAndSurrender)
* DatabaseFailure (indirect TechnicalFailure of the DataBase)
* NetworkFailure (unexpected disconnection or crash of a router or switch)
* FileSystemCorruption (HardDisk errors up to HeadCrash)
* MemoryFailure (broken memory bank)
* BitRot:
** MemoryChecksumFailure
** simply incorrect bits read from overclocked memory or cpu
* Problems with inputs from physical processes (GarbageInGarbageOut)
** noisy input line due to poor wire shielding or placement of signal line next to power cord
** FrequencyAlias''''''ing (http://en.wikipedia.org/wiki/aliasing)
** TemporalAlias''''''ing (http://en.wikipedia.org/wiki/Temporal_aliasing)
** Broken sensor or input wire

These failures cannot really be 'handled' in most cases, but a GracefulDegradation or AutomaticRecovery should be possible. For a good example of how this can be done, please see MemoryExhaustion.
----
CategoryHardware