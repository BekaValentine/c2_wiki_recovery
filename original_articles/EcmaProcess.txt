From DotNetWillKillJava:

''MicroSoft taking a true open standards approach with ECMA. When and if ECMA actually arrives at a standard for C# and a common language infrastructure, the result will be available under ECMA's copyright and licensing policies, which are truly open. Any customer, and any person, will be able to license the ECMA C# standard, subset it, superset it, and they won't have to pay royalties. They'll be able take it and go implement it on any platform or any device. That is something fundamentally different from our competitors who wandered around the standards bodies, looking for someone to rubber-stamp their proprietary languages. ''

So, once it becomes a standard what does it mean? Does it mean I have a fixed standard that I can write a clone against, and then have the clone certified, or does it mean that there is a license I can get for free? For instance, say I want a GPLed C# implementation (so that I can link it into GnuEmacs). How does that goal fit into the big ECMA picture?

''Well, gee look at the other ECMA standards like ECMAScript and C++, etc. and that should give you an answer, shouldn't it??''

There already is a C# GnuEmacs mode! Get with it man!

''I was talking about a hypothetical instance of replaceing the built in lisp system with C#, not a c# mode.''

----
''Is this a big chunk of rape and paste from a website? It isn't obviously from the URL at the bottom, but it does look like a straight paste from a marketing department.''

Here are the minutes of the ECMA meeting. It clearly spells out their OpenSource and Linux plans:

At this point, Tony Goodhew and Jim Miller joined the meeting in order to give the ECMAScript committee an opportunity to ask questions about the C# and CLI proposals. 

Q: Why did Microsoft propose organizing this effort as new subgroups of TC39 rather than pursue another organization?  

A: Microsoft is has been working with TC39 for quite some time, and feels that the group works quite well. Compared to other standards bodies, it proceeds fairly rapidly, as evidenced by the fact that we are now working on the fourth edition of ECMAScript. Additionally, the committee itself seems to respect the need for delivering working implementations and the value of customer input. 
 
Q: What value does Microsoft expect standardizing C# and the CLI would bring to Microsoft?  

A: It certainly would encourage much broader participation. As an infrastructure, Microsoft is very interested in this being available as widely as possible. 
 
'''Q: Does "as widely as possible? specifically include platforms such as Solaris, AIX, and Linux?'''  

'''A: Yes it does - Microsoft is very interested in this happening.''' Jim expressed his private ''doubts that Microsoft itself would be the ones to implement versions for such platforms'', citing both economic and political reasons. 
 
Q: Will Microsoft be open sourcing their implementation?  

A: This is under consideration, but has not been decided. Microsoft has been approached by a number of companies desiring to partner on this. Jim expressed his opinion that he saw it likely that the source to a reference implementation would be made available, but declined to speculate on the licensing details. 
 
Q: Will this include the associated class libraries? Such as the ones needed to support the Python and Perl implementations?  

A: This will likely include any classes necessary to support the standard. As far as the remaining classes, nothing has either been ruled in or ruled out. There are some classes which are platform specific, and Microsoft has made a first pass at splitting out the "system" classes from "microsoft" classes. Microsoft expressed an interest in working with committed in order to determine the rate at which these classes could be digested - suggesting that it was unlikely that the full set would become standardized in the first revision of these standards. 
 
Q: Does Microsoft intend to release their implementation prior to the standard becoming adopted?  

A: Microsoft plans to participate in the C# and CLI in much the same way that they have participated with EcmaScript - there may be times when functions will be implemented in anticipation of the standard with full preview of the working group. Should changes come about between implementation time and standard time; MS will work to conform. Depending on release schedules, conformance may not always take place at the release immediately following the publication of the standard. 
 
Q: What are the relative priorities of the various languages that Microsoft has implemented on top of this CLI?  

A: There are on the order of 15 languages being developed on top of the CLI at this time. Jim wasn't aware of any Microsoft assigned priority, but his observation was that C#, C++, VisualBasic, and ECMAscript (a.k.a. JScript) were certainly given focus. 
 
Q: Have either of these proposals been reviewed with academic communities?  

A: Both have been reviewed extensively with various academic communities. In fact, these communities had encouraged Microsoft to pursue standardizing this, and had expressed a hope that the standards body selected would welcome their continued participation. Andrew agreed to find out whether or not this would be possible. There was general agreement by the working group that this would be a good idea. 
 
Q: Does Microsoft have any problems with these minutes being published?  

A: No, as long as there is a distinction is made between answers representing Microsoft and those answers which were the opinion of an individual (example: language priority, above). Jim and Tony requested that their personal e-mail addressed not be posted. 
 
Q: Will there be a newsgroup set up to discuss this?  

A: Tony is working on this, and once one is available, he will provide the information to Andrew for distribution to the working group. 
 
Q: What are the timeframes that Microsoft is anticipating for this to become a standard?  

A: Microsoft plans to formally propose this at the next business meeting in Bristol. While it seems unlikely that the standards work could be complete by the end of this year, the hope was that something could be produced next year. Microsoft, however, would prefer that dates be set by the committee rather than by Microsoft. 
 
Q: To what extent is Microsoft willing to accept changes to these specifications?  

A: As long as the changes are established via consensus and respect the impact to the existing tools and users, Microsoft is OK with change. This means that additions to the CLI would be less of a concern than non-backward compatible modifications; similarly changes to C# would be less of a concern than changes to the CLI. 
 
Q: What is the status of ISO compliance of C++. Specifically of interest was the ability to use STL with _gc marked classes.  

A: Microsoft is working towards ISO compliance, but was not able to comment on dates.  

----
See also DotNetEcmaProcess and http://msdn.microsoft.com/net/ecma/
----
CategoryMicrosoft