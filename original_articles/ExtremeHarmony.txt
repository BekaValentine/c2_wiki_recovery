The following excerpt is from the ExtremeZone:

	 :	I think the key is when you feel you and/or the code (or architecture) is "in alignment" or "in tune with" (deeply connected to) some other important structure or individual. With ExtremeNormalForm, it's been suggested that the code is in perfect alignment (or "harmony") with customer's dynamically changing needs. With ExtremeFlow, I think its the minds of the paired programmers that are in harmony. Other XP pages talk about things "clicking" or "falling into place", which again suggests some kind of harmonious alignment of two or more things. In order to figure out how to get there, I suggest we try to think of other times when we felt things where "in alignment", then try to focus on WHAT was aligned, and then HOW. (Does that make sense?)

	 :	Somewhere underneath, I think achieving this harmonious alignment is predicated upon effective communication about the things to be aligned, and/or between the people responsible for aligning them.

	 :	Suppose we try enumerating the practices that help achieve this harmony. -- BradAppleton

Taoists are pretty big on harmony; LaoTse goes so far as to say, "Who loses harmony opposes nature". So it should pay to review some of Lao's ideas here. 
The fundamentals of LaoTse are:

	'''Impartiality''':	If you are truly impartial then you are also without ego or ambition; you do what needs to be done, not what pleases you.

	'''Compassion''':	Taoist compassion is not some bleeding hearts thing, but a martial strategy. By acting with compassion for everyone you win universal support, trust and sympathy. What better defence against instability could you have?

	'''Accepting''':	Accepting isn't just tolerance; it's an activity, like breathing. Rather than contend against others ideas, or sit complacently and let them steamroll you, you actively accommodate and combine them with your own things; you listen, synthesize and give enough room for others to enjoy what they're doing too.

There are many tactics in LaoTse to support these strategies. I think these are candidates for pattern form:

	* ConquerWithCompassion
	* AccomplishWithoutAction
	* ExperienceWithoutAbstraction
	* NoPraiseNoBlame
	* StickToNature
	* DontDisplayAdvantage,
	* GiveAwayWhatYouDontNeed
	* FeedBellyNotSenses
	* TakeResponsibilityForEverything
	* AttendThePresentToDealWithThePast
	* DontDrinkMud
	* OnlyHarmonyEndures
	* AcceptDecayAndRenewal
	* UnknownRulers
	* UsePersonalRemedies
	* RemoveWastefulBehaviour
	* CaptainStayCool
	* TakeCareOfEveryone
	* ReflectNothing
	* DontControlTheWorld
	* ViolenceReturns
	* ForgetShapes
	* SurrenderHome
	* GiveEmMoreRope
	* ForgetRituals
	* StrongNeedsWeak
	* DontLaughDontLearn
	* WaterDissolvesStone (rusts scissors, blots paper :-)
	* StopWhenContent (== YAGNI?)
	* HorsesBearHorseshit
	* DontKnowExperience
	* TrustTheUntrustworthy
	* DontActLikePrey
	* ReserveJudgementToMaintainInfluence (i.e., no AjiKeshi)
	* UnproductiveBehaviourIsTheft
	* CultivateHarmony
	* HarmonyCreatesAbstraction
	* AintBrokeDontFix
	* UseRestraint
	* ThereIsNoEnd
	* PutAwayDemons
	* DontAttackStrength
	* DontFavourStrength
	* FaceDifficultyFirst (== WorstThingsFirst ?)
	* DontPromiseLightly
	* CarefulNearTheEnd
	* UseNaturalControls
	* LeadByFollowing
	* DontUseFear
	* UseAmbush
	* KnowYourLimitations
	* NoPride
	* DontStealFate
	* FlexibilityNotCompleteness
	* MarketingHidesTruth
	* TakeLessThanTheyOwe
	* SmallCommunities
	* ServeOthersFirst
	* and of course DoDontPreach

-- PeterMerel

What on earth does this have to do with software or the topic?

''Probably nothing, but it's an interesting stretch.''

Software is a state of mind.