Chris S Handley's Wiki page

...created on 15th March 2004 for no particular reason :)

If you want to email me, you can get my address from the following page:
http://email.cshandley.co.uk
If you have trouble reading the anti-spammed address, please tell me (here!) so that I can make it easier to read...

On (at least) these pages I have made significant contributions:

ArgumentsAgainstOop, 
ObjectOrientedProgramming, 
LearningObjectOrientedProgramming, 
TemplatesSmell,
LatentTypesSmell,
MeasuringAbstraction,
AllFeaturesShouldBeSimple,

AmigaEe,
HelloWorldInManyProgrammingLanguages, 
FuzzyLogic, 
PalladiumDiscussion, 
SymbianOs, 
AmigaOperatingSystem, 
CategoryForth,

ChrisHandleysDeletions

Please don't be too harsh on me, because I have not used a Wiki before!

----
To understand some of my unusual points of view, it may (or may not) help to
know:

My favourite programming language is AmigaEe (which is OOP of course), and I
generally feel no other language (except maybe Java) comes close.  Unfortunately AmigaEe only runs
on a nearly-dead platform (the AmigaOperatingSystem), and hasn't been updated in
years, so I'm now writing my own (far superior:) semi-compatible portable
replacement - don't hold your breath though!

I think CeePlusPlus smells really badly and gives OOP a bad name; Java is better
but it still has the awful syntax of C.  Things that smell about CeePlusPlus:
nearly every possible design feature was done the 'wrong' way, it has lots of
unnecessary features that don't really improve efficiency, it's cryptic syntax
is one step short of being obscure, everybody thinks it is great because they
usually don't know any better, and nearly everything else! :)  Also see
TemplatesSmell & LatentTypesSmell.

CeePlusPlus is certainly powerful, and it was the first to implement many modern
features in a main-stream language, but so many mistakes have been made in it's
design (often due to trying to keep backwards-compatibility with C) that it is
high time it was dumped in favour of something better; Java provides this,
although I personally think that it's ByteCode VirtualMachine smells (and proper
DynamicCompilation should be used instead), and that it's GUI toolkit is
ridiculously slow.

----
CategoryHomePage