StuartClayman reminded me yesterday that development of the PizzaLanguage has stopped and been replaced by a new Java-based language and implementation that is 100% compatible with the current Java Virtual Machine - called GJ [http://wwwipd.ira.uka.de/~pizza/gj/]. Developments like this were what made me assume JamesGosling would have some opinions worth hearing in JamesGoslingOnCollections.

That doesn't mean of course that Gosling (or many other people) would know how to coach a team to DoTheSimplestThingThatCouldPossiblyWork and RefactorMercilessly to achieve OnceAndOnlyOnce in such new, experimental languages.  But the direction seems promising to those of us that tracked functional programming as amateurs since the early eighties.  Especially as we are stuggling with Java's current ManifestTyping (see DoesXpWorkForJava and everywhere it now points to). 

Does anyone have sufficient perspective to compare with the less strongly typed direction represented by the RubyLanguage and SqueakSmalltalk? 

More importantly can XP provide some improved MetricsForLanguageSuccess for language and tool designers of the future? --RichardDrake

----

Just a note -- GJ doesn't really ''replace'' pizza, since (as I understand it) GJ is only about generics and doesn't have funky pizza features like first class functions, etc. -- LukeGorrie

So in staying closer to the big standard it gives up a lot?  Have we been here before I wonder?

I'm starting to believe that the IT industry is staffed 99% by ''lemmings'' and 1% by people with a clue. Woe to you if you are in that 1%, but you don't control the decision making. IT can really suck the big one. --AnthonyLander

See LemmingsStandardsAndInnovation

----

It's been mentioned elsewhere on Wiki (see XpInCommonLisp), but I'm a big CommonLisp and SchemeLanguage user, and I find that a lot of my normal programming practice matched up with a number of the tenets of XP (save pair programming, mostly because I operate alone and in research, not in a straight programming job). I think that a lot of features I've grown to forget about and take for granted in Common Lisp and Scheme have become so integral to my actual practice of programming that to work in languages that didn't have similar features, I'd be at an impass. --DanMoniz

----

IoLanguage should be good for XP.  --JasonGrossman
----
CategoryProgrammingLanguage''''''s