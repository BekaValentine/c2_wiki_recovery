from: http://www.geocities.com/akolonin/orl.html


Language semantics is nearly equal to underlying engine semantics. That means, no any "compilation" is needed to put source code into executable format or in other words, source code is equal to p-code. 
ORL statements read from any stream (local file or remote URL) turn in ORL objects in memory and might be easily stored back into ORL statements into another stream. That is, no any additional protocol is required to communicate one engine with another on the network. 
Each system engine itself is nothing else than ORL objects preloaded in memory at system startup. So, it is welcome to inherit system-defined objects features or even override system object's methods. 
Object is similar to Process and Class is similar to Function. One difference between object and process is lifecycle (creation-destruction or startup-shutdown). 

----

Seems interesting concept. Anyone knows something similar?