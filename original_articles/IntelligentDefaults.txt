Some UsabilityEngineering decisions require you to decide between catering to the beginner or catering to the expert.

Choosing intelligent defaults is not one of those decisions, as it benefits all users.  The beginner can acquire knowledge incrementally, learning only what they want.  The expert can buzz around being productive, fiddling with only the choices they want.

'''Examples of intelligent defaults''' ''(specifically, those that follow the pattern of benefitting all levels of users)''.
	* PerlLanguage's sort() routine, which uses plain-old comparison sort unless told otherwise.
	* JavaLanguage's Object.equals() implementation, which uses '==' for comparison.
	* The way newer Windows versions remember which option you last selected in the "Shut Down" menu.
	* ...

'''Examples of bad (or lacking) defaults'''
	* ConvertSpacesToTabs being unchecked.
	* IIS running by default on new Windows 2000 installations
	* Windows 2000 network file sharing enabled on all connections by default
	* ...