Discussed over beer at EuroPlop, after considering some pattern languages we had recently read and written: Some good advice is just good advice, not necessarily a pattern. "To get to the gas station, turn left at the next light." is easily one. Recipe for making coffee cake is another. 

I'm pretty much with you on this one, Alistair, although it seems to me that even the best patterns we know are still just advice. For most any pattern we can think of, the resolution of the forces is subject to details of their magnitude and to forces that aren't mentioned in the pattern. "Oh, didn't I mention that we have 100 million instances and we can't afford to migrate them ..."

I sometimes think the pattern ''form'' is a better way of communicating organizational advice, better than it is for technical advice. In the organizational situation we can speak to what the reader may be feeling, then say, So if you are feeling this and this, you might want to try such and so. -- RonJeffries
----
As I noted in PatternDefinitionThread (a bit late to take part in the discussion): maybe a simple but important aspect of Christopher Alexanders pattern concept has been lost in all these definitions and discussions: "A pattern is '''an object''' that is a proven solution to a problem in a context."  There is good advice that solves a problem in the form of a strategy. The difference is that a pattern (an object) works by its existence, a strategy has to be applied by someone. -- HelmutLeitner
----
CategoryPattern CategoryComparisons