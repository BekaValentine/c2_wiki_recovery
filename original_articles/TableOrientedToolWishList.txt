This is to form a wish-list of an OpenSource replacement of MicrosoftAccess, DesktopDatabase''''''s, and/or general "smart" TableBrowser''''''s and query browsers (ListOfQueryBrowsers). I often see a need for such in many businesses. There are several commercial tools that sometimes cost almost 1,000 USD, so there is obviously a demand.

(If this topic turns into a WalledGarden, then I understand it is fair game for deletion. But let's try for a few months, deal? --top)

Suggested Features:

* Can serve as a front-end query tool (ToadTool-style) to BigIron RDBMS and other vendors. 

* Can have multiple query windows open at the same time, this includes both SQL edit windows and result windows, perhaps in a split-panel type of window where one half is the edit area and the other is the results grid.

* Doesn't try to fit result sets in RAM if they are large; can buffer. (Most DesktopDatabase''''''s do this, but I have seen query tools that don't.)

* Contains its own DesktopDatabase engine.

* Can do "DatabaseMath" on schemas.

* Language? Should it have one primary language, but allow languages such as Perl, Python, PHP, etc. to plug in?

* Powerful TableBrowser

* Row-wise and column-wise view swapping (see DesktopDatabase example).

* General CrudScreen GUI features, including combo-boxes and tabbed panels. (Using table-oriented GUI configuration would be nice, but not necessary. FoxPro does this, I would note, although does not document it.)

* The ability to save components as individual files or grouped into one file (like .MDB files) as desired.

* Can readily import and export to comma-delimited, fixed-column ASCII, XML, HTML, and perhaps Excel. Bonus points for being able to query such directly without first importing. The option to include or exclude column titles should be available. And, ODBC access.

* A schema browser that can integrate with the SQL editor for Intellisense-like column name editing would be nice.

* Easily blurs the distinction between external data sources and its own tables, views, and result sets.

* Includes native scripting source code for tools such as QueryByExample. As much of the tool as possible should be written in its native scripting language to serve as both examples and speed up the development process.)

* Ability to put multiple queries in a single script. 

* Web access. Can serve as a RAD intranet WebService.

* Can optionally log problem import rows and continue instead of just stop at first problem.

Suggested Features to Avoid:
* Two-way auto-conversion between SQL and Access-style Query-By-Example grid. This is complicated to do right (Access didn't quite do it right).
* Don't try to be a high-end DesktopDatabase. There are plenty of existing RDBMS to tie into if such is needed.
* Doesn't need super-fancy GUI features, such as dynamic tool-bars. However, the ability to plug in GUI widgets from third-parties or as add-ons would be nice.

-----

How about supporting NormalizationBySynthesis ? GeneXus "transactions" based description of the database can be seen as the tables.

''Do you have experience with GeneXus or NormalizationBySynthesis that you can relate?''

{I'm a bit skeptical, or at least cautious of AutomatedCodeGeneration.}
------
CategoryRelationalDatabase