DocumentTypeDefinition (DTD) has been widely used within ExtensibleMarkupLanguage (XML) documents as a means to describing the content being transported. Developed for StandardGeneralizedMarkupLanguage (SGML), it is older than XML and is meant to be replaced by XmlSchema. 


To ensure that all dataset descriptions are of a consistent type, the DTD defines the metadata elements, their order, structure, and relationships. A DTD allows different instances of documents of the same type to be automatically processed in a uniform way.


For general-usage DTDs for common data types (such as: people, addresses, schedule information, corporate profiles, resumes) see the following sites:

	* http://www.dtd.com/
	* http://www.schema.net/
	* http://www.xml.org/xmlorg_registry/index.shtml
	* http://wdvl.com/Authoring/Languages/XML/Specifications.html

Due to the early presence of DTDs, there are many industry specific templates in use. Where appropriate, the industry specific templates can speed up the development of data transfer mechanisms between companies.

----
''In mid 2004, XmlSchema has yet to claim its supremacy over DTD.'' 

Not at our company, anyway. So what is the problem with XmlSchema (wxd version)?
* Is it the lack of automation tools that help developers to create the XmlSchema? 
* Maybe similar reasons to slow acceptance of ExtensibleStylesheetLanguage?

----
'''DTD related resources'''

''Write Better Modules with Quality DTDs'' at http://www.ftponline.com/xmlmag/2002_08/magazine/columns/practice/vgummandi/default_pf.aspx
* Aspects for consideration include early/late binding, use of XML elements and attributes, use of entitie construct, tradeoffs between use of containment vs serialization.



-----
CategoryXml