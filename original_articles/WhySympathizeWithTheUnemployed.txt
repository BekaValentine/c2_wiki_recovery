''Short answer - because they're people and deserve respect until proven otherwise.''

''Short answer 2: because you might be one also one day. Even managers are not safe from globalization and change. See second item under NoCareerIsSafeFromChange.''

----

Note there may be related material in EmploymentBigPictureDiscussions, EmploymentSkillsDiscussion which were created to reduce the size of this page on 4th March2004.

----

In both of the globalized post-bubble jobs I have  had to do recruitment work, since both those companies had, at one time or another, more work available to them in their markets than they could handle. So I've spent a bunch of time reading CVs and interviewing candidates. There probably still aren't enough data points here to find a trend, but I did notice a very strong tendency: cv's from candidates ''already'' out of work were weak, candidates ''already'' out of work did poorly at interview. In every case, we hired a candidate that was ''in work'' but looking to move for one reason or another. My (tentative) conclusion? The rafts of developers that have been laid off recently are mostly unskilled. 

The skilled developers are still in work, and most of them always will be. I'm guessing that the majority of the folks floating around in the labour pool for any length of time these days were taken on in a big hurry during the boom, and never were much use for anything beyond scripting up websites. Unfortunately (for everyone), the boom times created a false idea of what a competent developer looked like, and generated a huge number of people who should never have entered the industry, (and who had jobs that should never have existed) but who were trained to give the impression that they met the false idea of competence. The real shame about the current hangover is that so few people seem to be drawing correct conclusions from it. The profession has a great opportunity here to demonstrate to the businesses that employ us that we really can DoMoreWithLess. -- KeithBraithwaite

''You seem to imply that skilled people can do a lot more than unskilled people, so unskilled people deserve to starve. Capitalism, as defined by AdamSmith, is about grouping unskilled people in factories, where the jobs has been divided so much that anyone can work there. Unskilled people are necessary for industrialization, until of course they are replaced by machines. That's the way industrialization works. Skilled people are highly unnecessary for industrial countries, so they must learn new skills from time to time, because they become irrelevant at their jobs very soon. When you compare the ratio of skilled people in industrial countries, you see a big diference when compared with third world countries, because  in those countries they never use division of labor. Examples:''

''* Secretaries are asked to answer the phone and be receptionist at the same time. Also they must prepare coffee for their bosses.''

''* Software developers are supposed to code, design, test, install the software, talk to the client to get requirements and accept the product. Forget about trying to apply any methodology. The only methodology is JustDoIt and IwantItYesterday.''

''* This list could go on and on.''

''DivisionOfLabor is simply the best invention since sliced bread, because it allows you to build stuff that otherwise you would be unable to build. See BecomeCompetent.''

Would you suggest to a blacksmith in the 1920's or 1930's to "just be a better blacksmith", or change careers? The thing is blacksmiths had relatively similar options such as jeweler, key smith, mechanic, etc. But there are not many similar non-offshorable alternatives for programmers.

''The above recruitment anecdote seems to imply that you can easily detect the "good" from the non-good at interviews. I am not sure this is the case. While it may be easy to detect the truly weak, separating the middle from the good is probably difficult. My experience is that most people are looking for others who think the same way as them, not necessarily "raw skill", if such can even be measured. Thus, what you are detecting is perhaps someone who InterviewsPoorly, which of course are the ones less likely to be employed. It takes months to ascertain a coworker's skill in my opinion. Interviews are simply a superficial Kabuki game.''

----
Keith may sail through just fine, but a lot of people won't. Corporations are not human beings and frequently there is no one in charge of making the ''right'' personnel decision. When the big oil companies gave incentives for early retirement in the 1980's, they tried to get rid of their most experienced (i.e., their most expensive) people. So did IBM. They were quite successful.

I'm not sure whether I have more sympathy for the people who have been laid off, or the people who are still at work. The people who have been laid off know they're not indispensable, whereas the people who remain frequently have no clue.  But I can tell you that I have ''no'' sympathy for people who use the fortunate circumstance of their continued employment as a platform to turn up their nose at the skills and motivation of the unemployed.

Yes, the profession has a great opportunity to demonstrate that we can really do more with less. And to stress out from overwork, and to have it hinted strongly to us over and over that if we don't want to work overtime, the stack of resumes of potential hires to replace us gets longer every day.  But having to demonstrate your loyalty by increasing personal sacrifice to organizations that will never by their nature show any loyalty in return, seems more like an unfortunate fact of life than an ''opportunity.''

My advice? Keep working for that corporate employer if you have a job, but think about developing skills that might let you start a small business. The long term prospects for corporate employment are better if you're a bit more masochistic, but still not all that stable. The nature of such employment is that loyalty is one-way and provisional.
----
I just hired someone, and my experience jibes with Keith's. I should note that in many ways the particulars differed greatly: My posting was for a half-time, six-month consulting gig with an arts non-profit. Certainly not for everyone, but for a specific type of person this sort of gig is possibly ideal. I also noted the opportunity to work in a TestFirstProgramming environment programming in RubyLanguage, which is one of those language that makes people say "It's fun to use but I don't think I'll ever get hired to write the stuff."

I received about 80 emails and about half of them were as useful to me as a Nigerian scam letter. They weren't targeted to me at all. There seem to be so many people out there who will take any job at all, and as an employer you don't want those people. Sure, maybe I can hire you for super-cheap, but I'll probably get what I pay for. How concerned will you be about quality? Do you share my interest in programming as a craft instead of simply a paycheck?

The cover letters that stood out for me were those where the applicant bothered to spend 10 minutes of their time telling me why they wanted to work for the job I'd posted for. For some it was 'cause they wanted to work in an Agile environment, for some it was Ruby, for some it was 'cause they were looking for more part-time work to fill out their budding consultancy, for some it was 'cause they wanted to work for an arts organization or had even heard of my organization.

In the end, I hired somebody who does freelance programming, releases some open source from time to time, and is also an accomplished sound artist. As a sidenote, he had almost no experience with Ruby, which I was willing to overlook since he was strong in other ways, and I don't think Ruby's actually that complex. He's working out great so far.

When people talk about jobs, often they pay attention to what the entire market is doing. "I should learn XXXX technology 'cause it's what everybody's doing and I'll be able to get a job in that forever." I suppose that attitude works for some. My attitude has been the opposite: "I can't predict the entire market because the industry changes fast, but I can pursue the things that I'm passionate about and figure out how to find a job that lines up with that." Software engineering is actually a really big industry these days, and it has a lot of tiny little niches. Are you going to try to be employable for any software job? Or are you going to see how you can align your passions with the movements of the industry? (And what are your passions, anyway?)

I mean, you only need one paycheck. -- francis
----

'Sure, a person who is marginal or InterviewsPoorly will be the first bitten, but that does not mean there is not a general trend that threatens everyone in IT. At the very least it drags down wages even for those who interview well.'

Meanwhile, if you fear that your job might be outsourced soon, ask yourself this: what have you done recently that convinces your manager that your skills are ''not'' fungible with those of fresh graduate in Mumbai? -- KB

Don't these data points need to be taken into account by the folks that are asking WhatIfTechStaysDead in such doom-laden terms? From where I'm sitting, tech doesn't even look poorly.

----

I was one of those developers out of work for a while. It wasn't because of my skills, it was because of my risk tolerance. I left a big, stable company to found a start-up with some friends. The bubble pop killed that start-up and put me out of work. The big stable company I left, the start-up and the big stable company I joined after being unemployed all participated in the global developer economy, either through out-sourcing or the H1B visa program. Interestingly, the thriving start-up I recently joined (after leaving the 2nd big stable company) has no H1B visa workers, no outsourced jobs and only develops for the US market.

While it's true that the bubble pop has filtered out some of the less skilled programmers, I know too many good programmers who just couldn't find a job for months. I've seen several companies lay off their most expensive programmers in the struggle to survive.
-- EricHodges

----

What keeps the managers from saying, "The US is too expensive. Let's do most coding in India and toss our US coders.

Indian programmers aren't that much cheaper when you consider the cost of communication and flying people back and forth.

That is why things are often divided between analyst and programmer.

The U.S. tech industry is gigantic. There straight-up aren't enough engineers in India to do take more than a fraction of the jobs.

Only about 15% of India can currently afford to go to tech schools. There is still a 85% untapped population, let alone other countries.

''Keep in mind, though, that India's population is over 900 million, approximiately three times that of the US. That means that 'only' 15% if the population of India is equal to 45% of the total US population. However, this is still misleading, as only a small percentage of those who could become tech workers in either country, will.'' 

Some managers don't believe in PlugCompatibleInterchangeableEngineers.

The communication barriers are non-trivial. In addition to the oft-repeated truism about differing cultural background, consider the time zone difference. Pretend you're a manager. Do ''you'' want to get up at 5 a.m. to have a conference call with your developers, who are grumpy themselves for having to stay at work until 8:00 p.m.?

There's a lot to be gained by having developers and customers in the same room, or at least the same building, or city, or country. See OnsiteCustomer.

I don't know how real this is, but there have been a lot of reports and rumors of intellectual property violations stemming from overseas outsourcing.
 
There are plenty of reasons not to do ''any'' outsourcing, let alone offshore outsourcing. We all know about the V.P.s of I.T. who decide to outsource all support or development functions to IBM Global Services or Agilent or some other gigantic bureaucratic monolith in order to get a short-term boost on the bottomline. How does ''that'' usually turn out? Not that well? You think offshore outsourcing will work any better? Outsourcing has always been a loser's move, and the offshore variety is a loser's move too. It's something that struggling businesses do to try to keep afloat. It usually doesn't help. Good managers know this.

The worry is not that every tech job will go overseas, but that enough of them, perhaps most, such that the market here is flooded. They will start moving into the remaining niches also. Yes, the US will still have techies, but it is a game of musical chairs where there are progressively fewer and fewer chairs.

This is where some government intervention could help. It could make the number of chairs disappear at the same rate as the people to fill them, then there would be less economic suffering. In other words, gradually retire a field. But, it would have to officially declare certain fields "dead", and that may create a backlash from teachers, etc.

----

''No-one has a problem with this page having expressed unconstructive overgeneralizations, but many people get ticked off if anyone complains about same.''

People who have jobs and who make generalizations about people who don't have jobs are only doing so out of a sense of superiority, not realizing that they themselves have jobs only out of luck and being inexpensive. They are one of the great ArmyOfProgrammers, interchangeable cogs in a machine.

Anyone who has a job right now should be feeling compassion, not hostility, towards those who do not have jobs.

''I would say that neither compassion nor hostility. Developers should know which technologies are requisites for getting a job and get them fast. The first 3 languages you learn may take some time, but after 10 years you should be able to learn one on a weekend. Self actualization is important. Feeling compassion or hostility does not add anything to the mix, it just makes you feel uncomfortable about the situation, but you won't fix it while feeling uncomfortable.''
-----

Many unemployed are overqualified, expensive, and there's ageism at work, too. 

Some sailed through the 1992 recession but not this time. Experience can change one's perspective.

----

Programmers hate this, but a lot of your employability has to do with connections and who you know. The most important aspects of your performance on the job - how well you get along with others, your sensibility and desire to learn and innovate - can't easily be put on a resume, but they can be sniffed out by a former co-worker who's benefited from them by working at your side. Keep up those contacts, and don't be shy about spending a little free time in all those funny user groups. -- francis

''Sure and your coworkers can lie a lot too.''

----

I do have sympathy for the unemployed (my brother's job was outsourced to Asia last year), but my view is very close to Keith's. I've had three job offers in the past seven months, and a couple of times a week I get calls from recruiters asking if I am available for an interview (I'm usually not). We've been interviewing candidates at work, and we are finding very few good ones. All the good developers I personally know have jobs, even those who have been terminated from previous jobs in the past couple of years.

I don't discount the reports from those who are having trouble finding work, and I know this is only more anecdotal evidence. But from where I sit, it looks like there are development jobs out there for those who have good experience and strong references. If you don't have those things, you will definitely have trouble breaking into software development now. -- KrisJohnson

''"breaking into"? You're talking about those who are not established developers?''

Anyone who does not have "good experience and strong references" would be "breaking into" software development, even if they did have some sort of IT-related job before. If your experience consists of two or three years during the boom, then you still have some dues to pay before anybody is going to take you seriously as a developer. If you have longer experience then that, but no good experience/references, then that is a problem as well.

''So anyone who has "good experience and strong references" has a development job. At least in your area. As far as you know.''

I was quite clear that I was relating my own personal observations. If you have your own to share with us, we would welcome them.

''The person who created the page probably never realized many large technology companies routinely restructured every few years, and in a restructure entire department full of IT people become outplaced. And this is something that has been happening in the US for decades now. -- dl''

''Still I treasured his contribution, because his point of view is "valid" from the perspective of not a small group of people who are in the field, and yet remain unaware of "business practices". It is better that these get discussed so we all get better educated in the process. -- dl''

----

People in the top 10% can probably hold onto their current job or find a new job without much difficulty. In contrast, an average programmer would have a tough time in the current job market.

Still, I feel a lot of sympathy for anyone looking for work now. I'm lucky enough to have strong skills in areas that are economically valuable. Most of the unemployed are decent people whose strengths don't happen to match what employers are looking for.

----

For several years, I didn't look for jobs, they came to me. There was a brief period in the late '80s where my skills and interviewing ability suddenly took a dive and I was out of work.

So I started my own consulting company and suddenly my skills and interviewing ability returned, and I had plenty of work for a few years. Then my skills once again departed, along with my ability to interview, in 1990 - amazingly at the same time a bunch of my clients were complaining about a recession.

After the crash-and-burn-and-bankruptcy, one of my former clients waved a wand and my skills and interviewing ability were magically restored, and for the next several years I was invincible: jobs sought me out, raises of 40% and even 80% came at the drop of a phone.

Then in 2000, I developed acute skills-and-interviewing impairment again and spent 9 of the next 18 months out of work. Man, it sucks when your skills leave unexpectedly.

Then, 2 years ago, I healed, my skills came back, I interviewed at the top of my game, and was awarded yet another certificate of arrogance, so I can look down on all those losers who can't seem to find and hold a job.

I'm completely sure that ''this'' company cares about my future and that they were sincere when they welcomed me to ''the family'' (do they always kiss your cheeks when they do that?).

I'm also sure that the decisions of prior CEOs to lay off 15% of engineering, especially those high-paid, more senior guys who are sucking up all that money from the bottom line, were fundamentally my fault since I should know better, with my experience, that I'm not really worth all the money they offered me at signing.

But, for now, all you jobless clowns can kiss my butt, 'cause I have my skills and you don't.

-- GarryHamilton

''Very good point. I agree that the economy plays a very important role in this, but also I see other people who manage to become unreplaceable. Maybe there is something I'm not doing correctly, namely to do something in a way that it works if I'm there, but it wouldn't work if I'm not there. I can't take a vacation for example. It reminds me of several Oracle database administrators I've met.''

I have skills, just no job.

''Get some Oracle administration skills.''

Open-source may eat into Oracle, flooding the market with ex-Oracites.

''' [Update, Oct 1, 2004, from gh] -- '''
So, there I was, sitting in my trench, watching as the tracers and mortar rounds whizzed overhead.  On my left was Lieutenant Dave, brave corporate soldier and highly skilled test engineer.  He had just done a successful DogAndPony of his latest .NET project, had the OrderOfAttaBoy pinned on his chest, and returned to the trench with the rest of us peasants.  A hot, glowing tracer round screamed past me and thunked into something nearby.  Whoa!  Close one, Dave!  Dude, that nearly hit us!  Dave!  Dave?  Dave?!  Sonofabitch!  There was Dave, with his skills all blown away, with a packing box on his chest.  Daaaaaaave!!  Speak to me!  ...  Later, in the Command Tent ... "... and so, we're all very lucky to have escaped with our skills intact.  We lost Dave today, but the command echelon has assured me that the rest of you are not at risk."

Rest in peace, Dave.  Oh, any of you need a skilled hardware, embedded, and .NET-enabled soldier?  Dave's suddenly available.  And he really does have skills.

''' [Update, Oct 25, 2004, from gh] -- '''
It's a miracle!  Lieutenant Dave has been resurrected!  And Lo!  The Angel of Skills descended and touched him as he lay jobless on the field of battle.  And so it came to pass that he who had been bereft of employment was transported to the East Coast, where a major corp hath provided sanctuary and benefits, along with full moving expenses, in the Paradise of Higher Pay, where he will spend his days crafting drivers for Embedded Artifacts.

----

'''Dog Eat Dog'''

Perhaps some believe in dog-eat-dog. They believe they are the best, and TheBestIsTheEnemyOfTheGood. "If you are not in the top 10%, you should starve and die or flip burgers". I wonder if circumstances changed on them, if they would still believe it. Maybe they really are so good that they are immune from change and downturns. Or, maybe they just believe they are. There is no shortage of people who have a puffed up view of themselves. Sometimes we suck and don't know it. It took me a while to realize how lacking I was in diplomacy and sales skills. I knew it was not my strong point, but I did not know that I really really stunk at it.

Stolen from Slashdot:

  Dinosaur one: It's great ruling the world isn't it?
  Dinosaur two: Yes, it's great!
  Dinosaur one: It's like, we're the best! You can't beat us!
  Dinosaur two: Yes! Like, we're the tops! Go dinos!
  Dinosaur one: Go dinos!!
  Dinosaur two: Yes! Go dinos!! Go go go!!!
  Dinosaur one: Look at that pretty light in the sky!
  Dinosaur two: Oh yes. Pretty! And growing.

----
CategoryEmployment