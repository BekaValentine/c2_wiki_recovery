From SoftwareIsArt:

In his book AccidentalEmpires, BobCringely floated the idea of a software production model along the lines of a Hollywood Film Studio. Developers get together for only one release. If the release is successful and people want it, the group can be reformed for release 2 "the next generation"... 

He thinks that having "one in twenty startups failing" is scaring too many people away from developing their new ideas. 

Maybe this business model would reduce the urge that some people must have to produce upgrades that customers don't really want (aka Landfill Releases). 

--

BillGates uses this metaphor in his book BusinessAtTheSpeedOfThought. The lesson learned from movie studios is that they only employ a small core group of support personnel (accountants, marketers) full time. Once the owners/producers decide to sponsor a movie idea a dynamic team starts to form in support of producing the movie.

No one in the movie business is really patterned to think they have a full time job. They're encouraged to specialize, create, work well in dynamic teams, and to create recurring demand for their skills by helping their projects to succeed.

This is conducive to the VirtualCorporation model where groups of independent SoftwareConsultant(s), Marketers, TechnicalWriters, Sales, and Testers can be dynamically formed around a project for a finite duration.

Once the project is released, the risk taking producers aren't burdened with managing benched employees. They're free to go do whatever they want. Hopefully, the success of a project will require a reformation of the team for version 2.0 or sequel.

--MichaelLeach

''Contrast this to the glory days of Hollywood, when the studio system was in full swing.  I'd wager that there were a lot more permanent jobs then, when the studios cranked out films steadily, and actors were under contract to the studio.'' --PeteHardie

----
Are the forces that affect movies fundamentally similar to software making?  I believe that once a movie is finished, it's finished.  I don't know the Hollywood term for it, but eventually all of the endings are screened by test audiences and the film is edited for distribution.  For the vast majority of movies, that's it.  The film either bombs at the box office or it doesn't.  

Because software producers have an opportunity for continuous improvement that doesn't really exist in movie-making, their product is never complete and thus disbanding the production team is probably unwise.

-- MarkAddleman

Excellent observation. I think you're touching on a limitation imposed by different distribution channels.

The processes for creating film, music, and software are very similar in that they utilize NonDestructiveEditing tools that allow for incremental/iterative development. But the physical distribution of movies to a theater makes recalling and redistributing a film cost prohibitive, whereas software can simply be updated over the Internet.

Witness the recent advent of DVD Directors cuts, iFilm.com, and the increased frequency of film sequels and you can clearly see that this art form desperately ''wants'' an electronic distribution model, but has a lot of tradition, politics, and infrastruture to fight.

''(See SoftwareDevelopmentComparedToJazz for a discussion on how MP3 and the Internet has impacted the music development-distribution cycle.)''

Would film makers disband production crews if electronic distribution was in place and there was demand for more frequent releases? That's an excellent question. My first thought is that the word 'disband' is bit harsh. I prefer to think in terms of being 'dynamic'. The ebb and flow of adding and removing resources based on project needs is common in most industries.

The corporate software analogy is probably the practice of hiring full time employees for the valleys and contractors for the peaks. In the film making sense, the valley requires accountants, marketers, & distributors while the peaks require grips, lighting experts, camera men, etc. So in short, 'Yes', I think film making would still dynamically grow and 'disband' to meet project needs.

There's one other commonality that I can't resist discussing for at least a couple paragraphs, which is the user demand placed upon the deliverables from both arts. The iteration frequency of business software is intrinsically high to meet the continually changing demands of its users, just as the release frequency of commercial training films (MCSE, Java Certification videos, franchise food training films) must change to meet user ''needs''.

But there are fantasy and fiction forms of film and software that strive to meet user ''wants''. In both mediums, there appears to be more of a drive to ''Get it right the first time''. I suspect this is rooted in the limitations of traditional distribution channels. Experiments and prototypes of continually evolving, interactive fantasy software are emerging. I guess it could be argued that television shows are the manifestation of highly iterative film production.

-- MichaelLeach

''Witness the recent advent of DVD Directors cuts, iFilm.com, and the increased frequency between film sequels and you can clearly see that this art form desperately wants an electronic distribution model, but has a lot of tradition, politics, and infrastruture to fight. ''

I wonder how movies as an art form really want to be continually revised.  I'm not sure this has anything to do with software development, but I wonder if the director of AmericanBeauty, for example, really wants to change his vision on a continual basis.

I do like your distinction between movies of need versus movies of want.  I think we can draw a parallel in software.  ''Of need'' movies, Java training, fast food prep, etc, are being constantly updated.  So to with ''of need'' software:  accounting packages, medical web sites, etc.  ''Of want'' software, like ''of want'' movies, are more static.  I observe a much stronger need to ''get it right the first time'' with games software.

Of course, ''of need'' versus ''of want'' is a FalseDichotomy.  Clearly, there's a spectrum of needs versus wants and each product is placed on the spectrum differently by different people.  But, I think it's a UsefulLie to look at the world this way since it yields some truths that we may not otherwise see.

-- MarkAddleman

SoftwareAsFilmMaking is simply a metaphor... I don't see it as a lie or FalseDichotomy. If all my rambling was driving towards any particular point it would be "I prefer SoftwareIsArt over SoftwareIsEngineering". I wouldn't read any objective assertions into it. 

--MichaelLeach

''I agree with that.  I was just saying that ''software/movies of need'' and ''software/movies of want'' is a FalseDichotomy.''

Well, metaphors inevitably break down somewhere. They are vehicles for communication. Once a metaphorical idea gets to its desired destination (i.e. you can associate an unknown concept with one you understand) then it can be discarded in favor of a more precise taxonomy.  --ML

----
See also DevelopmentTeamModels SoftwareDevelopmentComparedToJazz