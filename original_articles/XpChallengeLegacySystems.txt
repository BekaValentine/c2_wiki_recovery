Formerly ExtremeProgrammingChallengeFour
----
You're hired as SoftwareArchitect on a BusinessProcessReengineering gig. The organization is a large IT-dependent firm, such as a big MarketResearch firm or insurer. They have maybe a dozen legacy systems in various stages of antiquity and disrepair. Your brief is to pull these different developments together into a consistent enterprise-wide whole. You can introduce any new methodology, standards, or hires you like; but you can't ditch any of the legacies or their craggy old development/operations staff, most of whom want you to fail and fade away so they can get on with making last-minute Y2K bugs. 

Furthermore, your brief requires a minimum of bumps between here and utopia. Can XP cope with relating to groups/legacies that resemble it in no way?

----

My musings on CthreeAndLegacySystems aren't very interesting, just recording some background to try to focus my thoughts.  --RonJeffries

----

I've recently been asked to do a year of big bang up-front design on a similar project.

I'd want to pursue an incremental release strategy, having new code "fit in" with legacy code, and communicate with it.
I'd also refactor legacy code rather than rewriting it.

Yes, the LegacyDevelopers will be a problem, but if you don't have the authority to make your employees do the job you want done, then you've got big problems anyways.
-- JeffGrigg
''(...not claiming to be doing ExtremeProgramming.  ;-)''

----

See also LegacyCode, TestInjection