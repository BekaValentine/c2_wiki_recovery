I have worked on real-time embedded software, software tools, software processes, system (UNIX/Linux) administration, web programming.

----
WikiMailBox

----

My favorite tools (because they are free, and they work):

* Emacs
* GNU/Linux, especially GentooLinux
* RubyLanguage - If you're a Perl programmer thinking about starting to use OO, you might want to try Ruby instead.  I've used perl for about 10 years, and it was easier to learn Ruby than remember what to do in perl to make a class.
* PerlLanguage
* GnuCompilerCollection
* GitVersionControl - although, admittedly, I have only used it for single-person development without branches.

None of these really qualify for ItJustWorks, because you have to put in some effort to be able to use them well.

I'm currently learning SchemeLanguage (PLT, primarily) and CommonLisp.

----

My favorite books about programming:

* The C Programming Language by Kernighan and Ritchie
* C++ For Real Programmers by JeffAlger - even though I don't program in C++, there is a lot of good information there that can be applied in other OO languages (like Ruby)
* ThePragmaticProgrammer by DaveThomas and AndyHunt
* ProgrammingRuby by DaveThomas and AndyHunt
* ProgrammingPerl by LarryWall and RandalSchwartz
* AgileSoftwareDevelopment by AlistairCockburn
* TestDrivenDevelopment by KentBeck

----

I like these pages, but somebody wants to delete them as orphans:

* YouKnowYouveBeenInItTooLongWhen
* YouKnowYouDontBelongInManagementWhen

----
CategoryHomePage