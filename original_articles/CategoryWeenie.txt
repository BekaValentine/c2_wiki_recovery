A "weenie", in Wiki, is (or seems to be at least) a tireless advocate of a particular technology, in particular one which is not in the mainstream.  

''I think the proper term is '''zealot'''.  Weenie means wimpy person.  Maybe "weenie" captures some seldom used geek slang, but that would just make use WeenieWeenies by pressing the terminology on everyone else, wouldn't it.''
* m-w.com: "3 : NERD <computer weenies>" Their definition is clearly incomplete, but their example helps.

[Weenie is funny - let it be. Doesn't anyone sense humor any more?]

* Humor tends to feel better directed at ''other'' people rather than ourselves, for some reason.

(RelationalWeenie''''''s seem to be an exception; though OO seems to be all the rage today and that seems to have started a ParadigmPissingMatch).  The weenie engages in spirited and passionate debate over the merits of their preferred technology (and it's more-dominant competition), which occasionally (and unfortunately) includes over-the-top statements which dismiss the dominant technology as meritless garbage (and practitioners of said dominant technology as luddites or morons).

Which is unfortunate, as frequently (if not usually) the weenie has a point.  (Especially the subcategory of SmugWeenie, who had to watch in horror as a technology which was markedly better than the competition at many things nonetheless got squashed in the marketplace.  WorseIsBetter, etc.)

One way to spot a weenie: a problem which is not easy to model in their language/methodology is considered not worth solving.

Why is it that only cool things have Weenies? Please show me that I'm wrong. Where are the VbClassicWeenie''''''s  and the CobolWeenie''''''s? (AurelianoCalvo)

FortranWeenie anyone?  JohnFletcher
----
How about we try to isolate the base concepts or mantra of various weenies?

FunctionalWeenie:
* Isolate or eliminate side-effects.
* It's better to use recursion than iteration, but even better to use higher-order functions.
* It's better to manipulate parameters and functions than use variables.
* All problems are about PatternMatching in type algebras, with a nod to CategoryTheory (ML family languages)

''[Discussion moved to CategoryWeenieDiscussion.]''

ObjectWeenie:
* Everything is behavior wrapped around state.
* All problems have an inherent ontology that should be modeled in a class hierarchy, each of which should be an information-hiding NameSpace.

RelationalWeenie:
* Relational provides a math-like consistency to data and structure handling.
* All problems can be viewed as sets and operations on sets.

LogicWeenie:
* Ask for what you want, and let the machine figure out how to get it.
* All problems can be viewed as a search, typically by controlled backtracking to satisfy variables (Prolog)

GoedelWeenie:
* Every interesting thing is incomplete or inconsistent.

ForthWeenie:
* It's better to directly manipulate the value stack than to use variables (even local variables).
* All problems can be factored into just the right set of "words" (functions) that then almost trivially solve the problem.
* Any problem can be solved in Forth 10x faster using 10x less code than <insert other language>.  (cf. http://www.ultratechnology.com/)
''This isn't exageration, it's just plain distortion. Better:
* Everything can be simple enough for Forth.
* If it isn't simple enough, you didn't think hard enough
-- A ForthWeenie
''

AplWeenie:
* All problems can be viewed as manipulations of arrays (verbs acting on nouns), and in modern dialects, also with "adverbs", "adjectives", etc.

BsdWeenie:
* BsdOs is (and always will be) technically superior to LinuxOs (System V and its various derivatives are never brought into the comparison), the fact that LinuxOs has achieved much more widespread adaptation is an example of WorseIsBetter.  (Five years ago, the BsdWeenie had much more of a point...today, about the only area that a BSD flavor can still outshine Linux is in the area of security; OpenBsd is arguably the most secure Unix flavor out there.  Nothing intrinsically wrong with BSD of course, it's just that Linux has had many more programmers improving it over the years.)

CategoryWeenie:
* Categorizing all information into little boxes is really neat.  It lets me ignore the complexity of the real world and stick to my own stereotypes. ''(That's a weenie of categories, not a category of weenies.)''

Note that "all things are" or "all things can be" is generally an exaggeration for simplication purposes. Most proponents will "learn towards" rather than actively propose that "all" be done a given way.
----
'''NOTES:'''
	1. Are SmugLispWeenie''''''s deserving of their own special mention, seeing as how they rub most all the other Wikizenry the wrong way?
----
See: EverythingIsa (generally the same kind of thing, but grouped differently)

CategoryCategory, CategoryRant, CategoryWhimsy