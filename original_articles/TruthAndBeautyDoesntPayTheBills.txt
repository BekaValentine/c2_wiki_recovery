In response to Erlang being invented by a Teleco (in ProgrammingLanguageNamingPatterns)

[Of course, we all know what happened last time a telecommunications company tried to invent a programming language --SmugSmalltalkWeenie]

''Yes, it became the most widely used programming language in the history of programming.'' -- MikeSmith

''As opposed to what happened the last time a photocopier company tried to invent a programming language? Somehow I doubt that Erlang is going to completely dominate the industry for decades (as that other telco language did), more's the pity. --WouldBeASmugSmalltalkWeenieButThatBeingOnTheSideOfTruthAndBeautyDoesntPayTheBills''

That's so pithy, I don't know whether to laugh or cry.  --Another SmugSmalltalkWeenie

You could laugh ''and'' cry.

----

Why is it that TruthAndBeautyDoesntPayTheBills?  --RandyStafford


I am the would-be SmugSmalltalkWeenie who wrote the above, and I would ''dearly'' like to know the reason. Assuming that there is more to it than WorseIsBetter, that is... -- KeithBraithwaite

I suspect it comes down to audience.  When a software developers pines for truth and beauty, it's usually truth and beauty in the source code, because that's the part he sees.  But the people who pay the bills are the customers, and they see the finished project, the UI, the price tag.  Truth and beauty for an end user means a pretty UI that does what it's supposed to do and doesn't crash and doesn't break the bank.

As a language designer, I find Scheme and Haskell to be incredibly elegant.  As a programmer, I use them only for very specific projects, because the code that ''I have to write'' to, say, pop up a GUI or make a network connection or access a database is generally tougher than the equivalent code in Java or PHP.  As an EndUser, I don't give a damn what language it was written in, but I usually prefer C/C++ apps because they respond quicker and have a more familiar UI.  It doesn't matter how ugly the program was, as long as ''I don't have to see the ugliness''.  

I get the impression this is what killed Lisp, BTW.  All these MIT PHDs were churning out code that was an absolute masterpiece for other programmers to look at, but didn't do what the customer wanted.  Meanwhile, the C/C++ folks did stuff that was ugly as hell, but the customer never saw the source code, so why should they care?  -- JonathanTang
