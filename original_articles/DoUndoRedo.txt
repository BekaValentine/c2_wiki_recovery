Code which is augmented to the point of doing nothing in its original design, but that still contains its original running code, is suffering from DoUndoRedo. This stems from aggressive changelist minimization, a reluctance to properly deprecate code, and a lack of courage in fully applying a refactor (or lack of tests to guarantee it). The result is a very long chain of instructions that achieve a very simple result and that resists change by virtue of being overly complicated. Systems like this also tend to be very slow - one can only hope they become slow enough that an optimization pass would eventually find them.

DoTheSimplestThingThatCouldPossiblyWork solves this problem.