Testing only == ModelWiki ==

What is a model wiki?

On WikiDesignPrinciples page, WardCunningham recreates his design principles for whatever purpose it may be put - ''got to love Open Source information.''
 
I love wikis, the outcome is awesome :) - regardless of my fondness for wikis, they are only a new beginning. A place from which to grow. Fortunately, I feel, the entry principles are open-ended. This most certainly is not the case with all design principles.  

So I am going to toss out a few definitions - nothing carved in stone in this medium, but a place to start.

	1. Open-Ended Design:
		* Any design that allows for alteration and augmentation. A program that can be re-interpreted to functions other than those originally intended. A program with an undefined life cycle.

	2. Closed-Ended Design 
		* Any design that can not allow for alterations and augmentation. A program that has specific functionality and can not be reinterpreted to other (new) uses. A program that becomes obsolete must be retired.

	3. Generic Model Design
		* Any design, either open or closed that serves as a container model in which other programs derive their functionality. Example: In the 'Browser' generic model design all kinds a things has come and gone and browsers still allow end users to browse. The generic model is based upon general conventions (TCP/IP), conventions change too, I can not say which model the browser example falls into.  

The future is fuzzy; maybe our children's children will live in VR. Don't laugh - I've read some very good books about exactly that. 

So now we have a start if anyone else is interested in exploring not only the wiki design model, but design modeling more generally.

In WikiDesignPrinciples, I said that users want a mundane experience as the best of all outcomes.  

Please advise if you feel I am out to lunch or not. :)

-- Smb
