"Let's Build a Compiler!" (1988-95) from Jack W. Crenshaw (a Physics Ph.D.,
no computer prof. at all) is a non-technical introduction to compiler
construction. It is very easy to read and the most understandable guide to
get into that topic. It does not talk long about complicated theoretical
stuff like *regular pattern analysis or LALR parsers, but goes practically
by extending an example compiler step by step (towards a PascalLanguage goal
with some examplary assembler dest. language).

It is still available for free from <http://compilers.iecc.com/crenshaw/>.

* With some fantasy and a little programming experience anybody can easily start and make something real, after reading the fourteen chapters.
* Even if the author is only a part time computer user, he is pretty well experienced with real compiler building and technics. He just doesn't frustrate readers with it, even if he is well informed on the topic.
* Keeps track of the syntax/parse tree by using the stack with recursive descending into the parsers functions...
* I've seen some related *Pattern pages here (describing that kind of language parsers / compilers), but don't remember which it were.

----
I'm personally writing (http://phpjs.berlios.de/) a very very simple
JavaScript interpreter, itself running in the PhpLanguage (something like
TheSimplestPossibleCompiler, it's meant as a sandboxed interpreter), mostly
after the paradigm described in this book; and it worked quite well for
me. -- MarioSalzer

----
CategoryBook CategoryOnlineBook CategoryCompilers