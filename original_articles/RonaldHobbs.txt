Currently into Taxonomies, Ontologies and such. So OWL RDF semantic web on one end and pure taxonomy management on the other.

I've come up with a design that works along the lines of set theory to manage an ontology.
Instead of your current database kind of set theory where your tuples are thought of as sets and your queries are based upon the contents of the elements of your set I thought that sticking more closely to set theory would work out well for ontology management.

How this would work is:
a particular item has certain attributes, think along the lines of the four causes of MrAristotle (what is it made of,why has it been made,what made it, what is it intended to do), but they'd probably be more specific and numerous.
Each of these attributes combine together to form a concept of an item, this is a set. 
You could then manage relationships with other items by comparing their respective sets.
for example:
if you had something that is defined by the set {dog, england, guarding, bulldog} you've got something referring to a bulldog a breed used for guarding from england. however you could also have a set {dog, germany, guarding, rotweiler} defining a rotweiler, based on the commonality between the two sets it is possible to determine the closeness of the relationship between the two. Where as something like {dog, england, sheepherding, collie} would have a different relationship and be a bit more tenuous.

The problem is of course that the sets are not fixed in size and that the comparison is not done in a way that sits well with current dbms. so there's a bit of thinking to go into how the facilitate this kind of set logic within a db.

Just something to play about with I guess.

----
CategoryHomePage