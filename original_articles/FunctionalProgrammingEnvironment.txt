From time to time I come across one of the FunctionalProgrammingLanguage''''''s and gradually I am beginning to be sold on the benefits of the concept. I have started a number of tutorials, and although impressed by the ease of creating simple functions, I am then disappointed by my inability to progress to something useful. This then stops me from pursuing the matter further, until the next time... What I would like this page to be is a series of facts and links that would help people like me to assemble an environment in which to learn, progress, and then deploy applications using FunctionalProgrammingLanguage''''''s. 

What do I mean by useful, and what do I mean by environment? Typically most of my applications involve the collection, storage and presentation of data. This means I use PHP or Perl, IIS or Apache and MySQL or SQLServer. I can put together such an environment on a Windows or Linux machine in less than 30 minutes. I can build my application on my laptop. Once drafted, I can migrate this application for further development on SourceForge. Then I can deploy the application for general small scale use with my ISP. I would like to know the possibilities of doing this with any of the FunctionalProgrammingLanguage''''''s.

Here are the questions I woud like to ask of the functional language community.
	*What components do I need to set up my initial learning/development environment?
	*Is there a mature development environment?
	*Which ISPs would offer which functional languages?
	*How do I access options should my application become ''big''?

----
'''Initial Learning/Development environments'''

----
'''Mature development environments'''

----
'''ISPs and their offers'''

----
'''Large scale applications and consultants with the 'knowledge' to set them up and run them'''


----

