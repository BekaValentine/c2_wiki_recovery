From PlanningExtremeProgramming:

Get one of those balloons you can make balloon animals out of. Towards the end closest to the opening write "time". Towards the other end write "bugs". Now we are in the perfect state: time is small and bugs are small.

Along comes a user and actually needs something. They blow into the balloon (that's scope). Time expands. Oh dear, time can't expand. So we squeeze time. Now bugs expand.

Here's where the analogy breaks down. As soon as bugs expand, time expands, too. If something isn't done, the balloon will continue expanding until it pops.

Once you're in this vicious cycle, the only way out is to let some air out of the balloon.

Another application of this analogy is that the ExtremeProgramming approach is take tight hold of the bugs side of the balloon from the beginning. The user can blow air into the balloon until time is as big as they can stand. Squeezing time at the expense of bugs is never an option. If you want time to go down, you have to let air out.
