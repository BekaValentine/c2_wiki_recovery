HyperCard was an important inspiration for WardCunningham to come up with WikiWikiWeb: see WikiWikiHyperCard.

HyperCard lives again, as its model of a programmable deck of cards has inspired: FreeCard WildFire  PythonCard SqueakSmalltalk (the BookMorph) and RuntimeRevolution

HyperCard decks are programmed in the HyperTalk language.

----

HyperCard was one of the applications that made the MacOs ''insanely great''. It was the creation of BillAtkinson.

----

HyperCard was inspired by hypertext pioneering thinkers like VannevarBush back in the 1940's, and earlier applications, like Techware Tutor-Tech (created by Dan and DaveLampert) around 1982 for the Apple II.

----

WardCunningham: "Sure HyperCard is object oriented. You just don't get to pick the objects."

----

YeshaSivan - much like WikiWiki HyperCard had a set of limited objects - but you could, if you knew how - do lots with them.  I did over 50 applications with it!

----

I did two apps in HyperCard, and loads of mini-apps to help do various custom things the Mac wouldn't out of the box. It was and still is a great tool, and the first Myst represents what can be achieved with it. I joined the HyperCard mailing list for over a year. Then I tried to learn Java, thinking I could transfer all my skills in HyperTalk to a 'real' language. [[Ha]]! No chance! But I learned loads about coding from HyperTalk, and wanted to use it to write stuff that people could use on other platforms. I looked at MetaCard (cross-platform, expensive), and bought SuperCard (better colour, UI too complex). I went back to HyperCard, until Classic disappeared from OS X, so - admitting defeat - now I'm looking at GraphicProgrammingEnvironments as alternatives. After doing really complicated versions of 'hello world' in all sorts of languages, I still miss the simplicity and speed of a RAD that basically allows you to:

	1 rough an interface out,
	1 type in modules of (effectively) pseudocode that can both
		* stick to components,
		* tell anything anywhere to do whatever,
	1 create a functioning application,
	1 debug it and... best of all,
	1 modify it while you're actually using it.

Yep, it taught me to hack. Now I'm designing software I'm interested in, all because of HC - the original LifesJustTooShort tool for doing what you want quickly... on the Mac, anyway. And for those who think it's been ditched by Apple - errr... it has. Try the alternatives listed below, some of which offer migration paths from HC apps (that is, those that don't use custom external code).

Some useful URLs...

* http://pan.uqam.ca/cgi-bin/usemod/wiki.pl
** The HC Pantechnicon

* http://members.aol.com/hcheaven/hypernews/news.html
** The now-discontinued source for HC news

* http://www.hyperactivesw.com/bugs.html
** Mac OS9 HC bugs

* http://www.jaedworks.com/hypercard/
** A good intro to what HC is

* http://pan.uqam.ca/cgi-bin/usemod/wiki.pl?HyperCard_FAQ
** HyperCard FAQ of the HC Pantechnicon -

* http://bigboy.spc.org/kop/DIVE/cd/software/selfpub/wiki.html ''(BrokenLink 2004/04/17)''
** Just out of interest, this page has the following (slightly inaccurate?) quote: 
*** ''Wiki has a turbulent history emerging from a hypercard stack written on a Mac''

* http://www.rubyinside.com/whys-shoes-grows-up-1014.html
** _why's Shoes, which is a great alternative if you get on with RubyLanguage (since _why disappeared, the above links to an article, not the Shoes site)

-- DaveEveritt

----

I was just a young'un when HyperCard was out; I didn't do much with it.  But there's a piece of shareware, now freeware, that can still be found called Hyper''''''Pad (http://jefferson.village.virginia.edu/elab/hfl0138.html, downloadable at http://www.megaiq.com/hyperpad/) that does very HyperCard-like-things in DOS.  Very interesting.

See http://www.usemod.com/cgi-bin/mb.pl?HyperCard, InterCal.

----

RuntimeRevolution is the most interesting HyperCard successor I've seen - it compiles to binaries on Mac Windows & Unix, while keeping the HyperCard feel. download the free demo version (limited to 20 lines of script per object) at http://runrev.com. -- KevinMarks

The PythonCard project claims to be similar (see http://pythoncard.sourceforge.net/).

The October-ish 2003 copy of UK Mac User has a free full copy of Revolution 1.1 on the cover disc, MacOs and MacOsx.

----

There's now also a SmalltalkLanguage implementation developed by AlanKay called SqueakSmalltalk, which offers some similar but more advanced HC-like properties. Personally, I loved the idea but found the interface too complex.

The class in Squeak that is meant to resemble a HyperCard stack is the BookMorph.  You can make a new stack by dragging the Book from the Object Catalog or the Supplies Bin.  According to MarkGuzdial's book, "Ted
Kaehler, who worked on HyperCard and built most of the BookMorphs,
talks about using them to write active essays—documents that have text
and graphics, but where some illustrations are active, dynamic,
explorations of the concepts in the book. In this way, the BookMorph
becomes an exploration space for Dynabook ideas.

Squeak:
http://www.squeak.org/

BookMorph probably has the best long-term commitment from the SqueakEtoys distribution of the SqueaklandFoundation:
http://www.squeakland.org/

Archived presentation from AlanKay at Etech 2003 using Squeak:
http://ftp.archive.org/movies/lisarein/oreilly/etech2003/alankay/tour.html ''(BrokenLink 2004/04/17)''

John Hinsley's 2001 Rolodex tutorial shows the prototypical HyperCard application http://wiki.squeak.org/squeak/2102

Pages 33 to 35 of this 36 page book extract give an overview of BookMorph and its relationship to HyperCard:
http://stephane.ducasse.free.fr/FreeBooks/GuzdialBookDrafts/Multimedia-ch7.pdf 

----

SuperCard is now Intel  Mac OSX-native, and can import HyperCard projects:
http://www.supercard.us
also see Supercard Resource:
http://supercard.netfirms.com

-- DaveEveritt

----

I remember in elementary school we had a lab full of Macs (LCII's or so) and they all had HyperCard. One day our teacher tought us how to animate a picture of a dog to make its eyes roll. Apparently, she didn't take HC very seriously. 

Anyhow, here's a link to the HC Yahoo! group: http://groups.yahoo.com/group/HyperCard/

----

I have vague memories ''circa'' '84, before HC perhaps, of some app that convinced me *yet again* of how Apple was '''''hot''''' ... some ThinkWare. Anyhow, I got HC late 80s, probably clearance priced, after years on XTs, and immediately starting spending more time on Mac. (I had been writing hyper-help under DOS using Peabody.)

Following HC instructions taught me a lot about Mac-think. (Wasn't a wine cellar catalog one of the demos?)

-- BenTremblay

''You're thinking of FileVision by Telos Software. Amazingly, Telos is still in business, as a government contractor... http://www.telos.com -- RussellFinn''

----

Related:  TedNelson

----

I have been using HyperCard since it first came out in 1987. I have crafted many small and medium-sized projects with it, including a groupware that I did back in 1992 which is still in use today at the Minstere de l'Education du Quebec, and a system called "SIFAD" (Systeme Interactif de Formation A Distance) which I made during my masters degree in interactive multimedia (UQAM), which is also still in service today. I have been a member of the HyperCard mailing list since 1995. I helped a lot with the HyperCard community's efforts to save HyperCard, including a petition and a Web site (now turned into a wiki) which features thousands of ready-to-reuse stacks, HC-applications, scripts, etc. This wiki is called the Pantechnicon and can be browsed/edited at this URL : http://pan.uqam.ca/cgi-bin/usemod/wiki.pl.

We (several Web-based groups) are currently creating an open source alternative to HyperCard, called FreeCard ( http://sourceforge.net/projects/freecard/ ), which is being programmed in Java and with an XP methodology. FreeCard is the application. FreeGUI ( http://www.egroups.com/group/freegui ) is a MetaCard-based prototype of the GUI of FreeCard. It is fully functional as we speak, and has been so for over one year. The xTalk group is evolving the 4GL scripting language underneath the FreeCard hood. FreeCard will also be scriptable in several other [scripting] languages, including Java. The Pantechnicon, mentioned in previous paragraph, is a repository of ready-to-reuse HyperCard artefacts which will be 100% portable to FreeCard without any re-coding. It is also where the community shares everything else related to our projects, including information and training in GUI design, scripting, etc.


It's a small world, eh, for I have very recently invited the Montreal XP group, which is hosted in this wiki, to participate in the development of FreeCard. I don't know yet if they will, but it seems to *me* that it would be "natural" for them to do so given the history of HyperCard as it is described here. I only discovered Ward Cunningham's fondness for HyperCard after joining this group. What an amazing coincidence, eh!

-- Alain Farmer, mailto:farmer@ufp.uqam.ca

Creator of FreeGUI, Coordinator of Pantechnicon, Participant in FreeCard, Participant in Montreal XP group hosted in this wiki.

----
For french people (pour le public français)
HyperCard et AppleScript: http://scripteur.com/cormoran/as/osa/appl/hypercard/default.html

Gwenael Le Drean
----
HyperCard lives on as RevolutionLanguage. -- BobBockholt

Well... it does... but have you ever tried importing a HyperCard stack into Revolution? Has anybody reading this tried?? I have, and (help) it looks like I'm going to have start all over again - there are too many differences for easy translation. --DaveEveritt
----
HyperCard R.I.P. 1987 - 2004
http://altis.pycs.net/2004/03/23.html

-- Kevin Altis

----
Being a big fan of HyperCard I was looking at AppleScriptStudio (http://www.apple.com/macosx/features/xcode) and found it to be a potential replacement. It is not based on the Stack and Card metaphor but allows normal-looking apps to be built. It does not allow changing the program while you run it, but the compilation takes place in a very transparent manner. AppleScript is pretty much the successor of HyperTalk. Creating an application is really quick, designing the UI is a pleasure with InterfaceBuilder, and the nice part is that it can call code written in ObjectiveCee (haven't tried Java, though it should be possible via the bridge), so it's like the XCMDs, only better. -- AndreThenot
----
HyperCard was absolutely the greatest! It allowed you to do so much so quickly. Too bad they never properly integrated color.

Color was the only thing that prevented me from really developing with HyperCard. Until I started with Java last year, I did more serious development in HyperCard than any other IDE (if you could call HyperCard that).

-----
Open Source code for Hypercard-like UI http://macbird.userland.com/
----
See also HyperTextHistory
----
CategoryHypercard
