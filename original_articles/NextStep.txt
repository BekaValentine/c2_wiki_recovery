An OS that was cool from SteveJobs. Got bought out by AppleComputer and was turned into MacOsx.

NextStep took OO programming and implemented it in almost every corner of the application development layers. They created ObjectiveC. When Quake was first written, to my understanding, they wrote it on NextStep running on HewlettPackard PaRisc workstations, and then ported it to dos.

''id Software wrote the "world builder" for DOOM on NextStep before NextStep was available for PaRisc.  The game itself did not originally run on the Next, because the game engine was tuned for VGA bitplanes.  DOOM was eventually ported to NextStep due to cries from the community, but it did not run well on the NeXTdimension.  Not sure where Quake got its start, but NextStep ran on Intel by that time.''

http://homepage.mac.com/troy_stephens/OpenStep/ is an excellent NeXTStep resource with lots of information about the operating system, what is happening now and its evolution into MacOsx. -- MatthewTheobalds

NeXT computers (the original machines that NextStep ran on, aka the "black hardware") are one of those things that I'm always fighting myself over buying. On the one hand their cheap, on the other cheap is not free. On the one hand, they are darn cool, on the other, they only use a 68040 CPU. Plus, space is limited for me, and I don't know that I'd have the time to ever use the thing. The history of NextStep is just one of those sad things that we have to get over, kinda like the death of the PixarImageComputer.

See also OpenStep.

----

Actually, not all HP workstations use the 68040 CPU. They originally did when HP had bought out Apollo (which was working on the Prisim RISC architecture at the time). Most of my HewlettPackard workstations use the PaRisc processor.

-- MarkGrosberg

----
''A OS that was cool from SteveJobs...''

Don't you mean sold and marketed by SteveJobs? Do you honestly believe he designed it? Well, I doubt he even designed the cube shape but instead approved a design someone else delivered. Yet he gets the credit for it? Go figure.

''They created ObjectiveC...''

Actually, BradCox created ObjectiveC.

''That's quite true. JeanMarieHullot chose ObjectiveC (with others) as a more dynamic object language than C++ for implementing the influential NextStep InterfaceBuilder on top of the Mach kernel. Jean Marie (who almost worked with me before Jobs came along, shucks!) told me at ECOOP in 1989 that the core team for InterfaceBuilder consisted of Jobs, a graphics designer and himself as programmer. He was enjoying it. Jobs sounds a fun person to work with. -- RichardDrake''
----
''A OS that was cool from SteveJobs.''

''NextStep took OO programming and implemented it in almost every corner of the application development layers. They created ObjectiveC.''

Almost nothing about Next was genuinely new - SteveJobs has always been an integrator, rather than creator, of new systems.

The NeXT hardware was built around undistinguished commercially-available CPU technology. The corporate identity was created by FrogDesign.

The NeXT OS was the first "commercial" deployment of the MachMicrokernel, a Unix derivative developed at CMU.

InterfaceBuilder, and the NextStep graphics framework, was designed by BillParkhurst with lots of help from BudTribble, BruceBlumberg, and a crew of developers and graphic designers. 

Some discussion refactored to JeanMarieHullot

ObjectiveC was created by BradCox, and ProductivityProductsInternational (PPI) was the name of the company under which it was first marketed. PPI was later renamed to "StepStone". The VultureCapitalists who invested in PPI forced PPI to adopt the brilliant strategy of going head-to-head against AT&T (ObjectiveC versus C++). BradCox and the other cofounders tried very hard to persuade their investors and customers to view ObjectiveC as a "module-level" language - Brad's metaphor went something like this: "Choosing between C++ and ObjectiveC is like choosing between photolithography and solder. You need both." Unfortunately, Brad did not own a controlling interest in his company and the rest is history.

A family of related pre-processor based "OO" languages emerged in the early eighties, as the ideas of Smalltalk penetrated the CS world. At its core, the fundamental idea under each of them was to model an "object" as a struct, a method as a "procedure", and a "message" as an indirect call to the address of the procedure, passing a memory reference to a "receiver" as an argument on every method invocation. Apple called it "ObjectPascal", PPI called it "ObjectiveC", Bjarne called it "C++", and several of us (yours truly included) just did it (in both C and assembler) without calling it anything. It was primarily AT&T's willingness to give away C++ licenses and compilers, while misleading the market about its capabilities, that resulted in AT&T's utter domination over more principled competitors such as PPI and Apple. Such is life. ObjectiveC had C syntax and appearance, and Smalltalk semantics (for message sends). It was a perfect choice for Next.

-- TomStambaugh

''Actually, AT&T was barred from competing in markets unrelated to telecommunications at the time, due to some consent decree (only four years after the introduction of C++ to the world, AT&T was forced to divest its local telephone business - which has nothing to do with C++, other than to illustrate the rules they operated under). Hence, they couldn't have made C++ a commercial product if they wanted to.''

''And I'm curious - how precisely did AT&T "misrepresent" C++? Did they (or someone at AT&T) out-and-out lie about its capabilities? Throughout the 80s, those capabilities were very much in flux - even throughout the nineties this was true. (Or do you claim that because AT&T didn't publicly announce that "C++ is crap and we therefore repudiate it", that this amounts to misrepresentation)?''

''If any vendor(s) has been instrumental in making C++ commercially important, it's been Microsoft (and Borland, until they dropped the ball), not AT&T. The Unix community long resisted C++, preferring to stick with the combination of C for low-level stuff and scripting languages for high level. It's the PC where C++ became the "preferred" language for software development - especially shrinkwrap software. By that time, the biggest role AT&T continued to have in C++ development was to provide BjarneStroustrup with a laboratory and a paycheck.''

----

''FrogDesign did the cube shape.''
''Got bought out by AppleComputer and was turned into MacOsx.''

''The G4 Cube <http://www.apple.com/powermaccube/> is another convincing reason that Apple are become rather like NeXt these days.''

''Yeah, but the NextCube was cool, and the AppleCube isn't as cool. I just don't like the looks of the new Apple gear at all (except for the new iBook and Titanium PowerBook).''

And the cubes don't resemble each other in any way aside from having the same number of roughly 90 degree angles and proportions close to having w = h = d. Such designs have been seen elsewhere. At least the Cobalt Qube(sp?) and several small clone micros (uATX) come to mind.

''And let's not forget the Nintendo Gamecube which, while not being a true cube, has a tiny form factor to die for. Man, I wish my PC were that small...''
----

http://en.wikipedia.org/wiki/NeXTSTEP

Someone (''TimBernersLee'') dreamed up the WorldWideWeb on a NeXT computer...
''No, he actually wrote it on one''

----
CategoryOperatingSystem