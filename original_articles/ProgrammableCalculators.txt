HewlettPackard made a fortune with them back in the seventies. A lot of programmers cut their teeth on programmable calculators. Some became programmable calculator experts. 

I once spoke to a HP executive who remembered meeting the man who had invented the programmable calculator; he recalled the very first time he knocked at the HP door. HP was a very small firm then. Barely surviving... This man's invention helped the company get to the top...

How did these calculators actually work? What were they programmed in? How far could you go with them? This is what we are going to find out here. We could even come to the conclusion that programmable calculators being used as spreadsheets, they are actually the ancestors of spreadsheets. 

''See also: http://www.rskey.org/ , http://www.datamath.org/''
-----
'''BobBockholt remembers'''

But shortly after finishing high school there was a fatal encounter with an early HP programmable calculator and that was the beginning of the end of Life As We Knew It. The calculator belonged to a friend, who let me borrow it on account of my drooling all over it when he showed it to me. This beast was an HP 110, with a four deep stack, seven memory locations, and fifty program steps and red, glowing digits. My buddy had the manual which contained example programs. I crunched through a couple of those, but found myself unable to resist making 'improvements'. (Later I learned this was called 'code maintenance' or, less lovingly, 'FeatureCreep'.) I even managed to code up some of my own programs, the best of which was a TicTacToe game, which I thought was pretty clever because you needed nine memories, but there were only seven. 

''How did you do tic tac toe with only seven registers?''

	 :	''Think: how would you do it with one register?  Nine board positions, each of which can take on three different states, so you're talking only 3^9=19683 global states, not all of which are even spanned by the game.''
* Ummm...ok, but how do you calculate state transitions? Or was there space to hard code those as if/else?

''I wasn't that sophisticated (as if I were now). I just packed the board state into three registers using base 100; 0-99 was the leftmost square, 100-199 the center, etc. That left me some registers for 'state' information. And, no, there wasn't enough program memory, so you could beat the sucker if you knew which plays it couldn't counter. (It chose a random empty square, in that case.) You gotta remember, this was my first programming experience, so, a lot could not be expected.''

[Memory was not calculated in Ks?]

''You could, but what's the point of saying "0.007K" rather than just "7" :-) ? He's saying there were exactly 7 registers/memory locations altogether.''

This all happened in Brasil (or Brazil to non-natives) while serving a two year mission for my church, which meant I had other things to do besides inventing a seven cell spreadsheet program. When I returned home things had changed drastically. Microcomputers (this was before personal computers) were all the rage.

[Could a seven cell spreadheet be programmed on those calculators?] ''That was an allusion to how rich I'd be if I had done that and patented the concept. Of course, then the entire OpenSource community would hate me.''

----
Mine was a low-priced Commodore P50 - one memory location, 24 program steps, 12-digit internal precision, with 8 displayed. I could program it to factorize integers, solve simple equations, etc. I still use it, though it occasionally misreads "=" as "0", which can be annoying, since the program entered is not displayed.

''Mine was low priced to, around  150USD. I still have it. It works great. Don't use it though. --BobBockholt''

Can you use it as a mini-spreadheet?
----
HandHeld''''''s were the natural evolution:

                                             HandHeld''''''s  
                      ProgrammableCalculators---------
               SlideRule------------------------------
  PersonalAnalogDevice--------------------------------

So what is the *next* step ? Wrist CNC machines ? -- DavidCary

''Handhelds are more a step sideways.  For purely calculational tasks a good programmable calculator is far superior to a handheld.  For heavy duty analysis, a notebook is probably worth the extra space.  Handhelds are underpowered for the latter, and poorly layed out for the former...''

Underpowered? Most HandHeld computers today (2005) have a faster processor and more RAM than practically any computer 20 years ago (Remember the 1984 MacIntosh introduction?)

----------

I'm an old calculator programmer. I programmed friden, wang and monroe machines. Years later I talked my roomate into buying the just introduced hp65, their first programmable machine. I programmed it to do road ralley time speed and distance calculations which lead to first place trophies in our first two runs. (My roomie drove and navigated while I told him how fast to drive.) -- WardCunningham

http://www.oldcalculatormuseum.com/fridenstw.jpg

This friden machine wasn't really programmable, but it would run a mechanically controlled sequence to effect a divide through radix shifts and successive subtracts. A divide by zero would send it into an infinite loop for which the manufacturer thoughtfully provided a reset operation. http://www.oldcalculatormuseum.com/fridenstw.html

http://www.oldcalculatormuseum.com/friden132.jpg

Friden introduced electronic calculators that were fast, quiet and easy to understand with the crt display of the register stack, years before hp became famous for the same. I played with these but became bored quickly since all they could do was calculate. Desktop programming was just around the corner. http://www.oldcalculatormuseum.com/friden132.html

http://www.oldcalculatormuseum.com/wang360card.jpg

This wang machine was programmed by inserting one punch card into the toaster like reader. Although most cards were hand punched (the same way Florida votes) I wrote a batch fortran program that would assemble up calculator nemonics and punch one card of output that I could pick up over at the computing center. http://www.oldcalculatormuseum.com/wang360e.html

http://www.vintagecalculators.com/assets/images/Epic3000_1.jpg

My favorite machine was the monroe epic. This thing was easy to program from the keyboard and could hold 100 steps. I recall some severe restrictions, like the only place you could jump was to to the start of the program, but there were lots of ways to work around this. http://www.vintagecalculators.com/html/monroe_epic_3000.html

''Some youngsters may wonder how someone could '''use''' anything like the monsters pictured above--but try solving the same formula with 250 different values substituted for the same  variable by hand! The engineering firm I worked for in the 1970's had several of these for computing waypoints on complex curves for the milling machine operators. (NC machines were not quite ready for prime-time back then, being very expensive.) -- Bob Bockholt ''

----

If you want to actually program calculators, you might be interested in these wiki:
* HP Calculators' Wiki http://hydrix.com/wiki/
* Programming HP Calculators http://en.wikibooks.org/wiki/Programming_HP_Calculators:Introduction

----

Is it just me, or is TexasInstruments still selling the same models of calculator they were ten years ago?  (the TI-82, TI-85, etc)

----
CategoryHardware CategoryOldSoftware