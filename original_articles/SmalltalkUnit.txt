CategoryTesting:  RegressionTesting 

'''SUnit''', formerly known as '''TestingFramework''' is KentBeck's framework for automating ProgrammerTest s in SmalltalkLanguage programs.
-----
The Smalltalk version of the TestingFramework can be downloaded from
 http://sunit.sourceforge.net/

Version 3.1 (2003)  supports	
	* DolphinSmalltalk 5
	* GnuSmalltalk 2
	* ObjectStudio 6.8
	* Smalltalk/X 4
	* SqueakSmalltalk 3
	* VisualAgeSmalltalk 6
	* VisualSmalltalk 3
	* VisualWorks 7

(With Release 2 the software is called SUnit.)
------
Original documentation is available at

* http://www.xprogramming.com/testfram.htm ''Simple Smalltalk Testing: With Patterns'' KentBeck, and
* Chapter 30 "Simple Smalltalk Testing", in ''Kent Beck's Guide to Better Smalltalk'' by KentBeck, Donald G. Firesmith (Editor), Cambridge University Press, December 1998, ISBN 9780521644372

Note that the TestSuite class>>named: method is not supported in 2.3 (and beyond?)
-----
'''SqueakSmalltalk'''

SUnit is included in the main distributions of Squeak 3.9, Squeak 3.10 and Pharo 0.1
Source packages can be downloaded from SqueakMap for Squeak versions 3.8 and earlier.

-----
I wrote a simple VA Smalltalk front end to the framework, following Kent's suggestions. I'll be happy to pass it on to anyone who'd like to use or expand on it. -JosephPelrine
------
See EnhancingSunit
----
Is there a good pattern for placing tests in ENVY applications?  Should my application pre-req SUnitApp, or should I create an <appname>TestApp that prereqs the real app and the SUnitApp (I think the latter). - SteveCline
You sure want the latter as you don't want to pre-req SUnit in a runtime image- DanielEnting

----

It seems, version 2.6 doesn't work well with name spaces, at least in VisualWorks 5i.1b. It doesn't find classes in namespaces below Smalltalk. I have submitted a test case and fix to SamuelShuster, the current maintainer. Meanwhile, if you need it, contact me. --HaskoHeinecke

----
Shouldn't it be named SmallUnit?
----
See also JeffreyOdell 's SUnitBrowser at http://www.odellsoft.com/sunitbrowser/

----

I'm using the SUnit extensions for the RefactoringBrowser. I'm starting to really hate the poor design of the interface.

There's a Debug button and a Run button. If you hit the run button, it suppresses any walkbacks. If you hit run and you get an error or failure which you wish to inspect, hitting debug afterwards will run the test all over again. This isn't any fun when your one measly test takes upwards of 5 minutes to run.

So if I've only got one test selected, for what possible reason am I allowed to use the run button? I can't conceive of a legitimate reason why I would wish to do such a thing.

----
CategorySmalltalk