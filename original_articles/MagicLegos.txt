Often GoldenHammer''''''s claim to make it easy to create and maintain apps by snapping together pre-built components in a Lego-like fashion. No longer is attention to details needed, it's just snap snap snap, done! Functionality is all encapsulated in building blocks so you "don't have to think about implementation". (Legos are a brand of plastic building blocks and "components" such as wheels, windows, trees, figures, etc. There's even robotics kits.)

On the "positive" side, one could also view it as a goal to strive for even if the ideal can never be fully reached.

I once saw the cover of a business magazine that used the Lego metaphor to promote a software engineering fad of the day as snap-and-go. The article itself continued the metaphor. - t
------------------
Of course, the pieces that you get often aren't quite the ones that you need.  You'll likely have to apply a lot of glue to keep them together, and you'll have to cut some of them down to fit, resulting in jagged edges and parts that stick out inconveniently.  Many you can't use because they're either overly-generic or overly-specific.  Since each piece has its own configuration/administration that doesn't integrate cleanly with the others (to avoid dependency problems), you can end up with a really messy UI unless you add a layer of custom code to override that.

It may be a big ball of jagged mud that doesn't quite do what you wanted, but on the plus side, you can build it really quickly.
------------------
See also: ItFadSmell