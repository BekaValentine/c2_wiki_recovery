Xml started to be simple. Real world is not as simple. Different people start seeing different things and that added to the complexity.

XmlDevelopmentTrends is a list of links for Enterprise developers tasked to develop and integrate business solutions.

----
'''Pragmatic Use of Xml?'''

''Consider only use XmlAtOrganizationBoundaries''

Unless you are using XmlEnabled tools that generate / consume ExtensibleMarkupLanguage documents, and 
* 1- you can afford the XmlPerformance tax
* 2- XmlSecurityAspects have been adequately considered.

''When implementing WebServices''

Consider:
* 1- review cost/benefits  & risks of dated alternatives such as email and EDI
* 2- See whether a RestArchitecturalStyle based WebServices is sufficient
* 3- See whether an application tool can do the job (generate the web services) instead

----
'''Resources'''

* April04 WebServicesSecurity v1.0 ratified by OasisOrganization http://www.computerworld.com/securitytopics/security/story/0,10801,95198,00.html
* All roads lead to RDF at http://www.xml.com/lpt/a/2004/08/11/deviant.html
** someone to summarize and comment?

----
'''Q''' Is XmlAcceptorPattern going to be useful for developers not fluent in CorbaComponentModel, DotNet, JavaTwoEnterpriseEdition, XmlRpc, SoapProtocol, EnterpriseApplicationIntegration tools? If so, please describe a scenario.

'''A''' ??

----
CategoryXml