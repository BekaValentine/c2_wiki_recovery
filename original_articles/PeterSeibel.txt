I'm a programmer, author, and now working on becoming an editor and publisher.  I wrote a book about CommonLisp (see PracticalCommonLisp if you want to check it out) and a book of interview CodersAtWork containing Q&A interviews with notable programmers. I'm now working on a journal for programmers, CodeQuarterly. I used to work at WebLogic, before (and for a year after) it became part of BEA Systems. After that I went to another startup with one of the original WebLogic founders and built a transactional messaging system in Java. I used to be really interested in XP and patterns when I first found this wiki. Now I'm mostly interested in getting the first issue of CodeQuarterly out the door.

''A book on CommonLisp eh? Sounds intriguing. What's the angle?''

Well, to quote the first few paragrpahs of my introduction:

	 :	In his article "How To Become A Hacker" (http://www.catb.org/~esr/faqs/hacker-howto.html), Eric S. Raymond names Lisp as one of the languages every hacker should learn:


	 :	''LISP is worth learning for a different reason--the profound enlightenment experience you will have when you finally get it. That experience will make you a better programmer for the rest of your days, even if you never actually use LISP itself a lot.''

	 :	That makes sense. Sort of. Like studying Latin in high-school in order to build your vocabulary so you'll do well on the SATs. On the other hand, one might ask, as Paul Graham does in his article "Beating the Averages" (http://paulgraham.com/avg.html)


	 :	''So if Lisp makes you a better programmer, like he says, why wouldn't you want to use it? If a painter were offered a brush that would make him a better painter, it seems to me that he would want to use it in all his paintings, wouldn't he?''


	 :	Paul Graham decided ''he'd'' use the better brush. His company Viaweb developed online shopping software in Lisp; a few years ago that software became the foundation of Yahoo!'s online storefront, Yahoo! Store, when they bought Viaweb for $40 million. Which is not to say that if you use Lisp you can necessarily count on a multi-million-dollar payday a few years hence. Certainly ''this'' book can't tell you how--you think I'd be writing this book if I knew ''that''!


	 :	This book, in short, is about how ''you'' use the better brush. Not just the syntax and semantics of the language but how to use it to write software that does useful stuff.

Basically, I spent a bunch of time hacking both Perl and Java and some with Python and most of my friends and colleagues are smart Java programmers. Most of them have heard that Lisp is pretty cool but are also sceptical about it on many levels. I want to write a book that will reach them. Most of the good Common Lisp books out there are a bit dated (Paul Graham's excellent books were published almost 10 years ago) and tend to assume that the reader is already pretty motivated to learn the language. So I'm trying to help bridge the culture gap.

''Sounds great! The world is ripe for such a book, and I too know a lot of smart Java programmers who would enjoy it. You could also let the reader in on the BigSecret that most of the best works are '''at least''' ten years old, and there's no sense in ignoring them! -- LukeGorrie (DeleteMe anytime, I don't want to clutter up your HomePage.)''

Indeed, most of my favorite computer books have examples in PL/1 and FORTRAN. -- Peter

----
CategoryHomePage