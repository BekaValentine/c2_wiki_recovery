System Envisioning is a creative process for establishing the possibility of viable system concepts and technologies by, first reaching a shared understanding of a
problem situation and desired futures and then nominating solution architectures. 

* What is System Envisioning?
* Why conceive of even mundane situations as Systems?
* Why is Envisioning Important?
* What happens if you don't do it?
* What's happening when you are doing it?
* What stops it from happening?
* Who needs to be involved in doing it?
* What considerations affect the trade-offs and the interrelationships between requirements, specification, and design?
* How are these interrelationships affected by the political, social, and cultural issues within the organization?
* Is there a patterns language for relating problem situations to viable system concepts?

System Envisioning is motivated by ideas from Peter Checkland's work on SoftSystemsMethodology, Peter Senge's work on SystemThinking, Stafford Beer's work
on ViableSystems and, more recently, the TeamSyntegrityModel, Gelernter's work on Mirror Worlds, Gareth Morgan's work on "Imaginization",
Van Der Heijden's work on Scenarios and Miller's work on LivingSystems metaphors. 

See also SolutionEnvisioning

-- RalphHodgson
----
The notion of "ViableSystems" is just one of several within the various schools of SystemsThinking, and so does not deserve prominence in the banner.
----
We need to contrast SystemEnvisioning with SystemsThinking, the latter being a more general concept of which SystemEnvisioning is a special case.
----
Creativity, although important, is secondary to understanding. First understand, then create 'based upon that understanding', (then iterate).
----
"Developing a shared understanding of a problem situation" seems to suggest that you first state the problem and then understand it. According to Ackoff in the 'Art of Problem Solving', problems don't exist they are 'abstractions' away from reality and can lead you astray. When faced with a problem statement, question it. "Shared understanding" is, however, very important.
----
Organizational learning about the systems that constitute, contain or interact with an enterprise ought to be a function of the enterprise. However, it need not -- and probably should not -- be just a distinct process, divorced from normal everyday practice.
----
Need to talk about "Inquiry" and give a pointer to "InquirySystems".
----
There is more to be envisioned than system architecture. In fact, architecture cannot be addressed until function, feature and objective are clear. System Operations Concept is the first act of envisioning. (JackRing)
----
This sounds very similar to the idea of modelling a problem domain at a significantly higher level of abstraction than is used for design models. How  does SystemEnvisioning compare with the EssentialModel used in the SyntropyMethodology ? 
-----
I did not read the Syntropy book. So this is an impression from the definitions at the SyntropyMethodology page. I will read it soon. Compared to the Essential Model -- this is not about "modeling" this is more like going to the core of (wicked) problems, helping the user see the real problem(s) before he starts discussing solutions, helping them to see the "solution after next", to see the problem as his colleague sees it.... It is the use of metaphors... to look at the problem from different angles... So it comes before modeling. A list of references is at SystemEnvisioningReferences -- MartineDevos
-----
'''Exploring System Envisioning'''

System Envisioning = Problem Understanding + Systems Thinking + Solution Exploration

System Envisioning is
* MessingAboutInProblems, -- AnalysingTheProblemDomain
* AboutCreativity,
* AboutMemetics,
* AboutMetaphors,
* AboutImagination,
* SystemsThinking

-- RalphHodgson, Founder, TopQuadrant Inc.
----
CategoryArchitecture
