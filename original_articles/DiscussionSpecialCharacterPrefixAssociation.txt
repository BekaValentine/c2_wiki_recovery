Summary of pros and cons of SpecialCharacterPrefixAssociation:

*cons
**hard to maintain by hand
**hard to read without explanations (surprising)
** efficiency and extensibility dependent on the presence of other costly or proprietary software applications such as MicrosoftOffice, AdobeWebPremium, MicrosoftVisualStudio
** and other not so costly or nearly free applications such as , WikiServer, InternetBrowser, and SearchEngines such as Yahoo and Google 
*** while parts of the association application are standalone and local, other parts depend on a Library of Applications and InternetConnectivity.
*pros
**no need to keep track of the end
**no escaping conventions needed within the link
**short (esp. when escaping occurs)
**easy to nest (less important for links)
** creation of the mark-up, maintenance and modification (editing) is done using a local application
** updates of reference reachability is conducted each time a page with non-local references or links is loaded for viewing
** the queries for information as to existance of search-word or words is dialog driven and searches first in the local documents or local copies of internet documents referenced. the result is captured in the a query-results page
*** no need for special knowledge about a "language" or structure. AutomatedIntelligence is built with the creation of documents whether by edit or search
** the local engine "knows" what applications are locally available and "how" to represent or reference information stored in the flat-file
** a user community most likely would develop and shared extensions, tools, plug-ins and applications (perhaps including code - thereby the requisite for compilers and interpreters (Basic, C++, Perl, Python, and etc) to modify and extend) 

----
''About the page "SpecialCharacterPrefixAssociation" the following thread was produced'' 
----
''Sorry, I'm not following this.  Why are you putting the effort of counting words on the human, when it can be done so trivially by machine?  What is the purpose of the character prefix?''
----
The questions and answers follow
* Two questions, shown as Q1 and Q2) have been provided, (without full elaboration) answers ( A1 and A2 ) which help one follow this association:
---- 
 Q1: 
Why are you putting the effort of counting words on the human, when it can be done so trivially by machine?  

 A1:
* Quick answer:
**The counting can be done by machine at the time of page composition or modification.
** However nothing prevents it being done by a skilled technologist directly in the flat-text document via manual or script assisted production.

----
 Q2: 
What is the purpose of the character prefix?''

 Problem:
The difficulty in making links out of readable text without reliance on special conventions like CamelCase, WikiSingleWordProblem, etc.

The SpecialCharacterPrefixAssociation (appearing in the mark-up, not the visible page served, except by marking such as underline or color or shading of text, Mouse over indication or display, or visual or audible indicators), solves many, but not all of these difficulties.

 A1:
Prefixes of any kind can prove to be quite powerful. It is a "fixing before" which tell man and/or machine something of what follows. 

----
I use this method when I encode general ids in URLs and elsewhere. 
I use it it two ways:
Lists of IDs are coded as "<length><id><length><id><length><id><length><id>".
Pairs as coded as "<part1><part2><length-of-part-1>".

This is more general than the usual "<id>,<id>,..." because "," might (and does) occur in the ID.
But I found that many developers find this very surprising and have difficulties reading or writing correct queries. Some seem to think that the leading number is part of the ID.
----
CategoryWiki