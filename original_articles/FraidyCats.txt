'''Problem:''' Some folks are too afraid to make any kind of decision; incapable of taking any risk. These are the guys who design a new product with proven hardware technology from the 1970s (MCS-51 family processors as opposed to RISC machines). They use assembly and C instead of risking that newfangled C++ and Java stuff -- it's just a fad, after all. You know the types.

''And why is this a problem? Examples?''

[Sometimes, old technology is OK. I guess its OK to take big risks when it's someone else's money.] 

''Sometimes old technology is better than new offerings. Jumping on the latest bandwagon can be as stupid (or worse) as refusing to move with the times. This page seems to be an oversimplification.''

Using old technologies can be risky as well, because there might be opportunity costs of not using the newer technology. E.g. writing it in assembly might be several times as expensive as writing it in Java. Quite a risk.

Also, designing a product using 25 year old technology instead of adapting to the current level of electronics is just plain bad. It puts your client's product at a competitive disadvantage immediately and sets the client up for an "out-of-production" crisis in the future. This is a real, ever-present danger that I have personally seen come to fruition on multiple occasions. You can lead a horse to water, break its legs, force its head under...oh, well.

This is also often a problem with management, where people are too scared to change processes or strategies. It can inhibit the organization's ability to deal with new developments, and be the downfall of a business.
----
Expect to make some mistakes; nothing important will be accomplished if you make only “safe” decisions.
-- Warren Buffet
----
See: DontAskPermission