Being that we like mobile devices and like (or are required) to be able to do work or play anywhere and everywhere, the "traditional" desktop computer may grow to be mostly a thing of the past, or a niche device. To get ubiquitous access to our files and apps, our "stuff" will probably have to be on servers (AKA "the cloud"). Our email clients are often web-based, and "office" applications like spreadsheets and word-processors are growing web-based. My son uses Google Docs for his school writing, not Word nor any desktop word-processor. He doesn't have to carry a thumb-drive back and forth from school and home.

It feels "the cloud" is the trend. The clunky unmovable virus-infested desktop machines are not very popular. A key missing ingredient against this trend is better actual or de-facto '''standards for moving and/or sharing one's "stuff"''' from cloud vendor to vendor. This would include "files" (or their equivalent) and related application binding info so that files can be on Cloud X but work with an application on Cloud Y and vice verse. Vendors don't want to make this easy because it makes it easy for customers to leave them and comparison shop. Thus, it will probably take the open-source community or a hardware-only vendor to create viable inter-vendor (inter-cloud?) and "clouds on tracks" standards.

Better web-based GUI standards would also be helpful. The current HtmlStack sucks for rich-client designs.

Keep in mind that many "geeks" could end up running their own "cloud" on a desktop or a desktop-like computer, but it would typically act as a web server even if you happen to sometimes use it as a client also. It's an AbstractionInversion perhaps, but sometimes the ubiquity of standards result in that.

--top

''"The cloud" as a collection of (virtual and/or real) machines (IaaS or Infrastructure-as-a-Service) is certainly a trend for configuring traditional data centres, and Platform-as-a-Service is an increasingly popular architectural approach to building scalable server-side applications.  There's a reason for that: In both cases, ItJustWorks.''

''Last year, I installed OpenStack on a cluster of seven machines at work and it turned out to be far more useful -- as a virtual data centre capable of hosting hundreds of virtual machines -- than we thought it would be.  Migrating virtual machines from one physical box to another -- say, when you need to shut down a physical box to repair it -- is virtually seamless; down-time is a minute or two, and you no longer need to think (much) in terms of physical machines.  Need a new server?  In a few clicks, you've got one.  Need ten servers?  No problem -- it's no more effort than creating one server.  Need to create an application that can upscale from one server to hundreds as load increases and scale back down to one when the load decreases?  It's easy -- there's an OpenStack API that you can use to create and destroy servers under software control.''

''Indeed, "the cloud" might render traditional desktop computers obsolete -- at least in terms of having a relatively powerful box on the desktop.  I think you're right -- that powerful box could wind up running multiple VMs in a "home cloud" under the desk or in the attic.  I have five rackmount servers set aside for this purpose -- they'll eventually wind up in my garage attic running an OpenStack private cloud.  However, I don't think the desktop form factor is going to be obsolete any time soon.  Whilst tablets and phones are great media presenters and are certainly adequate for interacting with some applications, they're dire for creating content.  I can't imagine writing, or creating music or digital art, or retouching photographs on my Nexus 7 or my partner's iPad, even with their add-on keyboards.  Programming on them is even worse -- the screens and keyboards are just too small and awkward, and GraphicalProgrammingLanguages which might make small screens tolerable have a loooong way to go before they're any good for general-purpose programming.  Big screens, big keyboards, and comfortable mice and graphics tablets are still needed.  Touchscreen monitors go only a small way toward replacing the mouse, and don't replace graphics tablets at all; touchscreen monitors are simply too inaccurate for fine work, it's too tiring to hold your hand up to the screen for more than the occasional swipe, and the screen gets covered with greasy fingerprints.  Touchscreen desks are great, but the cost is prohibitive, they're not particularly portable (compared to a conventional monitor), and you still have the problems of accuracy and fingerprints.''

''Cloud API compatibility may indeed wind up being an issue, but probably no worse than any other technical compatibility issues.  It's notable that most virtual machine formats are recognisable across most cloud infrastructures, so at least there's some hope of moving VMs from one cloud to another.''

---------
CategoryFuture