A methodology in which programmers work on a core of high-risk modules. Then they deliver these, with a set of UseCase''''''s implemented for early users. Then programmers tune the core while adding more features, in iterations that spiral out from the core. The strategy allows the longest time to work on the core, and lower the risk of those high-risk modules.

Contrast with IterativeMethodology''''''s that sort features by business priority instead of technical risk.

Uses IncrementalDelivery.