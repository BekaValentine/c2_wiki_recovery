Hey,

I've finally got off my lazy ass (after working at WDS for four years or so with the likes of DafyddRees, RichardEmerson, KeithBraithwaite, JosephPelrine [and OliBye for about 2 seconds]) and finally put up a page here - pretty shocking really due to the fact that I've been using and linking to this wiki from our company one for a while...

'''Background''' 

I started life as an artist, doing a Fine Art degree.  

So my move into software programming goes something like this:

Photography > Commercial design (print and web) > web site development > web app development > fully fledged software programming.  

I've been making and using object type code for a few years now, and been working with the XP/scrum hybridised agile methodology they use in WDS for about 3 years, and am currently looking after the team in Singapore, carrying on the good work KeithBraithwaite, TimJoyce, and MonicaYap have been doing with the 24x5 follow the sun development teams we have been establishing over the last 3 years

I've been through a few different languages as in my programming career, and seem to be mostly using Java and C# nowadays, which seems to answer most of the problems I have (though not always gracefully I must say...), and am currently in the guts of a quasi-MVP type system

[http://www.itstherules.co.uk] hosts a html portfolio site for the likes of my photography and writing.  Its been published into flat files from dynamic content creation using a mixture of O/R mapping and templating in Java.  I built the templates after being inspired by Rails...

----
CategoryHomePage

----

Not that many people will be interested but the main technologies I'm using right now are:
MacOSX and all that cocoa stuff, using Java
TopLink, Hibernate, MS Sql Server, MySql, Oracle
Tomcat 5.5, Orion Server, JBoss, Apache 2 (trying to get v2 to serve SubVersion from my mac right now), Mongrel, Webrick
RubyOnRails, Mono (C#), Java 1.4.2 & 5, Ruby

Things that bug me right now that shouldn't:
There is a lot of baffling terminology thrown at design patterns to describe what they are and how to refactor to them, when in fact most concepts within design patterns are simple.  I want to refactor most descriptions to simplify how to convey them easier

----

No longer at WDS: working for a company called Exoftware, doing Agile Enablement