Oh dear. We don't learn from past mistakes, we don't even learn from past sucesses.

----

Databases are on my mind at the moment. 

ChrisDate is on the warpath, trying to get the RDBMS community to wake up to what the RelationalModel can do for you, if only you had any tools that implemented it. 

If I've understood correctly, he claims that a RelationalDatabase that worked the way Codd always wanted them to would be object oriented alread (and OO is orthogonal to ER). Meanwhile, as reported on LetsUseAnObjectOrientedDatabase, using an OODBMS can break your company. 

Then there's the various ideas for a XmlDatabase. So, hierarchical and network databases return from the dead. The relational wonks who thought OODBMS's were a dangerous step back towards CODASYL will flip when they catch wind of this. If only all those GUI toolkits had a "relation" component instead of a "tree" component...

''Oh, I would love to hear more on that previous sentence.  Tell us more about "relation" vs. "tree"!''

Meanwhile, I've worked on a project that started with a system that hideously abused Netscape's LDAP server because it was the only hierarchical DB they had around (and they had to lie about what it was, since that firm had a one product  policy and their "database" was Oracle). An here we go round again. What is it with us?

----

''"What is it with us?"''

OneSizeFitsAll, that's what.  Each of these database models have their place as solutions to particular classes of problems.  For some applications, it is appropriate to use more than one model.  Advocating a single model as the OneTrueWay is what keeps up on this hamster wheel.

I so agree with that.  Unfortunately, some people seem to think that all data must be relationally queryable, so they pan all other solutions as inferior.  Sometimes, a network database is better you know.  Relational isn't the answer the everything you know.
----
CategoryEducation