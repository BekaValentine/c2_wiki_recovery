Describe QuantifyTechnicalDebt here.

Assume that X hours a week are spent in coding efforts that pay down existing technical debt. Make the analogy with a credit card bill and assume that half the payment goes to principle and half to interest. To keep the math simple assume an interest rate of 10% and a programmer that costs $2,000/week.

The quantification proceeds as follows. Let X be 8 hours, i.e. the programmer spends 1 day a week refactoring legacy code, paying down technology debt. Half of that is 4 hours, or about $200/wk in interest charge. At 4 weeks per month that is $800/month in interest, or about $10,000 interest/year. At our example interest rate of %10, that implies a principle of $100,000. Which means it would take a full year to pay off all the technology debt. That is a full year without creating any new features.

Spending only 20% of a programmer's time to pay down technical debt left 80% of his time for new work, that didn't sound too bad. But the cost of removing all the accumulated technical debt was a full year. I must say I'm surprised by the scaling, but if this model is accurate, then technology debt is a much bigger drain on our efforts than we have supposed. It would be interesting if this metric could be sold to management. -- AllanGoff
 