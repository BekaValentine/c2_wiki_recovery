Annotations/Attributes like those available for most DotNet platform languages (or in Java) seem to play a role (AnnotationMetadata) very similar to the role UmlStereotypes play, but UmlStereotypes were invented much before. Are they really the same thing? and if they are: Why did it take so much time for language designers in the industry to add real support for UmlStereotypes in ObjectOrientedLanguage? and if they are not then... what is exactly the difference?

''For those of us less familiar with the subjects, I'd appreciate a few paragraphs on the background here.''

Better now?

''Slightly.''

''Not knowing much more than what you've written, I'd guess that AnnotationMetadata doesn't seem to 'change the meaning' of a code unit whereas UmlStereotypes allow that sort of semantic modification. I'd be interested in learning how much processing each implies. UML is generally not executable, but knowing what sort of post-processing would be required for UmlStereotypes if the UML was to be made executable would be useful in a comparison.''
----
CategoryUml

