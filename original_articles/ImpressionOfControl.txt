Contrast with IllusionOfControl, which is clearly a Bad Thing -- the name specifically denotes the ''lack'' of control.

ImpressionOfControl may or may not denote actual control, but is not a Bad Thing, nor intrinsically evil to want it; it's necessary in business and in life. And it may well be a '''correct''' impression. 

The problem is that the concept of "control" has to be brought up to date.

ImpressionOfControl is related to IllusionOfControl and ControlFreak, but with a slightly different connotation from either. ImpressionOfControl is a combination of a mental-theoretical model and an emotional state. 

''IllusionOfControl is based on being able to create a MasterPlan and then dropping it on the masses.  There is no (need for) information about how the plan is working or how reality is different from the plan.  The mechanical/hierarchical mindset assumes that the plan/heavy metholodolgy/etc will make the process work. '' 
----

I think one reason ExtremeProgramming might be unpopular with management is that it does not produce the kind of ImpressionOfControl that heavyweight methodologies offer. This is related to the military-industrial-Henry''''''Ford-Taylorite model of corporations as hierarchical structures with cogs/drones/automatons at the leaf nodes carrying out the "actual work". For instance, waterfall methodologies give those satisfying sequential ''chunks'' of things getting ''locked down'' that we get in that moment of montage in action movies when the heroes are suiting up and raiding the arsenal preparatory to kicking badguy ass.

From RollingYourOwnMethodology: "The WaterfallModel is something that HenryFord invented, and was never really going to work for software anyway." 

Because XP is human-centered and demands initiative and responsibility from its practitioners, it stands in opposition to the mechanical/hierarchical mindset. However, the tight feedback loops of UnitTest''''''ing and PairProgramming are clear examples of the best modern thinking on AI and robotics.

----

See OptimisticProgramming
