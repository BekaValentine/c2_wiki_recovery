The term IntegratedDevelopmentEnvironment, or IDE, is used to denote a software development system where the code editor, compiler, linker, debugger, version control system, database administration, website administration, code browser, deployment tools, and online documentation are presented as a set of tools that work together seamlessly as a single application.  The term is used in contrast to environments where programmers need to shift between different applications to perform different tasks.

The term usually implies the presence of a slick GUI, but many people will say that Emacs is the best IDE.

IDEs often provide "wizards", "designers", and other tools that assist the developer in quickly putting together a program without writing a lot of boilerplate and repetitive code by hand.  These tools can enhance productivity, but critics contend that developers who work this way don't really know what they are doing and are incapable of understanding how it all works.  See WizardsAreDangerous.

Good IDEs allow developers to install additional tools for use in the IDE, rather than being stuck with the limited set of proprietary tools provided by the IDE vendor.  Good IDE users know how to take advantage of this.

Some examples of IDEs:
	* VisualStudio
	* VisualAge
	* EmacsEditor
	* EclipseIde
	* CodeBlocks
	* CodeWarrior
	* ExCode
	* QtCreator
	* Unix

----

Compare ProgrammingInWiki; consider http://www.oreillynet.com/onlamp/blog/2008/05/dynamic_languages_vs_editors.html .

----
CategorySoftwareTool
