''Moved from FunctoidsInCpp''

'Aargh! The goggles! They do nothing!''

''Seriously, this is a most striking example of GreenSpunning. Would it really have hurt that much to use a language from the *ML family in the first place?''

Will the author of this comment please read ParkingTicket and ConversationalChaff. 

If this is a serious comment it imputes on the quality of the work, as the page on GreenSpunning includes the word ''bug-ridden''. I am unable to discuss this with the anonymous contributor. I suggest that person show how they can implement the FunctionalPatternSystemForObjectOrientedDesign in a language of choice. That would be a positive contribution to the discussion. 

-- JohnFletcher

Whoever the anonymous commenter is, he ''has'' suggested that you use a language in the ML family. I assume he means OcamlLanguage or one of its siblings, which is a functional, object-oriented language. That is, there's nothing to show because the language just does the right thing.

''You're missing the point:''
* ''Some people don't have the freedom to choose their language of implementation. The techniques given on this page provide a way of using functional methods - which might be the most appropriate - in C++ - which might be demanded.''
* ''Calling this "GreenSpunning" infers that it's bug-ridden. That seems rather churlish, not to mention insulting, when someone is willing to share their work.''

''No doubt the anonymous hit-n-run "contributor" simply wanted to say "If you want functional features use a functional language". If they pulled their head out of the sand (or whatever) they might instead apply their talents to providing real solutions to people who are required by customers to use C++, rather than simply scoffing at their work and situation.''

Thank you for the comments. I am not the original author of the FC++ code, but have now spent a lot of time working on it as well as using it. I had looked at OcamlLanguage at one stage. It seems to use StrictEvaluation rather than LazyEvaluation, which is what I need. My main reason for working in CeePlusPlus is to integrate with other code for CliffordAlgebra which is in C++. I find that in practice I don't need a lot of code to make a big difference, e.g. to turn a member function of a class into an object which can be passed around. The ObserverPatternInCeePlusPlus is one example of this.

-- JohnFletcher

''''... providing real [functional features] to people who are required by customers to use C++ ....''''

Surely many of the customers who require C++ do so to ensure that the resulting code is "understandable" to their (in-house/contract) C++ developers. Isn't using FC++ going to hinder that? Does it follow the letter, but not the spirit, of the requirement to use C++?

----
CategoryCpp CategoryCppTemplates CategoryFunctionalProgramming CategoryDiscussion