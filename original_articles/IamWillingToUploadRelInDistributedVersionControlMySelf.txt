I wrote the WillRelSourceEverBeInDistributedVersionControl page. Dave, I realize that you may be too busy to do this, so, I would like to know if would get angry at me if I created a project with the name "Rel" (or maybe "RelFork") at BitBucket (or GitHub) the latest available copy of Rel source there. LuxSpes

''If you wish to do so, I certainly won't stop you.  In the spirit of OpenSource, I won't even ask you not to.  However, I'd rather you didn't.  There's already been one Rel fork, which didn't need to be a fork, that has perpetually consigned itself to the doldrums of out-of-date-ness.''

''It is fully my intention to make accessing the source easier, but I'm not yet convinced BitBucket, GitHub, or the like are the way forward. I will investigate these further in the coming weeks, but my preference at present is to provide write access to my SVN repository on an as-needed basis.'' -- DaveVoorhis


Well, why not just try and upload it. Worst case scenario, you take it down because you do not like it. Best case scenario, somebody (like me) might help you.
Check HgInit ( http://hginit.com/ ) or GitReference ( http://gitref.org/ ), you can keep strong control of the main branch and allow for easier experimentation
If you prefer to stay at sourceforge, AFAIK you can reconfigure it to use Mercurial or Git o Bazaar instead of CVS or SVN. 

[Dave, give a distributed version control system a try. Seriously, I'm hooked on them - they make it very easy to keep experimental work out of the 'stable' branch.]

''I'm 98.373948% convinced, but I require Eclipse integration.  Which is the least irritating (i.e., most stable, intuitive, quirk & bug free) of the SVN, Mercurial, Git, and Bazaar plugins? (I'm including SVN here for comparison purposes.)''

''If it's the case that the SVN plugin is the least irritating, and the only reason to switch to another version control system is because the system itself is better, I'd be hard pressed to switch.  However, if <insert distributed source control plugin name here> is superior to the others in every way, then I'll switch, pronto-like.'' -- DV


In my opinion, the the SVN plugin is the most mature, but Git and Mercurial distributed nature make them  very good to allow for free experimentation (and of course you an control what goes to the stable branch), also merging in Mercurial and in Git is more "smart" than in SVN. An interesting feature of both Git and Mercurial is that, unlike SVN, they do not add a .SVN folder on each folder on the tree: you only have a single .hg (Mercurial) or .git (Git) folder in the root folder of you repository, so you could even upload Rel to both GitHub and Bitbucket and play with both Eclipse Plugins. 
Now, from my POV, HGE (Mercurial) seems more mature than EGIT (Git), but why don't give them both a try? (Also if you come from a CVS/SVN background Mercurial terminology will be more natural for you)

GIT & Eclipse: http://www.eclipse.org/egit/
Mercurial & Eclipse: http://www.javaforge.com/project/HGE



