This wiki originally seemed to be full of rebellious extreme programmers who rebelled against form, specifications, strong type systems, TopDown, BigDesignUpFront and all that ''bad'' stuff.

(The FormalistsTakingOverThisWiki kind of reminds me when the SmugLispWeenie's once kind of took over this wiki, who had not everything in common with the original community here.) 

Nowadays, we see that a lot of the pure extreme programmers are not here - they've left, or they are busy, dormant, etc.  

Other times, we see several (reasonable) people who seem to combine ''both'' form ''and'' other extreme programming methods into their development (form and inform?). i.e. people that see TheBestOfBothWorlds instead of being purely biased and purely rebellious.

The sad issue is - some of the inform (can you even call it that) vs form wars is just partial ViolentAgreement. 

Formalists, should not be a ''separate political party'' from those other people (informal people?). A lot of the formalists do testing and experimentation, just as the extreme programmers do - and a lot of the extreme programmers do formal specifications indirectly (whether they like to believe it or not). 

''(Can't we all just get along)''

Wait a year or so and they will be replaced or superceded by a new and different zealot(s) that use similar discussion techniques and insist on OneTrueWay.

''Well, I think you may be missing part of the point above. Formalists aren't zealots. A zealot is one who calls them a zealot just for mentioning the word Form as if it is a swear word (rebel! rebel! no form! no way!).'' 

'''''Formalists''' who have a '''clue''' (and who are worth their salt) - are not using OneTrueWay. Your OneTrueWay appears to be call everyone a zealot who uses more form, math, and science.  Consider your zealotry and hypocrisy.''

''Scientists and mathematicians that are formal do not use one true experiment or OneTrueWay. Consider that formalists do not avoid testing (even that's what is claimed). Consider that they do experiments, in addition to ''formal specifications''. They fill in values too. It's not just the non-formalists who test and experiment (i.e. extreme programmers, bottom up programmers).''

''Formalists do bottom up '''and''' top down programming, too - despite the myth and religious zealotry from people like PaulGraham who think that '''only Lisp programmers''' and other similar '''weenies''' use BottomUp techniques and testing. The people who are religiously and violently against the formal way, use '''formal techniques''' at some point too - such as programmer documentation, sentences and paragraphs (which have form), spell checkers (which also have form), etc.'' 
------
I often incorporate an isValid() method in my class that verifies the class meets its invariant. And I call it in the unit tests. Don't agile classes have invariants? Am I straying from The Agile Way? NickKeighley
---------
See also: PractitionersRejectFormalMethods