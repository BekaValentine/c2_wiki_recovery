Money Oriented Programming 

Programming pursued primarily for the purpose of making money.  Includes the implication that money considerations have beaten out technical and professional considerations.  Just because you are paid well doesn't mean you are doing MoneyOrientedProgramming.  Implies the sort of thing you wouldn't do for less money.

-----

Alternative Definition  - from Dmitri Khanine, co-author or Money Oriented Programming, The Pragmatic Software Developerâ€™s guide 

To me the MOP is a collection of street-savvy, tips, tricks and techniques geared toward maximizing your compensation and overall success in software development  field - whether or not you're enjoying it. I personally love coding but despise useless two hour long status meetings, filling in endless document templates and all that other stuff that most of the passionate coders are not enjoying at all... But what I despise the most is when I see smart and talented developers manipulated into doing useless, mind-numbing, under-paid work... permanently.

The Western World is only successful because of the Free Enterprise and business-smart economy at all levels. Teaching developers how to apply good business tactics to their careers will benefit everybody - including their employers, clients and - most importantly - their families.


-----


''Beats busing tables.''  Most things beat busing tables.
-----
 Programmer: n, a device for turning caffeine into code.
 Contractor: n, a device for turning caffeine into cash.

I thought a programmer turned caffeine into error messages.

 Microsoft: n, a device for turning cash into error messages.

''Did this quip come from PaulErdos, who said it of mathematicians, or is there an earlier source????''

-----

While I'm not a money-oriented programmer; I know lots who are.  And guess what?  There's nothing wrong with it (assuming they do their jobs well).  For some people, writing code is what pays the bills and enables the things that THEY enjoy (family, art, hiking, getting smashed on Friday, whatever).  For others, it's hauling trash, auditing a ledger, driving a truck, waiting tables, or fixing leaky plumbing.

Not everyone derives their satisfaction in life from their employment.  Those who do are no doubt lucky; but shouldn't look down on those who find it elsewhere.

----

''RichardStallman isn't all ''that'' young (@2003).  I don't think he views FreeSoftware as a hobby either - perhaps "duty" would be a more appropriate word.''

''By all means have an opinion on FreeSoftware, and how it should interact with your life, but please consider too the possibility that you don't understand how it works, how it could work or even how it should work.  -- MatthewAstley (p.s. I'm not claiming to fully understand it myself.  For example, FewUnderstandTheGpl.  That's natural, because it is quite complex.  More interesting is that I have three (?) times '''thought''' that I knew what it was about, and have been corrected either by patient friends or something I saw on the 'net.)''

----
The idea that "free software people...are young; for them programming is a hobby" has been disproved a number of times.  The most well-known statistical study of free software and open source programmers indicates that free software programmers have on average 10 years of programming experience.  More information at http://www.osdn.com/bcg/ (or just jump straight to the PDF at http://www.osdn.com/bcg/BCGHACKERSURVEY-0.73.pdf ).
----------

Most of us do work for hire. We have learned how to factor business priorities in to the choices we make every day. Although our products are diverse, this page raises the question: could they be more diverse? That is, is there a non-money oriented style of programming that produces characteristically different code? The free software movement certainly has the opportunity to demonstrate exactly this, and perhaps it already has. Or perhaps free software will only discover its ''natural form'' once it has duplicated all of the mony-oriented software it cares to absorb. -- WardCunningham

''The last bit is an interesting question.  Your comment is indeed much more what I had in mind when I started this page (as well as providing a definition for the usage on another page), thanks.''
----
I've worked with programmers who do it because they love it.  They taught themselves programming at an early age and do it in their spare time as a hobby.  I've also worked with programmers who looked at salary surveys when picking a major and saw programming as the easiest way to get decent money.  I have nothing personal against the second group, but I always prefer working with the first group.

''On average (and all other things being equal) they tend to be vastly superior programmers.  This is hardly surprising though, it is seen across the fields of human endevour.''  I have to disagree with this.  Many are good, true, mostly because they are more familiar with different tools and certainly more well read, but I know many people who do their job only for money and are excellent.  [My experience doesn't follow yours.  In fact, outside the financial industry (and arguably there also), I have never met a person who is first rate at *anything*, and who is primarily motivated by money.  I have been lucky enough to know and work with many people who were world-class in their fields.  In many fields, this is almost tautological, as it is not possible to make 'really good money' at them.]  Lol, maybe I do find that because I DO write banking and finance software almost exclusively.

Yes.  That's why I love the Free Software Community.  All the programmers are above average.  HaHaOnlySerious.
----
see also: MoneyOrientedProgrammers