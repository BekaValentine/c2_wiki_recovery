Not OpenSource. This includes not only ClosedSource (where the code is not available
at all), but any case where software does not qualify as OpenSource according to the
OpenSourceDefinition <http://www.opensource.org/docs/definition.php>.

----
''OpenSource has a precise definition, but the opposite is not Closed--it's proprietary.  For example, Microsoft has shipped the source code for MicrosoftFoundationClasses for over a decade.  It's not ClosedSource, but it's not OpenSource, either.''

Isn't that the point?  "And some non-Opensource software has no source available to you at all.  That is ClosedSource software."  Proprietary could be closed source, but it doesn't have to be. Proprietary is definitely not open source.  Closed source howver is always proprietary.

''Correct, but I think this point argues for proprietary as the correct inverse of "open".  I don't believe there is software that is neither OpenSource nor Proprietary; there is, however, software that is neither OpenSource nor ClosedSource.''