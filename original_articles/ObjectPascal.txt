There are several variants of ObjectOriented Pascal, all derivative of NiklausWirth's original PascalLanguage.

The first was invented at Apple Computer, with Wirth's cooperation. This was originally called Clascal and used for the AppleLisa's UserInterface, and then mutated into ObjectPascal for MacApp on the Macintosh.

ObjectPascal adds units (modules) and classes (object definitions) to the Pascal language. It accepts all the syntax of the original procedural language, although variations exist within compilers as allowed by the original Pascal definition.

UcsdPascal, an interpreted system developed at the University of California at San Diego, was a predecessor to ObjectPascal.

The Macintosh MacApp application framework was originally written in (and partly developed concurrently with) ObjectPascal.

On the PC, the most popular implementation of ObjectPascal is BorlandDelphi. The Delphi development environment from http://www.borland.com/ uses an object-oriented version of the Pascal language that was originally called ObjectPascal, but has since been renamed DelphiLanguage to avoid confusion with Apple's ObjectPascal and other object-oriented Pascal variants.  It adds ExceptionHandling, RunTimeTypeInformation, SingleInheritance, interfaces, objects, DynamicTyping, and so on.  It feels a lot like JavaLanguage, with some similar syntax to SmallTalk, being basically StaticallyTyped but with dynamic bits.

For a free implementation of ObjectPascal that supports many different platforms and OperatingSystem''''''s, take a look at FreePascal ( http://www.freepascal.org/ ).

You also have GnuPascal, and BorlandKylix for LinuxOs available. 

----
CategoryProgrammingLanguage CategoryDelphi CategoryPascal