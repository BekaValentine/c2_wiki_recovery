After reading LOTS of postings here and studying newsgroups and other resources on the net, I (JanNilsson) decided to start this page.

Background:

J2EE (JavaTwoEnterpriseEdition) has been around for a short time but long enough for people to start using it.
The production environment for J2EE is 1.1 today (Aug 2001) but the 2.0 final draft has been available for a while and BEA has a 6.1 port available. 
* 2004 update: I think the current version is 1.4. Is JavaWebServices a new set of packaging?
** WebService''''''s is basically a mechanism to support SOAP. RMI is very Java-specific, but CORBA and SOAP allow J2EE components to talk with non-Java entities.
* Any news (2004) regarding v2.0?

The thing is that my hard-earned experience is based on 1.1 and 2.0 differs quite a bit regarding EntityBean''''''s.

Most of the people seem to work on "huge banking applications" or something like that but what they are doing is "webifying" a proprietary system to be used by not-so-demanding customers over the Internet.  The "real" business logic still resides on some IBM mainframe or so.

There must be more people around the world that think that a complete J2EE technical strategy for their enterprise is the right thing. That ALSO includes the clients. Rich GUI clients working against the J2EE-based server, not VisualBasic and client-server but Swing -> SessionBean''''''s -> EntityBean''''''s -> RelationalDatabase.

I would like to discuss the consequences of migrating from the old environment to J2EE including the use, or not, of EntityBean''''''s; mapping the database to EntityBean''''''s, or not mapping and using SessionBean''''''s; the number of layers in the application; the different patterns that can be used; pitfalls and successes.

I sincerely hope someone will join me!!!

----
'''J2EE pattern discussions'''

There is this 2004? book CoreJtwoeePatterns. Anyone seen and have comments on it?


----
The original contributor would have starved by now (3 years since its creation), if he relied on the contributions from other people on this subject. I am hoping there are more Java developers this time around (2004). -- DavidLiu

----
CategoryEnterpriseComputingConcerns