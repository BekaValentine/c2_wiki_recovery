Yet Another Web Scripting Language (YAWSL "Yaw-Sill") 

When working for clients whose technicians (non-programmers) dictate what technologies are available to the developer (programmer). Almost always involves the latest BuzzwordCompliant technologies (especially Microsoft languages: ASP with VBScript, ASP .NET with C#, etc.). 

The rationale is always: "You have to develop with this [YAWSL] because our staff is only experienced with it." Then why aren't you developing it yourselves? 

----

If they are all pretty much the same kind of thing, which "yet another" sort of implies, then why does it matter which one they pick? If one lacks something important, then let them know. "But Active Foo Pages lacks a Flux Capitor, reducing our productivity by an estimated 30%."

----

It matters which one they pick because it leads unnecessarily to ThreeLetterAcronym hell.  Although it only takes an experienced programmer few hours to learn YetAnotherWebScriptingLanguage, all these ProceduralLanguage''''''s are basically the same: interpreted, CGI, with equivalent libraries, and different (yet 1:1 mappable) syntax.  The fact that gullible people seem to believe the marketing hype that says "Programming in {PHP, ASP, .NET, Perl, Python, etc.} is 30% faster than {PHP, ASP, .NET, Perl, Python, etc.}." is naive.

All YAWSLs wind up being TuringEquivalent.  The algorithms you implement will necessarily have the same TimeComplexity.  Those who have studied ComputerScience will tell you that improving performance by a constant factor (i.e. X%) is insignificant in the long run because of MooresLaw.

----
CategoryScripting