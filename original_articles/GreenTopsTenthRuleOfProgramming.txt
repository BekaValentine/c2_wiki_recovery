A twist on GreenspunsTenthRuleOfProgramming for fun and profit. Feel free to move this to TopMind topic when cooked.

* ''GreencoddsTenthRuleOfProgramming'' - Every sufficiently complex application will either have to use a database or reinvent one the hard way.

* ''Greenmux's Tenth Rule of Programming'' - No powerful classification system can work effectively by assuming mutual-exclusion of type or category. Thus, sets are more flexible than PrimaryNoun and polymorphism. (MutuallyExclusiveCategoriesDontScale)

* ''Greennav's Tenth Rule of Programming'' - OOP languages with lots of meta-ability are essentially a OODBMS, which are really NavigationalDatabase''''''s that store code snippets (methods) or pointers to snippets. (DOM and the SmallTalk environment qualify.)

* ''Greenfix's Tenth Rule of Programming'' - Any serious attempt to clean up and formalize navigational structures will lead to something that looks suspiciously relational.

* ''Greenverb's Tenth Rule of Programming'' - At least half of OO app methods are usually repetitious reinvented forms of DatabaseVerbs.

* ''Greenpsyc's Tenth Rule of Programming'' - Any detailed evidence for OO betterment will rely on assumptions or pet theories about human or personal pscyhology. (And the theories will either be wrong or not universal.)

* ''Greenlink's Tenth Rule of Programming'' - OO'ers talk about how powerful OO's behavior-handling abilities are, but the hard part and source of most OO headaches is managing all the relationships ''between'' objects.

-Top

