The class inherits an interface - a set of member function prototypes defining its externally visible usage. It does not inherit any data members or code for those member functions. It also doesn't inherit any construction or destruction code.

The class is required to implement all the member functions defined in order to become concrete.

-- KatieLucas

''Usually, it is required to implement everything in order to '''compile'''.''

No; it is common for a class to inherit an interface and provide only a partial implementation. Such a class is abstract (as opposed to concrete), but certainly will compile. (In CeePlusPlus and its kin, trying to instantiate such a class won't compile, however...) -- ScottJohnson

''(Within Java, consider an interface method being "implemented" through only throwing an ''UnsupportedOperationException''.)''

----

In a language with StaticTyping, InterfaceInheritance usually (always?) implies a subtype relationship.  (Languages with DynamicTyping don't much care....)
-------
See also: InterfaceFactoring
----
CategoryPolymorphism