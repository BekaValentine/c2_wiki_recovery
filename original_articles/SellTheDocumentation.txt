One potentially successful revenue model for FundingOpenSource:

1. Release the software for free with minimal support (e.g., a readme)

2. Direct the new user to a site where they can find rich, helpful documentation.

3. Give them the option of purchasing:
* Introductory Tutorials - $2
* Intermediate Documentation and Tutorials - $3
* Advanced Documentation - $5
* Entire Doc Package - $7
* Codebase - $0

Your business is now to develop both reliable software and high-Quality documentation. But OpenSource requires thorough documentation anyway... add some nice ClipArt and you're getting close already. Find a simple and safe e-book or e-doc mechanism that can ProcureCreditCardPayments in exchange for access (I wish Amazon would open that up to "the rest of us") and you're on the road.

-- ChristopherGaltenberg

The pricing is a little naive.  It will take an awful lot of $7 documentation packages to pay the salary of one developer for one year.  For round numbers, assume a loaded rate (salary plus overhead) of $98,000.  This comes out to 14,000 documentation packages, assuming no reproduction or shipping costs.  Probably the way it will go will be the service route, with companies providing support at (say) $100 an hour.  Mix writing code with field calls to install or fix a company server. 
----
Isn't this why RichardStallman is so mad at O'Reilly Books, and why he created the FreeDocumentationLicense?

''Well, I haven't actually read the FreeDocumentationLicense mentioned above. I assume it was intended to curb things like O'Reilly books about OpenSource software (like how to use Unix or how to prgram PHP).''

''IamNotaLawyer, but I don't think it's possible to restrict the right of others to comment on or write about your work. It's a clear case of FairUse (may be mistaken now that the stupid DigitalMillenniumCopyrightAct is around). Just because I wrote this doesn't mean I have the right to stop you from replying or criticizing or analyzing or documenting it. It would only be possible if the documentation included large chunks of the source, which is really not typical of documentation.''

No no no. IIRC, RichardStallman never thought that O'Reilly was violating the GPL; he was angry because they failed to put their books under anything like it. He thinks that books about GPL programs should be under the GPL like the programs themselves; that way anybody who distributes / changes the program can distribute / change the documentation, too. A GPLd program which has only proprietary documentation, to his way of thinking, is half-proprietary.

''If the code is GPL, what's to stop someone else from producing GPL documentation? Or proprietary documentation for that matter? It seems to me that the documentation is entirely separate from the software and Stallman doesn't have anything to be upset about in this case.''

You can read Stallman's words regarding the subject here: http://www.gnu.org/philosophy/free-doc.html. His primary objections to proprietary print-only documentation are that (a) the technical content cannot be updated by people interested in doing so, and (b) its existence discourages production of free manuals for free software. And Stallman doesn't claim that proprietary documentation writers don't have the legal right to do what they are doing; he just thinks the practice is "wrong" in the same way that producing proprietary software is "wrong".
----
This is not just a model for open-source--commercial software companies are using this model as well. When I bought Microsoft Word 2.0 and Excel 2.0 way back when, they came with thick and very useful manuals. Now, you just get "context-sensitive help", but no way to learn how to use the product.  Similarly, other big complex products like Windows, Oracle, etc. no longer come with documentation other than CD-ROM--and the documentation sets cost hundreds of dollars.

It has happened in computer games too, around the time of the first version of Civilization. They give you a thin introduction with the game, and then sell you strategy guides that cost about the same as the game itself.
----
If people aren't willing to pay for software, what makes you think they'll be willing to pay for documentation?

''software is risky, documentation isn't quite so, thus the rationale for purchasing evaluates differently.''

You must, however, ensure that you provide sufficient documentation that the product is useful with your original documentation. You've got to give them EnoughRope.
----
See also SponsoredOpenSource, OpenSource, FundingOpenSource