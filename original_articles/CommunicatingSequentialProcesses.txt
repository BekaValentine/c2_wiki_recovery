CommunicatingSequentialProcesses is a concurrency model invented by TonyHoare. He wrote a (good) book about it by the same name. The book is now available for free online from http://www.usingcsp.com/. 

Other similar models are listed under ProcessCalculus .

----
Professor Sir Charles Anthony Richard Hoare, FRS (TonyHoare) is currently [2003/2004] working at Microsoft's Cambridge (UK) research facility helping with a language based on CSP and C#: PolyphonicCeeSharp (now CeeOmega).

Other ProgrammingLanguage''''''s which have built-in support for CommunicatingSequentialProcesses include:
* OccamLanguage
* FiniteStateProcesses
* ErlangLanguage (similar in spirit to CSP)
* LimboLanguage
* AdaLanguage
* Squeak: a Language for Communicating with Mice by RobPike: http://doc.cat-v.org/bell_labs/squeak/  ''(whoever changed this to SqueakSmalltalk is ignorant of the fact that there exists two Squeaks: the SqueakSmalltalk and the Squeak language developed by Pike.  Please click on the link before blindly assuming you know which is which.  Thanks!)''
* StacklessPython
* GoLanguage

''Erlang uses a model that is closer to ActorsModel, and Ada is debatable: you can implement CSP relatively easily using task rendezvous, but it's really a shared state model.''
----
Hardware implementations of CommunicatingSequentialProcesses also exist.

* SeaForthArchitecture
* TransPuter

----

Also see ProcessCalculus, SendReceiveReply, JoinCalculus, ActorsModel, JavaCsp, OhHaskell.

----
CategoryBook CategoryOnlineBook CategoryConcurrency