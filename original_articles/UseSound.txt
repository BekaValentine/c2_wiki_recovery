Most personal computers sold these days have built-in sound hardware.  But with the exceptions of games and music players, very few applications take advantage of sound as part of the UserInterface.

Use of sound has these benefits over visual indications:
	* Attracts attention even if user is not paying attention
	* Does not pop up a dialog box or other visual indication that might obscure other information or interrupt the user's actions
	* Can be heard from across a room
	* Can be used by applications that have no visual user interface.

'''But,''' use of sound has these drawbacks:
	* Sound hardware may be missing, misconfigured, unplugged, turned off, or volume may be turned too low to be audible.
	* Other sounds may drown out application sounds (user may be listening to music, or the environment may be noisy).
	* User may not understand the meaning of the sound.  ("Why did it beep?")
	* User may have hearing problems.
	* Sounds may bother people who are not interested in hearing them.
	* Users find some sounds unpleasant.  Preferences vary widely between users: what sounds like a pleasant beep to one person might sound like fingernails on a blackboard to another.
	* Overuse of sound is distracting.  Nobody wants their computer to sound like R2D2 all the time.
	* If multiple pieces of equipment are close together, determining which one is the source of any particular sound may be challenging.

Because of the drawbacks, sound should generally not be used as the only indication of important information that requires user attention.  Use of sound in conjunction with visual displays gives the benefits of sound and eliminates many of the drawbacks.

Use different sounds for different events--using the same monotone beep for all events eliminates meaningfulness and forces the user to investigate further to determine whether it was a "good beep" or a "bad beep".  Sounds should be configurable so that users can turn them off, increase/decrease their volume, or use a different sound that they find more pleasant or more meaningful.

Some applications or web pages have a constantly playing "atmospheric" background sound, often musical.  Users often find this annoying after a couple of minutes.

Sound can be very useful when debugging an application.  A beep sound can be used to indicate when an important-but-invisible event has taken place.  Some operating systems allow one to associate sounds with process start and stop events, allowing one to hear when server applications start and stop.  When debugging distributed systems, hearing different sounds from different machines can help one determine what is going on.

----

I've found sound to be a very good tool for background tasks, especially when I want them to alert me to problems. For example, my team's build server sits on a desk just next to mine. When a build breaks, it plays a sound clip, alerting anyone nearby to the problem immediately (it also sends out email, but the sound is a good "heads-up").

''Sounds familiar: http://paul.merton.ox.ac.uk/computing/msbug.html''

----
A system I worked on once had a system of sounds and email - the on-call person had a text beeper hooked up to the email system, so a production machine with problems would email the support address and the beeper would get the message.  During work hours, the production machine would also rsh to the on-call person's computer and play a sound, chosen for type of problem - a toilet flush for full queues, barking dogs for a communications failure, etc.
-----
Being one of the people immediately deactivating all sounds in the OS when installing and surfing in OperaBrowser with the Option "Enable sound in webpages" disabled I must say that this is the worst idea ever. Sound should be limited to content and never used for non-critical user interface use (it is okay to use sound to tell me my CPU fan has died but everything below that is only annoying).

-----
See BeepInterface, SpokenLog
----
CategoryUserInterface CategorySound