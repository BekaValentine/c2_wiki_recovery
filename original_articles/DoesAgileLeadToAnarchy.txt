Does the adoption of AgileSoftwareDevelopment lead to anarchy.  Is this a bad thing?  If so, then what are the rules or practices that would prevent this?

''Anarchy can be used as medicine against dogmatism and sluggish thinking.  I suspect it is a medicine you can overdose on.  I think that AgileMethods strike a good balance.  They don't dismiss procedure and method, neither do they let any particular method dominate: "Individuals and interactions over processes and tools".''

http://swt-www.informatik.uni-hamburg.de/publications/files/anarchy.pdf - Making Use of Anarchy in Systems Development

"bad thing" => No. Anarchy (ie. LibertarianSocialism, ParticipatoryDemocracy etc.) is a GoodThing. Especially OpenSourceAnarchy, which seems to work pretty well: http://ming.tv/flemming2.php/__show_article/_a000010-001239.htm
----
ScrumProcess holds as a tenet that there is an EdgeOfChaos at which it is possible to have a complex but still adaptive project. Agile methods supposedly allow you to operate in this region, or to 'push' the edge of chaos (presumably this puts you at a competitive advantage versus other companies that couldn't push it as far). Compare this with the aviation expression PushingTheEnvelope.
----
For me the essence of AgileMethods is feedback to improve the process, together with a determination to make sure each constraint can always be justified. There's a big difference between adaptability and anarchy. Anarchy in software development, to me, is CowboyCoding, and is something I'd always fight against.
----

Agile devlopment leads to anarchy if you think that anarchy is the only alternative to monarchy (or dictatorship).

----
See MethodologicalPluralism, NoProcess