Sponsored Open Source is software released under an OpenSource license that is developed for money.

There are a number of models for this type of work.

* '''Normal consulting''' work that doesn't offer the customer a competitive advantage, so they could care less who else gets access to the resulting software. For example, a marketing company that needs a utility program to help organize their customer database.

* '''Technology-promotion''' work where the existence of the software helps to promote some other technology, like a new piece of hardware, a new software library, etc. For example, makers of a new video card may want some simple apps written to demo their hardware's capabilities. Prime examples are HewlettPackard employing key developers of the XwindowProtocol and OpenDesktop in order to sell video and printer hardware, and InternationalBusinessMachines sponsoring the OpenSourceDevelopmentLab to enhance LinuxOs in order to sell server solutions. ''(Er... HP ''was'' a prime example. HP shut down that division in July 2005.)''

* '''Software-as-marketing'''. In this scenario, a company is in need of publicity. So, they look at putting banner ads on web pages, putting ads in magazines, direct mailing... But wait a minute, what if we sponsor a new OpenSource software package or some enhancements to an existing one. That way, we get good press for a good deed, and we produce a by-product besides just annoying people who really aren't interested in our advertisements.

* '''Donations'''. In this scenario, certain talented and popular individuals and groups are given donations by companies and private individuals either directly or through non-profit organizations. No strings attached. The donors typically have benefited from their previous projects expect them to continue their work without being distracted by a RealJob and trust them to use the money wisely. Examples of this are YetAnotherSociety, DamianConway, and AppleComputer's giveaway of Intel PowerBook''''''s to DarwinOs developers.

* '''Token jobs'''. A variation on '''Donations'''. A company finds the work of an individual so critical to their success that they hire her outright to continue work unimpeded by the possibility of needing a RealJob. The job might entail some work for the company but is mostly about continuing their original project. Examples are LarryWall (employed by O'Reilly and Associates), DougMacEachern (Covalent), JarkkoHietaniemi (Nokia), and LinusTorvalds (OpenSourceDevelopmentLab).

* '''Seeking complimentary and sustainable support'''. Sometimes a client wants more functionality than one developer or a small team of developers can provide. Open Source is a way to invite more participants in the creation of a new product that is spiffier than the client can afford to develop on their own. As long as everybody benefits the use of Open Source becomes appealing even to the competitors.

''your ideas here''

The CoSource web site has links to some Linux Journal articles on how to make money off of OpenSource software. Unfortunately, http://www.cosource.com isn't working right now. Maybe some of the ideas in those articles apply to SponsoredOpenSource.

Berlios (http://www.berliOS.de) provides a service where companies can post their software needs and groups of developers can make a offer to build the solution. Project, if accepted by the company, is done in a ClosedSource manner but the end result is licensed under an OpenSource license. The main target are mainly smaller companies where the idea is that a group of companies with similar needs get together to sponsor a project, thus splitting the cost.
----
The development of IvTools was supported for over six years in this manner, part of the time through consulting to an organization who had no interest in selling such capability, part of the time through employment in such an organization. Required a BSD-style copyright to keep open the possibility of embedding in proprietary products.
----
The most convincing arguments for OpenSource (or anything) are inherently selfish, especially when dealing with businesses. When I do '''normal consulting''' and wish to license some of my work as OpenSource, I provide a concrete financial incentive to my clients. Usually this takes the form of a lower rate for time spent on OpenSource work. I've used this approach twice and it was snapped up without argument. Both companies were OpenSource friendly, so it has yet to be tried in an ambivalent or hostile environment.

A simple rule of thumb is established before-hand about what is to be allowed as OpenSource and what is not. I usually go with

	1. Work on existing OpenSource projects remains OpenSource

	1. Anything specific to the company isn't OpenSource

	1. Anything critical to the company's success isn't OpenSource

	1. Everything else is open to negotiation.

The first is obviously important, and it overrides the rest. Obviously you don't want to fix up some existing project and then be disallowed from posting the patch. It also helps maintenance, as you don't have to keep a local set of patches.

#2 is to protect the consultant more than the client. A savvy client could declare random crap that isn't useful to anyone else OpenSource just to get the rate cut. #2 protects against that.

#3 is to protect the company. They obviously don't want to be giving away trade secrets to their competitors.

#4 could have been '''Everything else is OpenSource''' but I fear that might frighten off some clients as being too open ended.

-- MichaelSchwern (7 Oct 2001)
----
CategoryOpenSource