We will design applications:

* that other developers can easily debug and maintain
* that can be easily altered to meet new, changing, or extended BusinessRules
* with documentation that allows new developers to understand the dataflow and ExceptionHandling
* that practice GracefulDegradation
* that ReduceCoupling
* that balance DesignForDevelopment, DesignForNecessity, DesignForPerformance, DesignForTestability, DesignFromTheClientSide, and DesignFromTheInsideOut
* that implement VersionControl
* that can stay current to trends in the UserInterface
* that use SQL commands against Views for set operations
* that implement BusinessRule logic in commented code within a strongly typed language with integrated debugging tools

----
''"...that use SQL commands against Views for set operations"''

Amid a collection of sound and otherwise general principles for developing business applications, this seems rather incongruously application-specific.  Depending on the requirements, SQL is not always the best way to implement a set processor.  This tip might be more appropriate under DatabaseBestPractices. -- DaveVoorhis 
----
CategoryDesignIssues