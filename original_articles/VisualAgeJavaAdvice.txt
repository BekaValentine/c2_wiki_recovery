This is a place for the VisualAgeJava gurus out there to help all us poor mortals.

-----

Anyone managed to integrate AspectJ with VAJ? ...lemme know when you do, please. --DanGreen

-----

I can't believe they still only support Swing 1.0.  Has anyone had any success developing Swing 1.1-based projects in VisualAgeJava?  I don't need the visual GUI tools -- just the ability to edit, compile and run code.  --JohnBrewer

''Yes, just use the "EarlyAdopter" versions of the Professional and Enterprise editions. Rumor has it that a new-improved version is imminent.-- TomStambaugh''

You can import 'Swing 1.1 for JDK 1.1' (available free from Sun/Javasoft)into your regular VAJ, and use that.  Works fine, but remember to only import the javax.swing.* stuff from the jarfile, NOT the com.sun.java.* stuff as it'll collide with the existing Swing 1.0 classes that VA relies on (and protects zealously).  For the same reason, don't import the newer Swing into the same project as the old one: create a new project.  For example, I've put all the javax.swing.* packages into a project called 'JFC Swing class libraries' and versioned it as '1.1.1fcs'.  Presto!  All of those other things complaining about missing 'javax.swing' magically fixed.

As for the Java2 version of VA, VAJ3.5 is expected around mid- to end-Q2.  Better late than never.   --RichardEmerson

Are you saying that you cannot use multiple Java versions with VisualAgeJava?!? I really need to be able to (even ad-hoc) run my projects under multiple versions. Run my UnitTest suite with 1.2, then with 1.3, debug with either, and so on. Or are you just talking about the JVM VisualAge itself runs under?

''VisualAgeJava only will run code with 1.2.2.  To run debug 1.3 code you have to A) use another IDE, B) use the IBM Distributed Debugger (which comes with VA and is pretty decent).''

-----

Does anyone know if it's possible to import java source code, and then use the visual composition on it?

As a test, I exported my code (which I used visual composition to create some frames, buttons, etc.) to .java files. Then I imported it into VisualAgeJava on another computer. The code all imported correctly, and I was thinking that it might read through the code and build the items in the visual composition pane. It doesn't. (at least not automatically) Is there a way to have it do that?

I want to know because there are some old programs that weren't written with VisualAgeJava that I want to import and use visual composition on. --JoshuaBaran

''The VisualCompositionEditor relies on a large amount of metadata that is only stored in the repository. The only way to retain the "what links to what and how" information when exporting from VisualAgeJava is to export the code as a repository.''

