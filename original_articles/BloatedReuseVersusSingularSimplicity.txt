Here's an interesting and humorous blog quote about using OOP to make bureaucratic code. (Note that the author didn't necessarily imply that OOP "must" be bureaucratic, only that it is often used that way in practice.)

''"But the bureaucracy of team programming can always dismiss any solution as too specific. There are always more complicated ways to express 2+3; seven lines would not be nearly enough to satisfy the bureaucratic programmer who is long on enthusiasm and short on ideas.''

''For example, last year I looked for a good program to generate Captchas. (These are visual Turing tests; I wanted one to spam-protect e-mail addresses.) Unfortunately, open source efforts were then dominated by an extremely bureaucratic project called JCaptcha. Why use a framework with hundreds of classes when some implementations are so simple, the lead developer asks. His thinking is that it will be that much easier to extend the code in the future. I hope not!"''

(From: http://scottaaronson.com/blog/?p=18 )

In short, a simple code set is often better than a larger version that has added bloat for the sake of "reuse".
----------
A humorous look at bloat:

http://www.ariel.com.au/jokes/The_Evolution_of_a_Programmer.html
-------
CategoryReuse