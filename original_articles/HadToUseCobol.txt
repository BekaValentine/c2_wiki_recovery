If you ever had to use CobolLanguage (even if only for a short time), please add yourself to the list below.
* AlVega (6/99 - 10/04) COBOL is how I got my start in IS, I actually like the language but I like Java more. ;-)
* FalkBruegmann (thankfully, only for three months; but I had to learn AbapLanguage ("German Cobol") as well)
* NatPryce
* JeffGrigg (COBOL-85, 2/93 to 7/95) -- they were moving from mainframe to Unix and needed some help.  (...then I went back to C/C++.  ;-)
* NickBensema (They taught it at DeVry, and it was used in at least four semesters' worth of classes.)
* IainLowe (I'm still scarred)
* KeithBraithwaite (the Government made me)
* JimRussell (Back in the 60's I did a lot of COBOL, and had about 50 COBOL programmers in the three departments that reported to me.)
* PeterMerel (Especially screen-cobol on the old Tandem Non-Stops. The alternative was TAL. Trust me on this, TAL was worse. A '''lot''' worse.)
* GerryAllen (Wrote a ton of COBOL from 1964 through 1989 on IBM 360 through AS/400).
* PeterLynch (Wrote mostly COBOL from 1968 through 1986 on IBM 360 series, NCR VRX and B series, Control Data Master OS, Primos).
* AndyMorris (Did loads of MicroFocus Cobol with character Dialog on PC's under dos Win and NT)
* SavasAlparslan (School Project, 1993. MS COBOL 1.01, 640KB RAM, No hard disk, 5.25 floopy system)
* JeanPhilippeBelanger (University stuff in 1994.  The school where I went still taught it back then)
* BruceIde (Subjected to 3 useless semesters of COBOL. Thanks for nothing Purdue and Troy State! Our newbie claims to have studied VisualBasic and COBOL for his IT degree, and he's only been out of school for 3 or 4 years. There should be a law...)
* PrestonRickwood (COBOL is the basis for the ERP my client is using. Ask me about patching it!)
* CameronSmith
* VhIndukumar (In university. I hate it still ;-))
* ScottCooper (I was young and I needed the money)
* RomanStawski (''Actually I quite liked it -- ArthurDent on Vogon poetry'')
* DanielYokomiso (I doing it right now 2003-06-11, or at least reading it. I have to understand a 20 kLOC application in order to write a specification for it then reimplement it in Java. The excessive use of GoTo''''''s and GlobalVariable''''''s makes me dream of HaskellLanguage every day.)
* DonaldFisk (I supported the Burroughs-90 Cobol s-code (aka byte code interpreter), and after extending it to support ANSI standard arithmetic, wrote a test program in Cobol.	Never done any business apps in it, fortunately.)
* GiuseppeProment ( It's only a language...)
* StevenPeterson ( Took it in college in case I needed it to get a job, but so far [18 years] hasn't been necessary.)
* DougMerritt (while in high school, took a Cobol course at night at the local junior college, along with every other electronics and DataProcessing course they had. I still think that its PICTURES are unsurpassed for financial report formatting. Then again, I've only been doing systems programming since then. :-)
* KenCarpenter (I too took it at a community college, with a buddy while in high school.  This led to the our favorite allusion to a line the movie Fast Times at Ridgemont High.  "Mr. Spicoli, what do you think you're doing?" "Learnin' about COBOL.  And havin' some food!")
* LeeDise (Sorry, I refuse to look down at something that has made so many of my house and car payments)
* GunnarZarncke (during technical college and vacational training and in the first year after that. I didn't despise it and tried to do as much StructuredProgramming as possible. I remember learning an idiom for loops for processing DB-Results (e.g. for generating reports) with (multiple levels of) GROUP BY. It was called  control-change-processing or the like, TopMind might know.)
** I learned it as "control break". I've also done a little COBOL, but don't miss it. I can see how it fit the IBM punched-card paradigm fairly well, though. --top
* SusanDavis (spent a summer as an undergrad working for a COBOL shop rather than the local amusement park)
* PedroLopez Working for a Uni for 2 years. COBOL, JCL, IDMS and OS390. I learned to be kind to maintenance programmers.
* PaulHudson (spent an evening a week at high school programming in DiBol, which according to the below, counts)
*JohnReynoldsTheStudent Doing COBOL/CICS/DbTwo even as we speak. It has paid the rent, and I would not despise it so much if it did not cause (almost) all of its practioners to become type-cast and relegated to MainFrame hell forever. And, furthermore, I do suspect that CobolCausesBrainDamage (at least in the long run). 
*BusinessGuyCraig Working against a competing company that still uses Cobol 85, doing data conversion. A mess, to say the least... I wonder how the place is still in business.     
*CarlosIjalba -I´ve just had to learn COBOL, since the iSeries shop were i´m working at the moment has LOADS of COBOL proggies. After having used Pascal, C, VB and PHP, hey, it´s not such a bad language after all, you now...
* DavidConrad (Back in 1990 or so my then-employer sold an accounting system written in COBOL to a local jewelry store, which wanted some modifications done. Read a book on COBOL over the weekend, started working on it on Monday.)
* TimJarman My first paying job entailed going on a 4-week COBOL course but I never used it - I once left a job because they wanted me to maintain something written in a Swedish dialect of COBOL.
* TopMind - One app to extract and convert some data from IBM IMS database to a flat file. The hardest part was configuring the IMS access, not the COBOL. It was interesting to learn some IMS.
* CraigEverett - In 2011 a drinking/trouble mate from a previous phase of life contacted me while working for a company in South Africa that wanted to forward port and add features to a system written in COBOL-85. I thought he was joking, but apparently ''lots'' of financial and ERP code is in COBOL. One of the weirdest project experiences I've had (not just because of COBOL, but that was a fitting context for other elements of the experience).
* DonBranson - 1983 - 1995 In the DPS department (Data Processing Services) at Washington University in St. Louis.
* WayneWerner - 2012 - I learned about temp storage queues and calling other programs. And how much fun and excitement there is when the 4th program is modifying the memory that the 1st program is looking at.

------

Adding one's name to the list feels like admitting to being a crossdresser or something. It's like, "I used COBOL, but I didn't inhale".

-----

Does DiBol count? -- MichaelChean

''I think it '''would''' count.  -- JeffGrigg''

''I always thought that it was '''Diabolic''', with silent a, ic'' 

-----

Regarding one of the above comments: Lots of languages are WorseThanCobol.

''Care to give examples? Cobol is one of the few heavily-used languages without any kind of abstraction for function parameters. It refuses StructuredProgramming.''

I don't know about 'lots', but 'some' languages are certainly WorseThanCobol.  RPG (the ReportProgramGenerator) leaps immediately to mind. --

...as does DiBol. -- SusanDavis

''Comparisons with AssemblyLanguage would be interesting, especially those with a good macro-assembler.''
----

RE: "''Cobol is one of the few heavily-used languages without any kind of abstraction for function parameters. It refuses StructuredProgramming.''"

Actually, you can do that with subprograms in COBOL-85.
Calls to programs (and subprograms) accept parameter lists.
But lack of user-defined types cripples the usefulness of this feature, for ModularProgramming.
And the community practice of COBOL programmers will probably prevent most COBOL programmers from using the language in more modern styles, even when it is possible.
I don't know if COBOL-95 fixes the problems with the lack of user-defined types.
(StructuredProgramming is well supported in COBOL -- particularly well supported in COBOL-85.)
-- JeffGrigg

----

Nobody ''has'' to use Cobol. It's a choice. I would rather bag groceries than do Cobol.

''HadToBagGroceries?''

* The two are the same thing: you stuff a bunch of junk into a boring brown bag, it gets all wet and slimey, products mix together in the bag (no local scope), and then the bottom falls out on a whiney customer, making a big mess just as you are about to leave for home, delaying the end of your shift. One is just analog. -- top 

Tell this to the ERP vendors whose products are ''still'' in COBOL!

Years ago, I had a sign above my desk which read, "Will program COBOL for food", implying the depths of desperation needed to force me back to COBOL. --

----

I am really ''amazed'' at how dead my job is.  

I have been programming for four years now, exclusively in COBOL.  From what I read on the internet - I program in a ''dead'' language for a ''dead'' company that is making ''dead'' profits and giving me ''dead'' paychecks. Not to mention a nice ''dead'' benefit package.	

I'll tell the truth, being ''dead'' has been pretty beneficial lately.  :O)

* ''Cobol isn't dead then?  It's just pining for the fjords.''

* Well, on the upside, I've never seen a stressed corpse :-)

* ''The vast majority of languages used in production are "dying" by today's standard. The "hot" list keeps moving.''

----
CategoryProgrammingLanguage, CategoryStory