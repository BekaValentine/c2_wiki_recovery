When software projects are in "live test" this is a sign of trouble: they ought to be live but are still in test.

"Live test" is an OxyMoron. 

''Some people think it means something definite and find that it describes a kind of test which is not confused, failing, or contradictory''

Or does it have a meaning I've missed? Yes, See next:

----
I would use this term to mean software which is functional but is living in a test environment to see if a user can "kill" it. I used this scheme on a program which was rewritten from one which was fragile and poorly constructed. My primary aim was to make the program live through anything the user might do wrong, any entry or sequence which would "destroy" the running of the program or destroy any "good" data entered to the point of destruction or killing. I found through this process three bugs. It is now stable and the data survives and should the process "die", recovery is built in. 

___

Live Testing is a great way to show clients what work is in progress, and simply involves placing your work in a temporary online destination usually with restricted access.

Clients can then check up and be satisfied the work is progressing well, or give feedback, without overly hassling the developer.  For the developer it can be useful to have versions up and running before launch, and accessible from more than one location.  A live test location with a good CMS can keep projects very well organised and accessible from anywhere and the developer does not have the retarding feeling of working in a vacuum.

Live testing is only a sign of trouble if it is used as evidence of final deadlines having been met when they have not, an upseting experience which has obviously led to the above post.  Otherwise they are a good offering to clients with many benefits to the developer.