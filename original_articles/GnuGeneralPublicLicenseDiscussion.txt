''Ive moved the arguments that someone deleted from GnuGeneralPublicLicense here... hope folks don't mind.''

''Someone may need to fix up the formatting below to get the voices right''

''DeleteThis when this is done... -- ScottJohnson''

----

Only if you're trying to steal the GPL'd code by incorporating it into a proprietary work. 

'''How can you steal something that is free? Actually you're not stealing it, you're infringing its copyright. '''

This applies to any software that depends on GPL'd code. If a nice implementation of a sorting algorithm is released under the Gnu GPL, I can't use it in my commercial code. Licenses like BSD don't impose this restriction. Of course, I can still use the algorithm (there would have to be a patent to prevent me from doing that), as long as I code it myself.

'''By ignoring the author's stated licensing terms. If they wanted you to be able to incorporate it into your commercial code, they would have made it BSD or public domain. It's free as in speech, not free as in anarchy. '''

And that's exactly why I BSD my code instead of GPL it. 

'''Author's choice. You have no more right to infringe a GPLed work than anyone else has to infringe upon your commercial code.''' 

Who said I had a right to infringe on GPL'd code? I'm pointing out a major drawback in GPL for commercial users, not advocating infringement. 


'''Well, you can be paid to create a new, GPL'd work, or customize an existing one (although this is a service). It is important to remember that "usefulness" is a relative term, and varies from person to person. A GPL author doesn't weight "commercial reuse" heavily, and "adoption" might not rank at the top of the list either. A drawback in the commercial arena isn't necessarily a drawback in the Free Software arena. The majority of software is custom work anyway; most of the customers I've known in that space really wouldn't care one way or the other - they're not distributing it.''' 

See http://www.gnu.org/philosophy/pragmatic.html. Perhaps someone could refactor this ThreadMode discussion into something more useful. 

That's why I said this was a drawback for commercial users. 

'''You also said: "Basically, Gnu GPL tries to infect other software with a free license.". "Infect" is pejorative. The GPL can only infect code in which GPL code is incorporated, presumably by someone who read the license of what they were copying.''' 

"Infect" was not intended to be pejorative. It's one way memes spread. GPL licensed code infects other code with the GPL license. 

Source code is inanimate. It cannot "infect" anything. A developer may make the choice to incorporate it into their product, but no one is forcing them to use it. Network effects may apply pressure (economic or otherwise) to take advantage of it, but that's not "infection". 

Viruses are inanimate, yet they infect cells. The GPL license, once applied to source code, infects any other code that uses it with the GPL license. This is the stated intention of the GPL license. 

The cell is animate. Two pieces of source code saved on the disk aren't exchanging any genetic material. Human intervention is required, thus a choice must be made. If one is incapable of knowing that they've copied GPLed code, then they're incapable of doing their job properly. The stated intention is to defend the continuing freedom of the GPLed work. This produces a side pressure to GPL other works, but it's hardly "infection". 

It is memetic infection. One behavior encoded in the GPL causes the entire GPL to be copied to other code licensed under it. That doesn't imply that human intervention isn't required. It's just a way that memes spread. The distinction between "animate" and "inanimate" is fuzzy at best and irrelevant to this discussion. 

Memes don't "infect" code, they infect people. GPL code simply cannot "infect" other systems. Someone may choose to incorporate it, in which case they must release their source - that's not infection, that's a conscious choice to use the GPLed source in their work. It's a license. If one wants to use the source, one must obey the terms. 

Memes can infect other memes and memeplexes. You seem to be ignoring the meaning of the word "infect". Yes, it is a conscious choice to depend on GPL'd code. Yes, that's infection. The two are not exclusive. 

----

A summary of points around the GPL, plus a few more:

	* If a program is released under the GPL, derived works ''which are distributed'' must also be GPL'd. ''This is not exactly true. They need to be GPL compatible, and the combined whole work needs to be under the terms of the GPL. -- JasonNocks''

	* GPL doesn't prohibit charging for a program, or for services/support associated with the program. However, it requires that others be granted the same right - you cannot have a monopoly on the rights to distribute a GPL'd work. This does have the theoretical effect of driving the marginal acquisition cost of GPL'd software to zero; in practice, folks are happy to pay for GPL'd software. (I recently shelled out $80 for SuSe Linux 8.2 Professional, with no regrets)

	* Regarding "infection". GPL requires that derived works be GPL'd ''(actually, again, this is not exactly correct, the derived work must be compatible with the GPL, and only if distributed)''. However, this requires an explicit act of writing a derived work based on GPL'd software.

	* If program A is combined with program B to form program C, and program B is GPL'd, then program C must be GPL'd. ''There is no requirement to GPL program A''.
		* ''Not quite... if you're distributing A as a piece of program C, then the source to program A must be available and free for further distribution. It doesn't have to be GPL'd, but it has to be 'GPL compatible'ed. '' You can, however, take program A (without any fragment of B), modify it, and distribute the modified version on terms incompatible with the GPL. (Interestingly enough, one of the arguments in ScoVsIbm, though that case isn't about GPL directly, is that because IBM integrated certain technologies with a UNIX-derived operating system, namely AIX, that the relevant code in standalone form is therefore part of UNIX and subject to the UNIX license agreement. This doesn't fly at all under copyright law. SCO has hinted at contractual language which has this effect - though recent evidence concerning IBM's UNIX contract suggests that SCO is all wet. No surprise...)
		* One interesting question: If I write program C based on GPL'd program B, and distribute it based on the GPL; can I then turn around and ReFactor out my unique contributions, producing a work which is entirely my own, and release it under a non-GPL'd license? ''As long as you maintain copyright ownership of your code, you should be able to re-release it under whatever license you wish. Of course, the previous code released with the GPL license still remains distributable as such (and can be forked, etc.). -- JasonNocks''

	* Quote from LinusTorvalds: "He who writes the code gets to pick the license". Developers of software, likewise, should choose components which meet their needs. If you want to write proprietary software, don't base it on GPL'd code. If you want to write free software that can be put in proprietary code, don't use the GPL.

	* What exactly constitutes a derived work is an open question under the law. One area of noticeable controversy is DynamicLinking - see GnuLesserGeneralPublicLicense for more info.