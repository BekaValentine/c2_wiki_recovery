A farm-boy who went to London to make his fortune doing indoor work with no heavy lifting. Here's a map showing the farm, if you're interested. http://www.streetmap.co.uk/streetmap.dll?G2M?X=400685&Y=520775&A=Y&Z=3 London turned out to be a dead loss: those high salaries are psychological danger money. So I returned to the rural north of England (but on the other side of the hills from where he grew up, working with CharlesWeir and sometimes also BenedictHeal. We wrote system software, utilities and applications for mobile devices, mostly phones, mostly under SymbianOs. However, my work there was done, DafyddRees (and formerly OliBye) at WDS.

Except that I'm in Singapore (while they're in the UK), helping to build that office's XP team as part of WDS's 24X5 follow-the-sun distributed agile development process.

See http://www.xpdeveloper.com/cgi-bin/wiki.cgi?KeithBraithwaite to see some other (specifically XP) stuff that I'm doing.
* ''BrokenLink 2008/05/19 ... WARNING WARNING DANGER WILL ROBINSON - may now contain malware ... is no longer about ExtremeProgramming, is now about WindowsXp.''
** ''Someone who knows more than I should check this.''

----
Co-presenter with IvanMoore of the ''Accentuate the Positive'' workshop at OT2001. And, with RachelDavies, of the ''First-order Project Management'' workshop at OT2003, and  with Ivan again of the ''Why Java programmers should learn Python'' workshop at OT2003. Also, panellist and co-presenter of sessions on introducing XP (with PaulSimmonds) and "tips for coaches" (with Tim Bacon) at XPDays 1 and 2.

Coming up, a session with SteveFreeman at XpDayBenelux on XP anti-patterns, and with NancyVanSchooenderwoert at XpDay 3 on XP for embedded devices. And some stuff coming up at OT 2004.

----

Ex-host of the WhyClublet. I won't be seeing you there.

Also one of the contributors to GreenCheese, the ReformSociety and BookShelved.

----

I once had a SlightlySpookyExperienceWithAmazon that was rapidly debunked.

----

This is a piece of deep wisdom from Mr Jeffries of this parish, found on DoTheSimplestThingThatCouldPossiblyWork

	 :	''...I believe [...] that a developer really needs to dig in until she has developed her own internal sense of quality.'' -- RonJeffries

Part of "quality" in code, is, I think comprehensibility. This is what Alexander was trying to reach in his "strips" experiment (as discussed in the RugBook and Gabriel's PatternsOfSoftware. Some members of the ExtremeTuesdayClub did a quick and dirty (and very un-scientific) version of this experiment in the pub one night [see http://www.xpdeveloper.com/cgi-bin/wiki.cgi?AlexandersStripsExperiment].

They did this (thanks folks) to assist me in designing a version of the experiment to use as an exercise in a presentation on "quality" that was put together for AMS, but not delivered before they made me redundant (forefront of the New Economy and all that). While Ron's line above comes from the DTSTTCPW page, I feel that this intrinsic feeling for quality has a lot to do with refactoring, too.

----

JeffShelby raises a good point: the opinions appearing on WikiWiki with my name attached do not necessarily reflect the policies of my employer.

----

Once upon a time I believed in the DocumentTransformationTheoryOfSoftwareEngineering, but now I feel that EveryoneShouldBeaMethodologist

----

Here are some things I believe about wiki:
	*Wiki ''is not'' a peer-reviewed journal of record.
	*RecentChanges is the least important page on Wiki
	*Wiki is interesting, useful and fun. It is not ''important''.
	*Any talk of copyright on Wiki is whistling in the dark. I'm not a lawyer, I may be wrong. Either way, I ''don't care''.
	*I will never again contribute to any page concerned mainly with the care and feeding of Wiki. ''This belief turns out to be unfounded.''

-----

Keith, I'm glad you're writing about testing. You're helping this XP wannabe to "get it." Thanks. -- WayneConrad

Thanks, Wayne. I'm glad you got something out of my rambling, to which I shall return shortly.

Keith, my preferred way of using wiki is to read your contributions. -- DierkKoenig

''Gosh! so nice a comment, so much pressure.''
----
By the way, I recently opened my KinesisKeyboard, and realized it would be a pain to saw it apart and run a cable between the pieces. The bowls are curved circuit boards slotted into ribbon connectors. Maybe the new USB models are structured differently inside.

PS. Any further thoughts on KinesisKeyboard in general? -- ShaeErisson

-----------

'''MyTechCareerIsDoingJustFineBecauseOfGlobalization''' (it really is, but apparently it's not permitted to say so here; stories of doom and panic only are allowed, it seems)

My previous job was with a company incorporated in the UK, and operating in the UK, but earning money form clients in the UK, in mainland Europe, in India, and in Canada. The funding that got that company started came from an Indian outfit. Look closely: investment ''from'' India, ''into'' the UK created my job.

My current employer is also a UK company, but with development offices in the US and Singapore. I was just recently in Seattle interviewing candidates for coach and developer roles there (look closely: jobs being imported into the USA from the UK), but that team will work on the single codebase (as will the Singapore team that I'll be building there over the rest of this year: jobs from UK -> SG) that services our paying customers in EMEA, Americas and Asia-Pac. So, in this case money comes from all over the world into the UK, then back out to those three development teams. Folks all over the world get to enjoy the benefits of our products, and folks all over the world get paid to build those products, jobs get created all over the place, and I get additionally paid to jet around making it all work, spending expense account money all over the place on my living costs as I go. 

I was laid off from my "e-commerce technical architect" job with a sizable consultancy when the bubble burst, but a month or so later I had the job mentioned up at the top. Globalization has kept me employed the last few years (and I expect it to keep me employed for some time to come). Globalization ''rocks!'' -- KeithBraithwaite

''One case does not make a trend.''

* He's not claiming a trend, he's just spitting in the face of those who '''did''' lose jobs while revelling in his own good fortune. Seems rather rude.

Let me be ruder still, then, and ask WhySympathizeWithTheUnemployed? (The furore over my supposedly brutal attitude to some group that certain readers chose to identify themselves with seems to have provided sufficient distraction for my happy experience of globalization above not to be addressed by the doom-mongers.) -- KB

Perhaps it could be more important to date the story. I have a similar one; my company is exporting our services to Greece for the Olympics in Athens.  -- NickBensema

Perhaps. These jobs are both tied in with the global rise in the uptake of mobile telecommunications. The first job was concerned with writing applications to run on the newer, more capable phones, the second to do with supporting users of these phones in gaining access to the more advanced capabilities of these devices. The story I tell has played out over the last three or four years. There's no on-off event that either are to do with, but rather a broader trend. Notice that the mobile comms world is a nice example of globalization itself. Both of these UK based companies benefit from their proximity to the HQ's of Vodaphone, T-Mobile, France Telecom, Nokia, Sony-Ericsson, Siemens... but actually do business world wide. -- KB

To me, globalisation or not, there are always jobs for good people.  Globalisation just means employers can make more of a choice, but they still have to ship.  In mobile telcomms some buisnesses in Europe have found that their old GSM systems, have over the last ten years, turned to balls of mud.  To develop their new 3g networks what do they do, there is only so may people that can write this stuff.  India it seems to me represents a way of getting the maintenace done so the buisnesses don't loose out to new competition in the new buisness cycle. Rhetorically, why should I worry any more that my job moves to Germany, than India? I wondered once whether open-source would lower the price of software, but it doesn't does it.  It just makes more complex solutions possible. --- AndyGavin.
----

On ZenAndTheArtOfMotorcycleMaintenance you said you were going to "explain why the time-invariant nature of data models makes them so difficult to understand (if you don't already understand the system being described)" -- what does time-invariant have to do with it?

----
CategoryHomePage