Good Requirements, i.e., the description of the problem are presented in form of UseCaseModel - UseCaseDiagram (s) with well-described Use Cases. That takes two kinds of expertise - the DomainExpert''''''s and RequirementsModeling specialists. InteractiveRequirementsGathering presumes single output out of those two categories of specialists. That is only possible when those two categories are interacting internally and transfer knowledge.

The alternative is making DomainExperts produce RawRequirements, then make RequirementsModeling specialists to turn that into proper model--

AlexJouravlev