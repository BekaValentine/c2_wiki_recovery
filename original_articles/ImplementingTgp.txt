'''Implementing TGP in an Enterprise'''

The TgpMethodology provides a way for the organization to prepare itself to be agile in evolving business areas. Most organizations constantly seek the infrastructure that will allow them to be agile. Enterprise agility is the ability to give a quick, high-quality, response to market evolvements. '''TGP claims that the core of this infrastructure is not technical'''. It lays in incorporating talented and knowledgeable BusinessProfessionals in the development process. The BusinessProfessionals can contribute both at the architectural level and at the details level (TgpProcess). Having the tailored abstractions (Types) and the effective framework (ProfileTemplates, PTs) the software configuration by profiles can be easily adapted to frequent changes. The overall can dramatically improve the durability and quality of the delivery.

TGP can be used in large distributed projects with hundreds of developers and BusinessProfessionals, as well as in a one team project. The creation of the shared model utilizes the precious talent of the architects and the business strategists. The configuration of the profiles and generating the ProfileTemplates utilize better the personnel which are more details oriented.

'''Implementing TGP in an enterprise is promoting four roles:'''

* BusinessProfessionals who define profiles, organic tests and give ideas for new ProfileTemplates.

* Professional Business Strategists who make sure that the Types reflect expected flexibility areas and control the flow of requirements for new PTs.

* Developers who implement generic classes.

* Software Architects who maintain the architectural components of the system: mainly the Types and interfaces.

In an enterprise, the implementation of the shared model can take advantage of the great mass of developers and BusinessProfessionals that can be recruited. The plug-in TgpArchitecture enables the formation of independent development teams. As the architects and the business strategists communicate to shape the Types and interfaces, the developers and BusinessProfessionals communicate to generate a variety of PTs and profiles in a distinct zone. In fact, TGP enables a lack of communication between different development teams; hence, it generates independency of the different teams, and solves a major problem in multi team projects. On the other hand, the success of each of the teams is highly dependent on their communication to the project leaders (the architects and business strategists) and to the customers, through the involvement of the BusinessProfessionals. Each of the teams is aiming to have its legs steady on the ground (through two-way communication with the users) and its head high in the sky (through two ways communication with the strategists, understanding and adjusting the abstractions of the shared model). The communication schema implementing TGP in an enterprise is presented in the following figure:

http://dl.dropbox.com/u/22745533/Tgp/general/Implementing_1.png

TGP can be used by an enterprise that promotes development of software in several fields. In addition to the well-known advantages of utilizing a common technical platform and tools, the acquired practice in the collaboration with business professionals, using the shared model, could also be treasured. A team of experienced software architects and professional strategist can generate a generic shared model that communicates with the specific ones. The specific models fulfill the requirements of a distinct unit, whereas the generic one holds a wide perspective. The communication schema implementing TGP in related fields (in this case in software two department of a bank) is presented in the following figure:

http://dl.dropbox.com/u/22745533/Tgp/general/Implementing_2.png

-- ShaiBenYehuda and OriInbar

----
CategoryAgileMethodology AgileProcesses AgileSoftwareDevelopment TgpMethodology TgpProcess TgpArchitecture IdfImplementation TgpBackground