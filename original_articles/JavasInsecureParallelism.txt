Per Brinch Hansen, "Java's Insecure Parallelism"

ACM SIGPLAN Notices Volume 34 Issue 4 (April 1999)
* <http://i.hsr.ch/Content/Gruppen/Doz/jjoller/Java/PBHansenParallelism.pdf>

in which the inventor of monitors complains about Java's concurrency model
on the grounds that:
* methods are unsynchronized by default, therefore concurrent use of objects is unsafe by default;
* it doesn't support multiple condition variables per monitor.

Note that efficiency is ''not'' a good argument for allowing unsynchronized use
of objects; see:
* "Guava: A Dialect of Java without Data Races" at <http://www.research.ibm.com/people/d/dfb/papers.html>
* "Type-Safe Multithreading in Cyclone" at <http://www.cs.cornell.edu/home/danieljg/publications.html>

----
See ConcurrentProgrammingInJava

CategoryJava CategoryPaper CategoryConcurrency 