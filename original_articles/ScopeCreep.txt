Scope creep (also called focus creep, requirement creep, feature creep, function creep) in project management refers to uncontrolled changes in a project's scope. This phenomenon can occur when the scope of a project is not properly defined, documented, or controlled. It is generally considered a negative occurrence, and thus, should be avoided.

----
ScopeCreep can be a pattern as well as an AntiPattern. I was in a job surrounded by 2 less competent programmers. We worked on 3 related projects, but I didn't wanna integrate with their horribly designed/implemented apps. So I expanded the functionality of all 3 of our apps into a super-integrated mega-app which I was the sole programmer of. They then got reassigned to less harmful projects and I wrote something far better than if ScopeCreep didn't occur. To reemphasize: ScopeCreep is GOOD when it comes from a GoodProgrammer's project who is surrounded by BadProgrammers (and this is very common case). Always expand the scope of the good and restrict the bad.
----
AgileDevelopment promotes scope creep to a methodology.

By not chiseling the scope in stone initially, but rather accepting it as fluid and changing, and planning to work with those changes, scope change may not be such a problem.

''Water shapes its course according to the nature of the ground over which it flows; the soldier works out his victory in relation to the foe whom he is currently facing.  -- Sun Tzu''

----
  ''They think so, and they are usually wrong. Developer features are usually kewl but useless''
Or even worse, useful.  Then the customer is overjoyed with that extra AJAX functionality that the developer put on form Z, and it becomes important, and becomes a bug that it doesn't work on forms A-Y.  No problem, it only took a few minutes.  Until, of course, the developer realizes that it won't work on form G because the controls are different, form J will require a nasty hack because that form edits data that's not yet in the database, and it causes a subtle, difficult to replicate bug on form N.  Suddenly a bright idea and a few minutes have crept into a week or two, and what seemed to be a nice feature, perhaps even one that would save the developer some work, has become an ever-growing buglist.
----
CategoryApplicationDevelopment