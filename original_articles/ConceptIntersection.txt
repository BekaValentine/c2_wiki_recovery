* '''An analysis of Concept Intersection'''
** BjarneStroustrup
*** http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2221.pdf
** Douglas''''''Gregor
*** http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2161.pdf
** This paper contains a recommendation to remove ''OR'' constraints from the concept implementation in C++0x.
** It also contains examples of workarounds to achieve the same effect.
** Current Position (7/07) at TheCppStandardsCommittee
*** http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2291.html
** This paper summarises the position on C++0x. N2161 is part of the current proposal and N2221 is listed as a background paper.
** I understand from Doug Gregor that concept intersections are not included in the proposals for C++0x.  -- JohnFletcher
* '''Comparing Concepts in Differentiated Ontologies'''
** PeterWeinstein
*** http://www-personal.umich.edu/~peterw/KAW99/weinstein.html
* Concepts 
** are a new language feature proposed for C++0x that provide complete type-checking for template definitions and uses. 
** can drastically improve the error messages produced by libraries that make heavy use of templates.
** benefit users by providing a more flexible, simple and cleaner implementation of the standard library producing short, direct error message.
** Introduction
*** http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n2036.pdf
** ConceptCpp
*** More information about concepts in CeePlusPlus.
** ConceptGcc - Information about a demonstration compiler for concepts.
* '''Programming Languages''' 
** Research
*** http://www.cs.cmu.edu/afs/cs.cmu.edu/user/mleone/web/language-research.html
* '''See also'''
** TheCppStandardsCommittee CeePlusPlusEleven CeePlusPlusOneWhy
** CppAndConcepts
----
CategoryCpp CategoryCppTemplates CategoryConcepts