A MutuallyEncapsulatedSoftwareSystem combines a grand vision with extraordinary arrogance, resulting in a closed environment that demands a virtually complete intellectual reboot as its entry price. A MutuallyEncapsulatedSoftwareSystem is, out of the box, compatible with NOTHING. It requires hard work and patience to make it cooperate in any way with its surrounding context. Here are some typical characteristics:

*Does not conform to clipboard protocol
*Doesn't use standard fonts
*Doesn't use native UI resources
*Doesn't support common protocols
*Takes over the entire display
*Uses all of the available memory
*Doesn't use any existing system resources (printer drivers, network connections, sound cards, and so on).

The canonical example of the MutuallyEncapsulatedSoftwareSystem was Smalltalk-80, as published by Xerox in the early 1980's. Most MutuallyEncapsulatedSoftwareSystem''''''s suffer an early and quiet death -- they are more abundant in academic and internal corporate R&D departments.
