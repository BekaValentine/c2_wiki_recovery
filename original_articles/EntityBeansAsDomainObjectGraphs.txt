EntityBeansAsDomainObjectGraphs names a style of using entity beans in which an entity bean represents the root of a domain object graph (as opposed to representing an atomic domain object, as in EntityBeansAsDomainObjects, or a DataAccessObject, as in EntityBeansAsDataGateways).

The primary motivation for this style of usage is the suspicion that the other styles of usage require too many remote object activations for an application whose "size" is above some threshold, where size is a measure of the number of domain object instances (or representations) that typically need to be running at a given time in a (set of) JVM(s) during steady-state operation of the application.  It is a fair question to ask, "what is the threshold?".  Probably the best way to answer is to AskTheComputer.

A secondary motivation is the supposition that typically only roots of domain object graphs (however small) need to be "found" (a la entity bean finder methods) from the user interface perspective - subobjects are reached from the root.

--RandyStafford