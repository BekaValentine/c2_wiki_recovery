A lot of the joy of SoftwareDevelopment comes from satisfying a creative urge.  This is positive.

But the practice of SoftwareDevelopment often has to focus on the negative:

	* Compile/runtime ''error''
	* Test ''failure''
	* Exception
	* Invalid
	* ...

If it works, it just works; if it doesn't work, it ''fails''...  you ''fail''...  you are a ''failure''.  This is negative.

PositiveNegativity is an attitude of mind that sees ''failure'' as success.  You are a ''problem'' '''solver''', a '''fixer'''.  Your ability to look on the black side to envisage ''problems'' and ''exceptions'' and ''difficulties'' and ''objections'' is the key to your strength:  your ability to '''prevent''' and '''minimize''' the impact of what you foresee.
----
See FeelingGood 

''This is one reason why I like JavaUnit.  When you fix something, it tells you so and rewards you with green.  The way I see it, computers are infinitely stupid.  If it breaks, I broke it.  This doesn't mean that I don't desire real recognition when I fail to break something, and having something just smart enough to say "You failed to break me!" is kind of nice.''
----
I don't see that this really matters.  If you let a computer program get to you this much then you must be making an unconscious assumption that it is sentient.  Ultimately, I think we all do, to varying degrees (make an assumption that computers are sentient).  

Simon. 

''It's not good to anthromorphize computer programs. They hate that.''

----
The one thing I've learned through spirtual questing is that you have to make yourself be OK.  You cannot rely on something that is happening.  If you can't will yourself to be OK then what can you will?  It requires less than even moving your finger (if you have a finger) to change your feelings.  All you have to do is locate the controls and that's up to you to figure out.