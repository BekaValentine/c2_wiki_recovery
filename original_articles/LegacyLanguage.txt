A ProgrammingLanguage which is still used in production code, but only in LegacySystem''''''s.  In other words, where the language is typcally only selected when its use is a bona fide requirement, usually due to the need to interface with zillions of lines of code that already exist.

Examples include:

	* CobolLanguage
	* PlbLanguage
	* PascalLanguage (excluding Delphi, though Delphi may well soon get legacy status)
	* CeeShell, BourneShell, KornShell.  BourneShell is still needed for Unix init scripts and ArCeeFiles; however these are largely being replaced by PerlLanguage/PythonLanguage/RubyLanguage for any serious scripting.  CeeShell is rightly ConsideredHarmful as a scripting language.

Maybe on the way out:

	* CeePlusPlus (at least for business applications/logic; C++ probably still has a lot of life in systems programming, shrinkwrap apps, free software apps, and embedded systems)
		* I certainally hope not. I find C++ to be very good when I need to splice some OO onto something that cannot afford a managed runtime and all that VM goop for higher level languages.


Not on the list:

	* FortranLanguage.  Long abandoned for business applications and general purpose programming, Fortran still remains important to the numerical community.  

----
CategoryProgrammingLanguage