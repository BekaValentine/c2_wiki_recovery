The directives you give your C or C++ compiler so that it'll use functionality outside of the standard library.

These are '''hard to find.'''

For example, you need to use special library inclusions if you want to use:
	* OpenGl -- different flags for the same compiler on multiple platforms.
	* Qt
	* MySql
	* etc

Unfortunately, these flags are not well-documented, so if you have to roll your own makefile, it takes an awful lot more programmer-hours than it should.

Are there any tips for deriving C flags faster?  Are there any websites that enumerate what flags to use on which library?  Help!

----

See the documentation for the "pkg-config" command under POSIX systems.  The original concept appeared when GTK+-1 was released (named gtk-config), and typically used as such:

 gcc -c -o myProgram.o myProgram.c $(pkg-config --cflags yourLibrary)
 ld -o myProgram myProgram.o $(pkg-config --libs yourLibrary)

Some folks also use the older `-notation.

A pkg-config-like tool requires no more than a shell or make utility which supports proper order-of-operations syntax.

--SamuelFalvo
----
CategoryCee CategoryCpp  CeePlusPlusRoadMap