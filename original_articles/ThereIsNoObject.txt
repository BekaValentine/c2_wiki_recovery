ThereIsNoStasis points out that reality is really about processes, not objects. Objects are our concretization of processes in stable states (if I get it right from there).

Thus we could say, that ThereIsNoObject in the sense of ThereIsNoSpoon.

What is an object anyway? I'd like to give this definition (not intended to be meant for objects in general, but for the scope of this page, to avoid LaynesLaw):

''An object is a group of bytes with meaning.''

The locations of the bytes of an individual object way vary over time, but identity is not part of the definition (at least for now).

The meaning of the bytes is established ultimately by the programmer (with a couple of transformations in between).

And if we deliberately ignore the object we start to see lots of bytes and a cpu that operates on them. For the AssemblyLanguage programmer, this is the usual view. For him, objects are just certain structures of bytes that come and go.

-- GunnarZarncke (I'm feeling a bit PeterMerel today)
* Hey! Get yer own schtick! -- Pete

----
''ThereIsNoStasis points out, that reality is really about processes, not objects. Objects are our concretization of processes in stable states (if I get it right from there).''

Who are you? If you say you are something, you are attached to form, and I will hit you thirty times with this stick.  If you say you are nothing, you are attached to emptiness, and I will hit you thirty times with this stick.  What can you do?

-- some Zen monk

(For the record, I did not create this topic. --top)

----
I wonder if this is related to ObjectAnthropomorphicPrinciple.

See also ObjectOrientedAssembler