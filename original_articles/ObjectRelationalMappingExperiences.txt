The ObjectRelationalToolComparison offers a great comparison of features, but little in the way of subjective or objective data as to how well these things really work.

For example, Jakarta's ObjectRelationalBridge sounds like it offers all of the features TopLink does, but it's open source and free.  If anyone who has used TopLink before (which is a very mature and robust product) and has since used the ObjectRelationalBridge, it would be great to know your experience.

ObjectRelationalBridge isn't as nice as HiberNate.

ObjectRelationalBridge is also as good as Hibernate.

ObjectFrontier's FrontierSuite for J2EE v3.1(CMP/JDO/FCM) outperforms other tools in performance, with robust caching mechanism


	* ''insert wiki link to your experience here''

------

In general, there seems to be a complaint that ORM's work fairly well if one designs the DB to fit the way a particular ORM works; but if dealing with DB's that were designed outside of the influence of ORM's, they can be a bear to make fit. In other words, there is something we can call an "ORM-friendly schema", and using an ORM for a non-ORM-friendly schema is asking for either project failure or heavy expenses.  (There seems a similar issue with RubyOnRails-friendly schemas.)

----

See also: TopLinkForJavaUsageExperiences