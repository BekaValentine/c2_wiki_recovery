Catastrophic project failure, due to blown deadline, blown budget, building the wrong thing, project cancellation, and such like. BigPublicFailure is a common consequence of BigDesign. The alternative experience to encountering BigPublicFailure is to EmbraceChange and embrace LittleMistakes.

Examples:
* Mars Polar Explorer, 
* Pentium math bug
* LASCAD (London Ambulance Computer Aided Dispatch System)
** Background information
*** 1992 - http://www.lond.ambulance.freeuk.com/cad.html
*** Account by Risks - http://catless.ncl.ac.uk/Risks/13.88.html
*** Report of the Inquiry (62 pages) - http://www.cs.ucl.ac.uk/staff/A.Finkelstein/las/lascase0.9.pdf
** It may be concluded from the above that the culprit for the failure was not VisualBasic.
* Denver airport baggage routing
----
Avoidance of BigPublicFailure can be greatly enhanced by 
* The LearningOrganization 
* Heeding LessonsFromFailure

----
In a web article at http://members.cox.net/johnsuzuki/softfail.htm - it is noted that only 16 percent of the initiated projects succeed, and that 84 percent are not delivered on time and under budget if ever at all. Googling "software failure" vs "software success" yields 50.8 million vs 20.5 million instances. It is not a statistic that those who work in the industry can be promoting. 

It may be due more to high expectations and low levels of testing implementability and the failure to establish accountability and achievability standards. It seems as long as someone who owns some gold and wants to spend it on a software solution, there are always those who will for some of the gold, step up and say "We'll try to do it"(WeWillTry). The gold owner is often satisfied with this rather than the requirement, "There is no try, there is only do". ''(You forgot "or do not"!)''
