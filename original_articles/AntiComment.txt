''But what is an "anti comment"?''

It is anticomment because in a usual code everything is code except that preceded by // or bracketed by /**/ which are comments. Could use <code></code> instead but needs a method to distinguish from space indent if people are just talking informally about code. In this case (wiki) most of the text in a page amounts to NaturalLanguage comments not easily parsed by a machine so by embedding "code" - just attribute and method declarations so far - preceded by // to delimit them they take on the opposite (anti) meaning. Perhaps a better name would be WikiEmbeddedCode but this was the first to come to mind. There could also be a WikiCodeRunner page to parse this code (see link)

''I think calling code "code" is more intuitive.''
----
Proposal to have a convention for embedding machine readable data in wiki page text such as but not 
necessarily //. The code could be pseudo-javascript that is relatively easy to understand by most and os independent. Similar to MappingSourceCodeWithWiki but for real wiki (this) where people knowledgeable in a topic might take the time to identify basic attributes and methods.

Initially it could be used just as a quick reference by programmers 
for common object definitions - customers, products, graphics objects even if no detailed code was involved. Later on it could be made more rigorous and interfaces developed to directly extract it by machines. There could also be a MessageTranslator to map to existing schemas where applicable ie 2D wiki object definitions  to ScalableVectorGraphics, Chemical to ChemML, music to MusicML, business to ebXML.


Yes many examples of such definitions are already all over the web but wiki would allow a comprehensive and easily accessible ontology to be developed with the advantage of substantial peer review. Also helps with database design since attributes map to table schema subject to 
ObjectRelationalImpedanceMismatch but would give a quick starting point for objects never encountered before. A Customer class is easy enough to do in your head but how about a MitochondriaObject, WindshearObject,EconomicAcceleratorObject ?

Many pages are just discussions so would not need AntiComment''''''s but where links are classes that might need modelling somewhere why not try to come up with a canonical description.


They could go at the end similar to "SeeAlso" to be easy to find.

See also CommentsAreCode, ObjectCircle

