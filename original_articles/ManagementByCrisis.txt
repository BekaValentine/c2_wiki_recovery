ManagementByCrisis is a disease where a manager (intentionally or not) seems to create crisis around them.  This can be done in many ways; the most common of them is to set too aggressive a schedule or an ArtificialDeadline, but it can be done by shuffling staff and other such things.  

The result is that this manager's team is always in a crisis, and they are always saving the team from the crisis, or asking for super-human effort from the team, when really, they knew all along that what they were asking was impossible.

Either way, the manager gets more power, and more resources to get  the job done, and in the end, gets the glory from having, "pulled the project out of the fire."

Note: This is synergistic with ScheduleChicken.

----

Have other people seen this? ''IraCooper''

''been there, done that, got the pink slip.  This is a common feature of American software companies.'' --PeteHardie

'''am there, doing that, considering walking this afternoon.'''

----

I've seen plenty of FireFighting''''''Mode, which is related but not quite the same. Good managers can be forced into FireFighting. That is usually a sign a company is messed up. Last time I ended up in FireFighting''''''Mode I changed employers. 

----

Don't forget the classic way to create a crisis: claim there's no time to do things the right way.  Pretty soon, there will be even less time, until voila: crisis!  ''--GeorgePaci''

------

It's also easy for a manager to feel like everything is in a major crisis, since every small crisis might end up on their table. The inexperienced leader may then panic, throwing the whole organization into FireFighting''''''Mode and ruining every chance to handle the everyday problems as they appear.

-----

Another way to create crisis is to not have a schedule, other than a customer delivery "go live" date, and to have no measurements and no checkpoints in place to determine at any point whether or not the project is on schedule.    The manager can then declare the project "running late" at any point, creating crisis, or perhaps more commonly, to not know the project is late or not until it is clear to even the most junior coder that the project is behind.  At this point of course, the project will never be able to make the original delivery date, even if that date was achievable. Instant crisis, don't even have to add water.  -- StevenNewton

I HaveThisPattern, except without even a customer ship date any better than "around Q4." Often, the end result is months of talk-talk followed by massive panic because Q4 is almost over and the thing's not working and we don't know when it will be. Fortunately, AgileSoftwareDevelopment gives me some tools I can use at least within my own domain, to ground me and keep me sane.

-----

Let me pose a question. Is our reward system in the corporate world set up to
inspire any other mode of behavior? Has anyone ever received a bonus or an 
award for quietly planning and then meeting the plan precisely with no fanfare
and no sudden explosion of activity visible to all? Let's face it - heroism
is rewarded, and you can't be a hero if you don't have a crisis. For all the
lip service given to careful planning and scheduling and methodical success, if
you can't frame your silhouette against the flames of a crisis fire, you
won't get noticed. Until the incentives change, habits won't change. Besides,
I think it's probably easier to do it this way...in the beginning. 
-- DonOlson

It's sometimes thought that a team that consistently delivers on time and within budget isn't trying hard enough:
If they were really challenging themselves with aggressive schedules and promised features, they'd sometimes fail.
So apparently "easy success" can be some as evidence that you're sluffing off.

''Kirk:  Tell me, Mr. Scott.  Why do you always multiple your repair estimates by a factor of four?''
''Scotty: Ta uphold me reputation as a miracle worker, Sir!''

-- JeffGrigg

''Read KentOnWardOnSustainablePace for a refreshing change.''

And, as we in the corporate world know, sometimes failing is okey-dokey with
our sales and marketing people, so long as we're pushing the envelope, right?
To add to Jeff's point, I can remember being told that any organization having
enough people and time to do a job safely was running too fat to survive.
Therefore, it appears that courting disaster is the only recipe for survival.
Also essential, it appears, is the necessity of holding two conflicting
ideas in one's mind simultaneously, at least for psychic survival.
-- DonOlson

''Or as a former VP once told said--"If you've never missed a plane, you've spent too much time in airports".  Of course, in many places, if you DO miss a proverbial plane, the fit hits the shan.--ScottJohnson''

Dare I ask why he's a ''former'' VP? :)

* He got a CEO gig at another company.  Still there, too.

-----

In a strange reversal though, has anyone else noticed that the people most valued during a crisis are those who act as if there is no crisis?  We tend to value those who are calm, cool, and collected.  On one side we want to scream "Orange Threat Level" but then we want everyone to go about business as usual.

''Of course.  Heroes are always calm in a crisis, and we want our heroes.  What gets lost is that the ones who are not present during the crisis, because they wrote their code well, UnitTest''''''ed it, and don't need to work more than a FortyHourWeek to get their jobs done are the '''real''' heroes.''

----
See also: GettingThingsDone, LettingThingsSlide, AntiTraffic
