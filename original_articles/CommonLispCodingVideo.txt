Many people can't understand what the fuss is all about with respect to coding in CommonLisp. So how about some SmugLispWeenie tapes a coding session and makes it available for download. Show us some amazing stuff. -- DavidPlumpton

----
The SLIME movie. http://common-lisp.net/project/movies/movies/slime.mov

This one is an introduction to LispWorks Personal Edition. http://www.cl-http.org:8002/mov/lispworks-pe-4-4-6.mov

Coding in Domain Specific Languages: http://www.cl-http.org:8002/mov/dsl-in-lisp.mov (link is down, try http://www.youtube.com/watch?v=5FlHq_iiDW0)

Looks like these sorts of movies are proving my original point: videos can be compelling. -- DavidPlumpton
----

I suspect you mean a Lisp machine. If that then check out (http://lemonodor.com/archives/000103.html). If not, perhaps it can still be found at http://lemonodor.com/

* The problem is those videos are aimed at a lisp audience, and are probably both mystifying and unenlightening for a mainstream nonlisp audience. Presumably people want to see a lisp programmer face a problem, and patiently show different lisp techniques a person might use to solve it.

I'm sorry, I really don't see why you'd prefer a video of someone working at a problem rather than a dissertation or narrative.

----

http://alu.cliki.net/AudioVideo

----

Peter Norvig's book Paradigms of Artificial Intelligence Programming explains quite a lot how you program in Lisp and how you improve those programs incrementally. See: ParadigmsOfArtificialIntelligenceProgramming . 

As for my videos - these videos (like http://lispm.dyndns.org/mov/lispm-4.mov) were intended for a very small audience, for the implementors of McCLIM to give them some ideas how some previous system (in this case the Symbolics Genera development environment) worked. McCLIM is a portable user interface management system currently under development, which is based on similar ideas like Symbolics Dynamic Windows. Yes, I have also made (shorter) videos of how to use LispWorks and Macintosh Common Lisp. Again these videos were more about the environment and not a demonstration of a development session. -- RainerJoswig

----

The most comprehensive LISP-teaching (and programming teaching) videos I have seen are
the SICP lectures available at:
http://swiss.csail.mit.edu/classes/6.001/abelson-sussman-lectures/

These are somewhat dated, but nonetheless a complete StructureAndInterpretationOfComputerPrograms (SICP) lecture series.  They don't use CommonLisp, but Scheme if I remember but it is an introduction into LISP-style programming however.  Watch them, if you don't "get it".

''I recommend it, as long as you're NOT expecting to learn Lisp. Instead, it's a great lecture series for general programming. SICP does not have things like macros; it's just like a regular programming language but with a lot more parentheses. Zero code-is-data. Still, a lot of people remember the lectures as being mindblowing, so enjoy.''

''' SICP is not an introduction to Lisp programming. SICP is about learning to program. Scheme is used as the programming language for that. You will learn some Scheme along the way. Since Scheme is a simple but powerful Lisp dialect, it may help you learning to program using other Lisp dialects, like Common Lisp. Sure Scheme has macros. SICP does not make use of macros. Sure code-is-data in Scheme (Scheme R5RS has READ, WRITE and EVAL). It is used as a feature in SICP.'''
----
If you want something in ther spirit of a video http://www.lisperati.com/casting.html might be what you want.

----
You should have a look at the Videos in the Common Lisp Wiki here: http://www.cliki.net/Lisp%20Videos
The ones by Marco Baringer are quite impressive and should be easy to understand even without lots of prior Lisp knowledge, though some basic programming knowledge doesn't hurt.

----

Maybe you'd like to watch http://www.lispcast.com/drupal/node/3
These videos might be what you're looking for.  Common Lisp coding sessions.  You can compare them to other "create a reddit clone" videos.  They also contain refactoring and testing.

CategoryCommonLisp