The opposite of GuruDoesAll: guru as SonOfHeaven and P''''''rincessOfPea - does nothing, feels everything.

Reading AuthorsDontCode, I thought - maybe it should be a GreyPattern rather than an AntiPattern. I can imagine somebody writing something that's implementation-free, that doesn't get bogged down in HolyWar''''''s over languages or the latest SilverBullet''''''s, that deals with the role of abstraction in software, that gets to Alexandrian centers via the still center.

Abstraction is one facet of nothing - at least it looks like nothing, non-executable, worthless, mere ''metaphor'' (which has been so maligned in various pages here [e.g. StopUsingMetaphors] - but never by my guiding stars, the XP gurus!).

Another facet of nothing is listening.

On my current project (as of 20030103 - call it AF-ASI), I'm a team lead with one consultant and three employees. The latter are involved with other projects, in maintenance and even production capacities. My goal is to get more of their time on AF-ASI. One way to do this is to help them streamline their involvement in the other projects. These other projects use things like VB and COBOL and cover domains about which I know nothing. But I've offered to just listen to them any time they have a problem. I'm willing to bet that as they explain the problems to me, they will solve them themselves. -- TomRossen

See the "consulting technique" described on GalaxyQuest.

----

I think there's a significant difference between AuthorDoesNothing and GuruDoesNothing.  AuthorDoesNothing refers to a guru who lacks practical experience; it's a broad "does nothing."  GuruDoesNothing refers to a guru who consciously abstains from interacting with a process so as to serve as a repository for BrickWalling; it's a momentary "does nothing."  But the guru in the latter case should have plenty of practical experience. -- BrentNewhall

Point taken. I was imagining an ideal author who could write credibly about projects without getting into language and technological details. That's clearly not what AuthorsDontCode was about. -- tr

----
See RubberDucking