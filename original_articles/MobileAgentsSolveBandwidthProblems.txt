MobileAgent''''''s promise to solve the problem of limited bandwidth.  For example a credit card transaction takes many trips to the server and client to complete.  However, a MobileAgent only needs to be sent as opposed to great amounts of data. (This by the way, is already in use as a 'servlet')

----

How does a MobileAgent solve the bandwidth problem ''better'' than mobile code?

For example, PostScript allows a program to reduce bandwidth between itself and a printer by sending code to the printer to draw the page.  This is not a MobileAgent, but still reduces bandwidth utilisation.

As far as I can tell, sending multiple pieces of code to different locations and then collecting the results is makes better use of bandwidth than sending a single piece of code out into the network to sequentially move between locations, transmitting itself, its intermediate state and its collected data each time it moves.

-----
Additionally, you can perform DynamicLoadBalancing and DynamicFailOver with MobileAgent''''''s (aka MobileObject''''''s). For example, if a system favors bandwidth over local processors cycles, you can have an agent perform its work ''remotely''. However, if the bandwidth is at a premium and the target machine has the available cycles, you may want to transport the agent to the target host and have it perform its work ''locally''. I'm sure you can imagine how this can really scale with large distributed systems. --RobertDiFalco
----
CategoryAgentOriented