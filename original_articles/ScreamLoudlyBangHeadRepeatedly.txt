I'm sure many of you have had one of these days.

----
Sometime soon(ish) I'll tidy this section into DocumentMode.  If we can solve the problem then I'll produce and publish a "How To". Current summary and specifics at the end; if your suggestions or comments are covered by my replies, please feel free to delete both, leaving behind just what's relevant, or something to make me smile.

I've been trying to get some data off my elderly but perfectly functional PalmV.  I have a cradle at work, connected to my SuSE 10.3 machine.  KPilot works fine there, as do the command-line functions that come with pilot-link.  Specifically, I could trivially get this data using the "memos" command.

But I'm at home with my laptop - with no serial port - and my elderly SuSE 8.0 machine.  I have a cradle, but pilot-link isn't installed.  So I downloaded version 0.12.3, unpacked, ran "'''./configure ; make ; make install'''".  All ran without errors or significant warnings.

But where are the binaries?  Nowhere to be found.  I've searched diligently - trust me on this - and there are no binaries. I've searched on the web, but can find nothing to suggest a reason why the binaries don't appear.  I've tried giving the configure script the parameter "--with-memos", even though I didn't think that would help, and was sadly unsurprised to find I was right.
* By default, pilot-link installs to /usr/local/bin, but you can alter this with the --prefix (change from /usr/local/, which will also affect manual directories) or --bindir option for ./configure.  I suggest you run an artificial config/make/make install with a sandbox bindir for examining whether the binaries are installed properly.  As a note, the commands are mostly prefixed with 'pilot-' (e.g. pilot-memos) and you can access most of them via 'pilot-link' with a command (try man 7 pilot-link).  The documentation for pilot-link states there have been a number of changes to the interface, so (based on what you wrote above) I half-expect that you're anticipating 'memos' to be unprefixed, perhaps based on an earlier version.  I've not used the program before, so that's all I can offer based on a cursory examination of the tar file.
** See my comments below.  Many thanks for your time - the fact that you're suggesting things I've already done makes me feel a lot better.  I didn't know that the binaries are usually prefixed with "pilot-", but that doesn't surprise me, and the things I've been doing aren't affected by that.  But again, thanks, and I really hope someone finds the one thing that makes it all go "ping!" and makes it work.  Please, any further suggestions welcome.

I would greatly appreciate any advice or suggestions.

AAAAAAAAARRRRRRRRRRGGGGGGGGGGGGGGHHHHHHHHHHHHHHH !!!!

''Try "find . -type f -perm 755" from inside the untarred folder. Then try "sudo make install".''

I've been doing this as root, just in case there were issues with permissions that I'd screwed up, and I'd used the "--prefix" option to "./configure" to put the installation somewhere that I would know to look.  Before doing the "make" I'd done a "find -perm 755" to get a listing of all the executable files, and after the "make" I did it again.  It simply appears not to be making the binaries.  I must be missing something ...

OK, summary:
* Trying to compile pilot-link v0.12.3 on my elderly SuSE 8.0 machine.
* It appears to work correctly, but no binaries are apparently being built,
** ... and certainly not being installed.
* I've been working as root to avoid problems with permissions.
* I've tried this sequence
** '''./configure --prefix=${HOME}/pilot-link'''
** '''make'''
** '''make install'''
* No errors, no significant warnings, but no binaries are appearing
** Before, during and after I've done "'''find -type f -perm 755 | sort'''" - no significant differences.
** Specifically
*** lib/libpisock.la
*** lib/libpisock.so.9.0.2
*** lib/libpisync.la
*** lib/libpisync.so.1.0.3
*** pilot-link-0.12.3/config.status
*** pilot-link-0.12.3/libpisock/.libs/libpisock.so.9.0.2
*** pilot-link-0.12.3/libpisync/.libs/libpisync.so.1.0.3
*** pilot-link-0.12.3/libpisync/.libs/libpisync.so.1.0.3T
*** pilot-link-0.12.3/libtool
*** pilot-link-0.12.3/tests/.libs/contactsdb-test
*** pilot-link-0.12.3/tests/.libs/dlp-test
*** pilot-link-0.12.3/tests/.libs/versamail-test
*** pilot-link-0.12.3/tests/.libs/vfs-test
*** pilot-link-0.12.3/tests/contactsdb-test
*** pilot-link-0.12.3/tests/dlp-test
*** pilot-link-0.12.3/tests/versamail-test
*** pilot-link-0.12.3/tests/vfs-test

So where are the binaries?  Specifically, where is '''*memos'''?

What am I doing wrong?

''Running the same thing you did above, I received notices of '''Build userland tools: no'''. It appears you'll need to run:''
 '''./configure --enable-conduits'''

''I'd bet a burrito that this will do the trick for you.''

Progress!  Now I get:
  plu_args.c: At top level:
  plu_args.c:69: `POPT_TABLEEND' undeclared here (not in a function)
  plu_args.c:69: initializer element is not constant
  plu_args.c:69: (near initialization for `plu_common_options[6]')
I suspect it's using "features" of '''gcc''' that the version on my machine doesn't have.  Does that sound plausible?  If it ''is'' plausible, then I think this is a bust.

Do I owe you half a burrito?

''I had no difficulty with GCC 4.1.1. It could be something with a newer GCC, but more likely it has something to do with your version of '''libpopt''' and its header (/usr/include/popt.h). I have version 1.10.7 of '''libpopt''', and you should probably upgrade your version and try again.   Oh, and half a burrito would work great.  ^_^''

Ah - I wonder if the compile is using that version, and not the version that comes in the package.  The package has the #define.  I'll go and compare versions, and look at trying to get the compile to use the local includes instead of the /usr versions.

However, I've now edited the files by hand (well, command-line script) to replace the offending text directly, and it's compiled.  I appear to have a working set of command-line utilities.

Do I owe you half a burrito, or a whole one?  How can I pay you?

''It's good you have this resolved, then, and I'm glad to help out.  Honestly, there probably is no convenient way to give me half a burrito (burritos and other meals are what my workplace bets), and I don't really expect it.  But, if it tickles your fancy to do so, you can drop two dollars (enough for half of a California burrito) into my paypal account.''

Working on it ... thanks again.

----

''When y'all finish helping him, could you help me get Rosegarden on UbuntuLinux to actually play Midi, instead of just rolling the transport silently and pretending it's playing Midi? --PhlIp''

I don't use MIDI often, but IIRC: The MIDI players for Linux assume (by default) that you are utilizing a hardware synthesizer for the instruments.  However, since most people don't actually have MIDI cards (except the serious audiophiles), most people are running with a dummy synthesizer for either or both of /dev/midi and /dev/sound/sequencer.  To get around this, you need to install a software synthesizer (such as timidity++) and a 'sound font' (an artist's rendering of the sounds - my own machine has timidity-eawpatches).  I use gentoo, and I've never even heard of Rosegarden before your mentioning it, but it seems you can also find some similar solutions here: (http://ubuntuforums.org/showthread.php?t=432178).

''Nope. Got aptitude's timidity & qjackctl. The latter can even show me the midi devices with little patch cords pointing to the timidity channels, and /usr/share has sound fonts. The problem might be I recompiled Alsa to get 1.0.16 because HardyHeron uses 1.0.15, and that disables my Vaio earphone pin-out.''

''Now to recompile timidity from scratch!''

----
JuneZeroEight

CategoryHelp, Category''''''ConfigurationHell