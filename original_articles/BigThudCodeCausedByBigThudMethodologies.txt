Today I was looking at some code.
It looked like:
 main(int argc,char *argv[])
 {
   for(int i=0;i<argc;i++)
   {
     if(strcmp(argv[i],"State1")
        prog_state=state1;
     ....
   }
 }
with tons of such if/switch statements in most of the routines.

Many of the critical functions were hard to find, hidden in the details needed for the program to run. After a while I came to realize that this code was created by a BigThud methodology as described in MartinFowler's TheAlmightyThud.

''Sorry, where's the evidence that this code was "created by" any methodology over another? Is a poor implementation of a parser your only evidence? If so, please try harder.''
----
The point I was trying to make is that BigThud methodologies produce big thud code ie code where the essence of the program is obscured by all the details. -- ThaddeusOlczyk

''"Essence of the program"...hmm. Perhaps if the essence of the ''design'' was laid out before the ''code'' was created, that would clear things up? Otherwise, what is being obscured? Implementation? Wouldn't the simplest of comments in front of files and functions lend clarity to that?''
----
CategoryRant