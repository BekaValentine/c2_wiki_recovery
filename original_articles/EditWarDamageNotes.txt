This is a Diff ran on HelpersInsteadOfWrappers. It appears that GrammarVandal-related multi-edits lost changes. I intend hand-edit to put them back one of these days. Until then, it sits here. If somebody remembers how to restore from archive, that would be great.

* ''I have backups of that pages going back to revision 52, if that would help. (Actually, I have them even if it wouldn't help ...)''

* Thanks for the offer. The problem is that new stuff is mixed up with old stuff now. It will probably have to be hand-fixed.

----

Revision 433 made 9 days ago by 81.19.179.11

116d115

    options
118,120c117

Parameter "fieldTitle" defaults to "fieldName" if empty.
"options" are words embedded in parenthesis for easy parsing. Example: "(required)(trunc)". Here, "(trunc)" means that the value will be truncated if larger than given length. Without it, an error is given if oversize.
The 'map' parameter is a by-reference associative array. It contains or will contain these entries:
Parameter "fieldTitle" defaults to "fieldName" if empty. The 'map' parameter is a by-reference associative array. It contains or will contain these entries:

125c122

* errorMsg - The error message of any problem found. It is blank if none found. A fancier version could return multiple error messages and perhaps have a warning-only level. But this is often overkill.
* errorMsg - The error message of any problem found. It is blank if none found. A fancier version would return multiple error messages, but I find one is usually sufficient. It is not meant for heavy-duty validation, at least not as shown here.

172c169

I've found that leaving the abstractions a bit "leaky" makes them far more flexible. For example, suppose I have a function/method for generating menu items with links:
I've found that leaving the abstractions a bit "leaky" makes them far more flexable. For example, suppose I have a function/method for generating menu items with links:

184,185d180

Maybe it's the type-safety fans trying to stir up controversy? Or is that paranoia on my part? 

-------

On SeparateDomainFromPresentation, somebody removes the dots in put in for TabMunging prevention, and ruins the indentation in the process.

 class page
 ..event onPageLoad(thisPage) 
 ....if userNotToSeeButtonX(...) 
 ......thisPage.buttonX.visible = False 
 ....end if 
 ..end event 
 ..function userNotToSeeButtonX(...){...}
 end class

 class page
 ..pageModel = new PageModel 
 ..event onPageLoad(thisPage) 
 ....thisPage.buttonX.visible = pageModel.userNotToSeeButtonX(....) 
 ..end event
 end class

''Better now?'' -- DaveVoorhis

-------

Under TarongaZooStory, this keeps getting reverted:

'''Lesson learned:''' 

* ''Let sleeping lions lie.''
* ''Learn to say "no".''
* ''Always disable beeping gadgets unless you intend to use them (instead of having them turned on all the time except when you don't need them)''
* ''Laptops taste better than humans.''
