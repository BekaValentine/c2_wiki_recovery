A la CodeUnitTestFirst. Can CodeAcceptanceTestFirst be done? Should it be done? Should we at least say that specifying a UserStory's AT must be done before EngineeringTask''''''s proceed, even if implementation of the AT takes its own sweet time? How does QA, or whatever RJ's "separate team" is called, make estimates for this work? By using XP themselves, as seems very likely, or some other way? Maybe some of XP is overkill for QA? Inquiring minds ...

----

This method works best for me. I write a pretty simple AcceptanceTest or two, with zero code to back them up. Then I go through the UnitTest, code that fulfills that UnitTest until the AcceptanceTest actually works. For me it's like UberUnitTests. In the American game show Jeopardy, the host gives the answers, and the players are supposed to supply the questions. CodeUnitTestsFirst works this way for me, I see no reason why I shouldn't extend it to CodeAcceptanceTestFirst.

I know it's not ExtremeProgramming, but it works for me.

Can someone tell me why this could be a bad thing?

-- ShaeErisson

----

I've done it, and it's nice. You have to live with the AcceptanceTest being broken for a while, which is usually a NoNo. -- KentBeck

----
CategoryTesting