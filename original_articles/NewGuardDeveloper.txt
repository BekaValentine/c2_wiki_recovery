Developers who are not OldGuardDeveloper''''''s. Think neophiles vs. neophobes. These guys keep up, care about quality, and champion TDD and new architecture. Every once in a while you might have to sacrifice one of them for the greater good. But think diamond-hard before doing so - they're too valuable to waste, and if you let them even get a whiff of the idea that you're sacrificing them on purpose, they'll turn on you in a gnat's wink.

''Just curious, and hopefully not impudent, but what happens to the ScapeGoat''''''s?''

You just place the names of those who ask this question on a list. Never mind what happens to that list. Probably the same kind of thing that Santa does.
----
They are the ones who can't finish a design before going off to rewrite it in the latest fad.
They are the ones who list 100 programming languages in their resume - all with less than 1 year experience.

''This conflicts with the definition on OldGuardDeveloper saying than the NewGuardDeveloper latches on, stays, and becomes Old Guard on it.''

''Rather, this warrants terms to describe the rate at which the programmer acquires relevant skills. This is at or below O(log n) for an OldGuardDeveloper and a NewGuardDeveloper, and would be about O(n) for these other people (like me, sadly). Are there already terms for this? HemProgrammer, HawProgrammer, SniffProgrammer and ScurryProgrammer? --JesseMillikan''