[One of ten SoftwareManagementPrinciples]

CASE Tool nirvana: change your model yamp press the button, your code is changed; change your code, press the button, your model has changed; and so on and so on...works about as well as you'd expect.

Often touted by the UmlCaseVultures as one reason why ''traditional, programmer-centric approaches'' are dead in the water.

----

''There is no model. Only code.'' -- Yoda on modeling languages.

Actually, its quite the opposite. ''There is no code, only models''. Unfortunately, modeling languages don't provide enough information to replace programming languages '''yet'''. But, to quote someone else, TheDesignIsTheDesign. One of the problems is that we need programming languages at all! If we didn't, there would be only design. --RobertDiFalco

 This is * deep what you just said. --BorisStitnicky

----

I've been thinking about this lately and I'm no longer sure I don't like it.  I have some thoughts on WhatWouldMakeRoundTripEngineeringUseful:

	*built-in refactoring support
	*built-in versioning system with superior visual indicators
	*built-in design critiquing system with superior visual indicators (''can you tell I just got back from an interface refinement study?'')
	*allows customizable code editor
	*make it faster and smaller (''which is the main reason why I don't like it now'')

Then it's no longer a RoundTripEngineering UML CASE tool, it's another type of IDE. -- JasonYip


