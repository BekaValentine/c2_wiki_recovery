No - this system/product/approach is not a SilverBullet, no matter what the FourColorGlossies say. It's just a programming language.

Maybe a higher-level graphical one, maybe one with 5 CD-Roms of software and a load of funky tools to install, but still - it's just another programming language. You cannot avoid the basic problem that specifying precisely what you want a computer to do is difficult and most people cannot do it well. Machines are not people, talking to one is not like talking to a person - people do so much of the work for you. English-like syntax notwithstanding.

(see: ModelDrivenArchitecture, CobolLanguage).

----

Also sometimes used to respond to the question: "Do you know language X?" What's to know? It's JustAnotherProgrammingLanguage.

Once we learned StructuredProgramming, picking up structured languages is relatively easy. Having learned ObjectOriented principles, picking up OO languages is easy. Yes, each language has its own tradition and libraries and function calls. But learning how to use the semantics of a class of languages is most of the work. After that, the differences are just syntax, which is easy.

----

So ... this would be JAPL?  How would that be pronounced?

Can't wait!  Where's the download?

----

Some programming languages ''aren't'' "just another". They embody different principles and ways of thinking to what came before.

* SmalltalkLanguage
* LispLanguage (or any functional when you first come across the idea)
* ErlangLanguage
* PrologLanguage
* AplLanguage
* OzLanguage

Maybe
* SubtextLanguage
