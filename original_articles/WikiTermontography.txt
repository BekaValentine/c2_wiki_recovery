Termontography is a '''multidisciplinary''' approach in which theories and methods for a '''multilingual terminological analysis''' of sociocognitive terminology theory are combined with methods and guidelines for '''ontology engineering'''. A clear distinction is made between conceptual modeling at a culture-independent level and a culture-specific analysis of units of understanding. Hence, the prototypical structuring of understanding is taken into consideration. 

The newly coined term ‘termontography’ could be interpreted as the field composed of
	1.	'''Term'''inology: refers to the usage and study of terms, that is to say words and compound words generally used in specific contexts (WikiPedia).
	2.	'''Onto'''logy: the study of the categories of things that exist or may exist in some domain (John F. Sowa: http://www.jfsowa.com/ontology/).
	3.	Termino'''graphy''': compiling collections of the vocabulary of special languages (Pointer: http://www.computing.surrey.ac.uk/AI/pointer/report/section1.html).
Purposes of the termontography approach:
	1.	'''Describing ontologies''' with (multilingual) terminological information. 
	2.	'''Structuring terminological resources''' with ontologies.

'''''Termontography tools'''''
* Categorization Framework Editor (CFE)
The CFE is a tool for the construction of a Categorization Framework (CF). A CF is a language independent concept model that can be used to classify terminological information, and that describes a certain domain by means of concepts and concept relations.
* Termontography Workbench (TW)
The TW is an application for the compilation of a (multilingual) domain specific corpus. This corpus may then be used to extract terminological information that can be linked to the CF. The output of this process will be a termontological resource, i.e. an ontologically structured terminological database, that can be used in specialized applications (for example the KBExplorer).
* Termontography Editor (TE)
The TE is an application to manage termontological resources. Terminological information, i.e. terms and term descriptions, can be added and classified using the CF. The CF can also be transformed into a concept model consisting of concepts and concept relations. These concepts and concept relations can then be linked to (multilingual) terminology.

'''''Categorization Framework (CF)'''''

A CF consists of the following items: ''term'', ''category'', ''meta category'', ''term meaning'', ''meaning'', ''attribute'', ''property'', ''bi-directional relation'' and ''bi-directional relation instance''. 
* A '''term''' is a text string that is classified by one or more categories. Each ''term'' must be classified by only one language category. 
For instance, the text string main classified by the French language category ''fr'' constitutes the French term ''main''. 
* A '''category''' belongs to a single superordinate concept we call a ''meta category'' and can be used to classify items, for instance ''terms''. 
The English language category ''en'', for instance, belongs to the meta category ''language''. 
* A '''meta category''' specifies the superordinate concept of all the categories that belong to it.
If we add the category ''fr'', for instance, to the meta category ''language'', this category represents the French language.
* A '''term meaning''' is an item with both a reference to a ''term'' and a ''meaning'', i.e. (meta) category. ''Term meanings'' may be added to a ''meta category'' and/or ''category''.
With this definition a ''term meaning'' now refers to a certain meaning, while it still can be represented by a single term. The ''term meaning'' that references the English term ''joint'' and the category ''marijuana cigarette'' with meta category ''cigarette'', for instance, clearly describes this ''term meaning'' as a ''marijuana cigarette'' ('''''see figure 1''''').
* A '''meaning''' is the underlying item of a ''meta category'' and/or ''category''. A ''meaning'' has a list of ''term meanings'' and may have references to both a ''meta category'' and a ''category''.
The term meaning ''wind instrument'', for instance, could reference a certain ''meaning'' with references to the meta category ''wind instrument'' and the category ''wind instrument''. The meta category ''wind instrument'' then indicates that categories such as ''flute'' and ''trombone'', which belong to this meta category, are wind instruments. The category ''wind instrument'', however, could be used to classify something, for instance a bottle of beer, as a wind instrument. The meta category thus specifies the superordinate concept of a category, while the category is used to indicate a certain aspect of the classified CF item.

To further clarify the intended meaning of a concept relation (or concept), we allow properties to be added to CF items (''categories'' and ''term meanings'', for example). To implement properties, we introduce the items ''attribute'' and ''property''. 
* An '''attribute''' is implemented as a category with meta category ''attribute''. Each ''attribute'' should refer to a certain value type. The list of possible value types depends upon the specific implementation of the CF. The value type ''text string'' is a minimum requirement. The value types ''URI'' , ''URN'' and ''URL'' have also proven to be very useful. 
For example, the attribute ''description'' with value type ''text string'' could be used to describe a ''term meaning'', while the attribute ''extra information'' with value type ''URL'' could be used to refer to a web page with extra information about a category.
* A '''property''' references an ''attribute'' and a value of a certain value type. ''Properties'' may be added to each CF item i.e. ''meta category'', ''category'', ''term'', ''term meaning'', ''attribute'', ''property'', ''bi-directional relation'' and ''bi-directional relation instance''.
For example, we could add a property with attribute ''extra information'' and value ''http://en.wikipedia.org/wiki/Knee'' to the category ''knee''.

To efficiently manage (meta) categories, relations are used. A relation between two CF items has two directions, mostly with a different meaning. Therefore, we introduce the item ''bi-directional relation'' to specify a bi-directional relation between two CF items.
* A '''bi-directional relation''' references at least one relation and at most two relations. ''Bi-directional relation instances'' can be created between ''meta categories'', ''categories'' and ''term meanings''.
A relation can be created by adding a category with meta category ''relation''. We may add the categories ''is part of'' and ''has part'', for example, to the meta category ''relation''. A logical ''bi-directional relation'' should reference both these two opposing categories. Let us notate this bi-directional relation as ''((is part of), (has part))''.
* A '''bi-directional relation instance''' references a ''bi-directional relation'' and two ''meta categories'', ''categories'' or ''term meanings''. Since the direction of a bi-directional relation is usually relevant, the ''bi-directional relation instance'' makes a distinction between the source and the target item.
The ''bi-directional relation instance'' that references the bi-directional relation ''((is part of), (has part))'', the source category ''lower arm'' and the target category ''arm'' would indicate that a lower arm is part of an arm.

http://users.telenet.be/OmegaFoundation/EHB/CF.gif

'''''Figure 1''''': CF items (italic) in relation to their corresponding semiotic notions (bold).

----
''Almost brilliant! To show true brilliance, try saying it again in little words my (very bright) six year old can understand.''

Sometimes a cigar is just an Object.