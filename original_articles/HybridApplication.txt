A hybrid application is one engineered to use several languages to work with each other. It takes advantage of the strength or ease of functionality of each language, packaged as components or embedded. COM+, CORBA, WebServices allow each language to be compiled to binary and/or hosted on separate machines so it is transparent to the user what is running behind the scenes. Most dynamic web applications are hybrids in the sense that they use (D)HTML, ScalableVectorGraphics, VRML, Flash, and/or WirelessApplicationProtocol as a User Interface but scripting (JavaScript,VBScript) to make them interactive, generated by a "main" C/C++, Java or Perl application on the server that embodies BusinessLogic, connecting to backend persistent storage using a (RDMS, Object or XML) database, which the main language queries and updates using SQL, XQuery or other "language". Consistent with three TierDesign. SymbolicProgramming can also be used by embedding languages such as scheme using JayScheme or similar at the backend to handle things like calculus, chemical formulas, specialized problem solving if needed by the application. Really like building a house using glass, wood, drywall - each component is architected to fit into a unified whole. The designer has to be knowledgeable as to performance of each component and use only what is optimal for the problem, otherwise such systems can quickly become analogous to RubeGoldberg contraptions. If the QuestForThePerfectLanguage could be solved this federation of components might be reduced.
