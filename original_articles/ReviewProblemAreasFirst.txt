Author:

[MichaelBeedle]


'''Context'''

Some code has been developed and there are known statistics about the "bug" density per module or per class.

'''Problem'''

What code should be reviewed first?

'''Forces'''

Reviewing all of the code in a project can be time consuming.

Not reviewing all of the code will result in ''bugs'' left in the software product.

'''Solution'''

Review only the 10% of the code that causes 50% of the bugs. This 10% can be found keeping statistics of the incidence of bugs per module or possible per class. We know reviewing every single module is very time consuming. This strategy prioritizes the reviews so that the time is spent more effectively.

This is just Pareto's Law applied to the prioritization of code reviews. This pattern is also related to MinimalChecksAndControls from http://www.bell-labs.com/cgi-user/OrgPatterns/OrgPatterns?MinimalChecksAndControls.

'''Rationale''

A process that is heavy on checks and controls is very slow and ineffective. Minimizing checks and controls allows for more greater productivity.

'''Resulting Context'''

The code for known problem areas has been reviewed.

'''Pattern Connections'''

'''From'''

'''To'''