From PairProgramming:

How do you avoid the situation of the more dominant member of the pair taking over and the other sitting watching and not contributing? -- IanCunningham

How do you get this term, anyway?

RobMee told me that the rather surprising reverse can show up... the typist does tactical thinking, like making sure the braces and semicolons are in the right place.  the watching person gets to think a line and a function ahead, and so is more likely to have the strategic view of the episode. See also PairProgrammingCostsBenefits. -- AlistairCockburn

See PilotCoPilot for a metaphor that supports the SurprisingReverse.

----

When I'm copiloting in a pair - I actually find myself more aware of braces and semicolons, similar to the way it's sometimes easier to spot somebody else's mistakes watching a game (is there a name for this pattern?). I actually find myself often being the 'compiler-errors/warnings' voice. There's a slight problem of communicating the error location sometimes, depending on the pilot. If we're coding in the ViEditor, there's much less of this communication-gap. I tend to not disturb the VerbalCoding(?) dialog with these comments, but rather comment it in conversation pauses, or before the screen scrolls.

I've seen some interesting patterns of how PairProgramming is affected by the match or mismatch of TextEditor''''''s in the pair, with certain improvements with each side.

----

Pure speculation...

If you find the other person taking over, ask for the keyboard.  With you at the keyboard, they can do nothing unless they cooperate.  If they won't listen to you or give you the keyboard, threaten to walk away:  If they work alone, they can't check it in; those are the rules.

If you find that your partner is falling asleep (i.e., not participating), then hand them the keyboard.  Then at least they'll have to '''do''' something.

-----

PairProgrammingPingPongPattern seems to work for me.

----
CategoryPairProgramming