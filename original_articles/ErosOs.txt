ErosOs is an OperatingSystem providing the following:

	* CapabilitySystem
	* TransparentPersistence
	* MicroKernel
	* Pervasive threading

Some of the issues that the ErosOs addresses, especially the CapabilitySystem are also talked about in OsWiki, WikiOs, NoMoreDatabases and KillerOperatingSystem.

What ErosOs does ''not'' provide:

	* a modern, high-level CapabilitySecurityModel -- OrthogonalSecurity
	* versioning, not even at a coarse grain
	* ExoKernel
	* state of the art design, or even
	* good OperatingSystemsDesign; see OperatingSystemsDesignPrinciples

EROS, boldly going where the Cambridge CAP Computer went thirty years before.

''Anyone care to argue for this quip?''

Anyone care to dispute it? This is one of those things that are dear to support, easy to counter. So if it CAN be countered ....

''Well, Cambridge CAP Computer used hardware enforced capabilities while Eros uses the usual priviledged/proplem mode and memory mapping kernel architecture to implement them. As far as I can make out in chapter 5 in http://www.cs.washington.edu/homes/levy/capabook/ Cambridge CAP Computer uses capabilities only as protected memory segment references and doesnt allow for user implemented objects. Objects composed of natively provided objects by the Eros Kernel. So I would say Eros, and its predecessor KeyKOS went a lot further than CAP and didnt fall into the same quackmires. --Zarutian'' 

----

See http://www.eros-os.org/ for further details. The docs and faq are good. --DennisDeckerJensen

From that site:

''"The current EROS system is still not a complete, runnable system. We have a group at Hopkins that hopes to cross this hurdle this summer. For now, we encourage you to download only if you have a research interest in running the code, you are a potential EROS developer, or you have some desire to read other people's kernel source code. Note in particular that while the system image that lives in eros/src/base/sysimage/ now builds, it still doesn't do anything useful at this time."''

As of 2003-03-04 this project appears to be dead.

''EROS is not dead, although it has been progressing rather slowly. (I think this is partly due to the developers implementing and transferring EROS to their own source code management system, OpenCM <http://www.opencm.org>, which has been a bit of a diversion from working on the OS.)''

As of 2005-10-20 the web site indicates that work on ErosOs itself has ended; its continuation is CoyotOs.

''It is also being continued as CaprOs --Zarutian''

----
My OperatingSystem, OIX, is based upon technology similar to this -- CapabilitySystem''''''s and OrthogonalPersistence (or at least the persistence part ;).  I am not sure about threading as of now [01Nov] -- BeOs is well off with it, but I am a Unix (translation: Linux) guy, so I'm not really too into threads.  Also, I have not done too much thinking as to the type of kernel.  The last thing I will say is that OIX has an ExecutableHierarchy influenced by the JavaLanguage, the SmalltalkLanguage and the OberonOperatingSystem. -- AluoNowu
----

CategoryOperatingSystem, ObjectCapabilityOperatingSystem