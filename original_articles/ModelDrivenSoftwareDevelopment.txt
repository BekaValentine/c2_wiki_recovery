Model-Driven Software Development (http://www.mdsd.info - dead link, 2010) is a software development paradigm with roots in SoftwareProductLineEngineering, which is the discipline of designing and building families of applications for a specific purpose or market segment. MDSD aims at developing software from domain-specific models. Domain analysis, meta modelling, model-driven generation, template languages, domain-driven framework design, and the principles for agile software development form the backbone of this approach.

The relationship between MDSD and software product line engineering can be compared to the relationship between ComponentBasedDevelopment and ObjectTechnology: One builds on the other, and the terminology of MDSD can be seen as an extension of the terminology for software product line engineering. The concept of core assets from software product lines carries through into MDSD and is directly reflected in IndustrializedSoftwareAssetDevelopment, the subtitle of MDSD. 

What sets MDSD apart from classical software product line engineering is the emphasis on a highly agile software development process. One of the highest priorities in MDSD is to produce working software that can be validated by end users and stakeholders as early as possible. This is consistent with the major shift towards agile software development methods in the industry.

-- JornBettin

----
See also ModelDrivenDevelopment, ModelDrivenArchitecture