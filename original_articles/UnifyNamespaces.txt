As a programmer... I encounter have to implement/design namespaces under many paradigms and languages (e.g. C#, java, c++, configuration files). Though some of these don't have explicit namespace declarations (e.g. COM ProgId's, Apache property files), they can operate in a hierarchical naming fashion.

I think GoodDesign should logically include unifying these physically separate namespace declarations (e.g. namespaces in C#) and uses (property names in configuration files). I.e. after laying down code in various java, c# and configuration files, one should be able to pull out an overall namespace hierarchy that is consistent.

My dilemma is with the root namespaces. In Java, the de facto standard is to use a somewhat institutional category such as "org" or "com". However, in C# the de facto is to use the organizational name disregarding the institutional category.

I'm somewhat swayed to throw out the Institutional Category as the root simply because it seems to be irrelevant.

Anyone have any thoughts on this? -- MoranBenDavid

''What we need is a UniversalNameSpace. The UniformResourceLocator was an attempt at that, at least with regard to files and other "resources" on the Web; however, it has been abused in several ways, such as mailto: (which doesn't really identify a resource).''