''SanFrancisco Design Patterns. Blueprints for Business Software'' by James Carey, Brent Carlson, and Tim Graser. Addison-Wesley 2000

[ISBN: 0-201-61644-0]

Contains design patterns from IbmSanFrancisco.

----

Can anyone comment on the practical value of the patterns in this book? My recollection is very dim, but I remember that I constantly wondered whether anything like that could be really used in practice. In general, these patterns may result in a very flexible system - at the price of high complexity and presumably bad performance. -- MichaelSchuerig.

Certainly. Most of those patterns are found on large scale object-oriented projects in some form or another. Simple Policy, Token-Driven Policy, Property Container, Controller, and Extensible Item are all patterns I've used.

The behavioural patterns are a bit "out there": Business Lifecycle, Hierarchy Information, Hierarchical Business Lifecycle, and Decoupled Processes (I think those are the ones). They appear useful, but I don't think they're "patterns", so much as "leading edge ideas". They're fundamentally about a) decoupling a state machine's transitions from the states themselves, b) decoupling state machines from each other (i.e. the baton-pass between macro processes and micro processes). All have these have probably been done before, but not in a generalized pattern, and hence they need more refinement in their articulation. -- StuCharlton