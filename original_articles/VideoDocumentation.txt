Show off the software in action. Programmers hate verbose documentation, because it's like English courses, essay writing. You can never really make a ''quick'' point about software unless you show someone that it works. Regular documentation also has some problems like: if it's too short people will feel helpless, and if it's too long it will take a while for the user to get the point. In the case of a video, the users see wild things in action immediately. Video documentation can be combined with regular documentation (such as a UserManual) to offer the advantages of both systems.

Benefits:
* UsersCantRead and now they might not need to.
* MarketingDroid''''''s can push the video.

Problems: 
* Getting the people to download a video
* Size of the video
* Documenting the video? so people can find it in the first place. Hopefully they will have already found it.
* The code, the build, and maybe the installer all have to be frozen before an accurate video of the software in use can be made.
* Video is not text plus some screen shots; therefore it's much tougher to edit than, say, HTML.

It's not clear so far on this page whether VideoDocumentation is envisioned as a screen capture of the software in action (such as created by HyperCam http://www.hyperionics.com/) or a whiz-bang film with a script, background music, and a good looking "user" walking the viewer through some steps, or a ScreenCast.

----
See also UsersCantRead, UserDocsInXp
----
CategoryDocumentation