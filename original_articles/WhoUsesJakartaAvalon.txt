Following the pattern of other "WhoUses..." pages -- would anyone like to share their experience using any of the Jakarta Avalon project  components such as Excalibur, Merlin, etc.? A colleague of mine is very enthusiastic about it, and we have been using some portions of it. I find some of the features useful, but find it difficult to configure and debug. -- JohnWebber

----

I've used the framework part of avalon in the last few java projects I've written.  The component lifecycle ideas for me sit at a much more fundamental level in terms of design than EJBs, servlets, SOAP or other interfaces which I usually build on later.  The framework interfaces allow you to describe the lifecycle of objects in the system quite well.  I find the configuration package especially useful (it allows you to convert from XML to Java objects, with default values and type conversions quite nicely).

I've just started using Excalibur Component Manager but I'm not so impressed with this:  For one thing, the exceptions that get thrown lose their stack traces.  Secondly, the logging is very difficult to sort out - there are loads of diffent logging implementations which you can plug in, but I found this very hard to do with the code I'd downloaded. 

For the future, what I'm really interested in seeing is the lifecycle extensions (addressed with Avalon Fortress I believe, but this hasn't had a proper 1.0 release yet).  These extensions mean that you can tag a class with your own interfaces,(e.g a "SQLEnabled" interface)  and then the component container will configure the components for you when it serves them up:  all the components implementing this interface would then be given a database connection, for example.  At least that's what I think it's about.  Anyone had any experience of this?  -- RobMoffat