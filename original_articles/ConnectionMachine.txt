http://images.amazon.com/images/P/0262580977.01.MZZZZZZZ.jpg

[ISBN 0262580977]

A MassivelyParallel machine originally designed by DanielHillis in a Ph.D. thesis, then built by the company he founded, ThinkingMachinesCorporation. The CM-1 and CM-2 were SIMD machines, consisting of up to 65536 bit-serial processors each with 1024 bits of memory and an 8 instruction machine language. The memory could be viewed from a host as a linear store and thus accessed, but then it could act as an active memory for MassivelyParallelProcessing.

Messages were sent from processor to processor using wormhole routing with conflicts resolved by using an operator that was associative and commutative.

Quoting RichardFeynmanAndTheConnectionMachine:
	 :	 ''The router of the Connection Machine was the part of the hardware that allowed the processors to communicate. It was a complicated device; by comparison, the processors themselves were simple. Connecting a separate communication wire between each pair of processors was impractical since a million processors would require $10^{12]$ wires. Instead, we planned to connect the processors in a 20-dimensional hypercube so that each processor would only need to talk to 20 others directly. Because many processors had to communicate simultaneously, many messages would contend for the same wires. The router's job was to find a free path through this 20-dimensional traffic jam or, if it couldn't, to hold onto the message in a buffer until a path became free.''

----

The Connection Machine was one of the [most|few] beautiful computers ever made. A giant black-on-black cube, subdivided into 8 smaller cubes, with one side covered in red LEDs for each processor that lit to show processor activity (or just to create moving patterns in demos :).

http://www.paulos.net/images/cm2_small2.jpg
http://www.paulos.net/other/cm2.html

As a system test, Conways GameOfLife was the first program ever run on it.

----

May I ask why it is not now our '''overlord'''?

Are humans capable of programming it to capacity? and of comprehending the best algorithms for its architecture? --PhlIp

''Earliest versions were SIMD computers, which are incredible for doing some kinds of vector operations. But, it slows down when data must be moved from processor to processor, so is less effective on many things. Multi-core and vector processors can do the same things effectively, and many others more effectively, so they have become the mainstay of parallel processing, along with networks. However, SIMD may have a niche.''
----
See also StarLisp.
----
CategoryBook, CategoryMachineOrientation