You want to AdoptUnitTests, but management doesn't believe in the value of them.
	* Testing is considered QA's job
	* UnitTest''''''s are discouraged in favour of making deadlines
'''Therefore,'''

LetTheTestsSpeakForThemselves. Write your tests covertly and when management notices the effect in quality over everyone else's code, they will quickly change their tune and make UnitTest''''''s top priority.

'''Evidence/Examples:'''

From the VcapsProject:
	 :	At year-end management noticed a 30% reduction in bugs reported.  At this point management decided that UnitTest''''''s would be required.  However, this was not set in stone.  In one instance a developer complained that a deadline would be missed if testing were required.  In this case special dispensation was granted.  After releasing the code about 32 developer hours were spent tracking down a problem that cost untold customer delays.  It was discovered that the errant development team had based their work on obsolete versions.  For our own sake the unit tests were undertaken after the problem was found.  Adapting existing unit tests to the new code took one hour.

This is one area where I ''can'' contribute to. I wrote UnitTest''''''s for my latest project at a time when the rest of the company was struggling with bug-ridden projects. It was incredibly easy to test (though I didn't have AcceptanceTest''''''s), compared to all the other monster projects. We're now in the process of promoting our TestingFramework and I'll probably be giving a training session in the next couple of weeks. -- RobHarwood

----
AdoptingXpPatternLanguage

----
CategoryPattern CategoryExtremeProgramming CategoryAdoptingXp