OpenDoc was a multi-platform, document-centric component architecture developed initially by AppleComputer in the mid-1990s.

Apple enlisted the help of various partners (including NovellCorporation and IbmCorporation) to develop versions for non-Apple platforms, including MicrosoftWindows and OS/2. A consortium called ComponentIntegrationLaboratories (CILabs) was developed to manage the licensing and distribution of the free frameworks, with the eventual goal of releasing them in a Quasi-OpenSource way. SteveJobs killed the OpenDoc project soon after he retook the helm at Apple, and the rest of the consortium quickly dismantled.

OpenDoc had a strong document-centric model, with various PartEditors able to embed other components and to be embedded by others. Communication between the frameworks and components used InternationBusinessMachine's SystemObjectModel (SOM), an ObjectRequestBroker (ORB) compliant with the CommonObjectRequestBrokerArchitecture (CORBA). A rich ApplicationProgrammingInterface and scripting model would have produced amazingly interactive components, if the whole project hadn't collapsed under its own weight (and some definite hard-ball pressure from MicroSoft, who saw OpenDoc competing with OLE/COM).

Although OpenDoc did not live long enough to elicit a great number of products, a few notable gems were created for it. Apple's CyberDog was probably the ultimate example, but DigitalHarbor'''''''s Wav (a WordProcessor), CordaTechnology'''''''s charting-tool, and ThetaGroup'''''''s dtF StructuredQueryLanguage middleware were also exceptional. Surprisingly, all three of these companies survived their dependence on OpenDoc and refactored their products to live in a JavaLanguage world.

----

GnuStep is attempting to re-create NextStep/OpenStep under the GnuGeneralPublicLicense.

----

OpenDoc is one of the lost technologies I lament most.  I love Cocoa and MacOsx, and when working recently on a chart in the beautiful but simple OmniGraffle diagramming tool, I realized I needed a nice little table to be part of my diagram.  And then did I suddenly miss what OpenDoc was about - letting a simple but beautiful diagramming tool like OmniGraffle be a simple but beautiful diagramming tool, and letting some spreadsheet or simple database component be just that, letting me use live data in my document.  Or at the very least, giving me a full featured table editor instead of requiring the brave boys at Omni group write one themselves just to satisfy my request.

Take a look at [http://www.linkbackproject.org]. OmniGraffle as well as other MacOSX apps will soon provide that kind of functionality. --aramallo

OLE and Windows still allow this, but the field remains dominated by using enormous apps (like Office) and occasional smaller components that plug in.  le sigh. --jps


----

There was a link not so long ago at one of the mac sites, something like "ghost of opendoc lives on in OS X". [http://www.macslash.com/articles/01/10/17/028258.shtml]

The idea was that via the "services" menu in OS X apps, it is not so important which app we a re using, it is the documents and services that count.

----

Services were a great feature in the NextStep world, but there seem to be less service offering application in MacOsx (at present).  Services will be great when Carbon apps can at least make use of them (the menu shows up in Carbon apps in 10.1, but doesn't do anything).

But nice as Services are, they still don't give me the option of having a little table in my diagram that's serviced by some Tabular component.  Even System 7's Publish and Subscribe feature would have been nice.  Oh well.

----
CategoryOldSoftware