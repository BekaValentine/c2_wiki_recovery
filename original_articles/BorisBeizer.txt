Dr Boris Beizer is the gold standard as it applies to software testing 
methodologies. He wrote several of the most prominent books in the field, serves on the advisory boards of most of the major conferences, and referees papers in most of the important journals.

''Black Box Testing'', ''Software Testing Techniques'', and ''Software System Testing and Quality Assurance'' are all highly recommended as the minimum set of books on any software tester's bookshelf (ISBN 0471120944, ISBN 0442206720, and ISBN 1850328218, respectively).

-- HowardFear

Beizer's oft-referenced "Bug Taxonomy" is contained in ''Software Testing Techniques''. Although the taxonomy is copyrighted, you can occasionally find it online. See SourcesOfBugs. -- ElizabethWiethoff

----
Boris Beizer was a big name in the eighties. These days, he's been pretty much forgotten. His work has little relevance to modern software development. Boris is famous for pushing code coverage as a big deal and dismissing the idea of exploratory and risk-based testing. He once told me, in 1993, that Microsoft would be out of business "within 5 years" because it was using the kind of testing practices I recommend. -- JamesBach

The above attributions and assertions about my position on various subjects are distorted, erroneous, and out of context.   I don't recall the exact time and place at which I am alleged to have predicted Microsoft demise.  I vaguely  recall it being at a casual luncheon or dinner at some software testing conference shortly after Microsoft had made a particularly buggy release of one of their flagship products (MS DOS ? Windows? Internet Explorer?).  Anyhow, what I said was  something along the lines of :" If Microsoft keeps up this kind of buggy release they could well be out of business in five years."   At various times in its history MSFT's continued  dominance in operating systems, browsers, applications, etc.has not been a certainty.  And had MSFT persisted in a pattern of buggy releases, they could have well been knocked out by their competitors.  As for predictions in general, I have  always agreed with Nils Bohr who said:  "Prediction is very difficult, especially about the future."  And so, I have made very few of them in writing.  Generally speaking when I have had something to say I always made a point of saying it in writing and to have that writing published so that a proper attribution and accurate quotation of my words could be made.  I never expected that a casual comment made at  what I thought at time was a friendly luncheon with  fellow  professionals would be used decades later in an attempt  to denigrate me.  Unfortunately I learned that for some people, such as  Bach, in the same spirit as some slimeball politicians, that any casual utterance, inaccurate or distorted out-of-context  can and will be used to gain a perceived advange. 

I so firmly believed in my alleged prediction of Microsoft's demise attributed to me by Bach that in the mid 90's, I became, and have remained a loyal, and happy Microsoft stockholder.   I was very pleased to become acquainted with Microsoft's testing practices and found them to be sophisticated, thorough, rational, and completely consistent with the kinds of testing practices I have always advocated.  Practices which to the extent that I understood them were not the same as advocated by Bach and others. I am a firm believer in risk-based  testing when a rational, statistically sound evaluation of risk is made.  I mean something beyond the loosy-goosy belief of "We know where the bugs are." After all, if you know where the bugs are, why are they still there?   As for exploratory testin, this is also a good idea as long as it is done in addition to rigorous testing.  Unfortunately, most so-called explorator testing as usually practiced turns out to be nothing more than hacker banging and dumb-monkey testing.  It is done without regard to any kind of metric to measure what has actually been tested.  As for code coverage, the idea behind it is every bit as valid today as it was decades ago.  If you haven't tested a piece of code then you can be guaranteed to miss any bugs in that untested piece of code.  Unit level code coverage was never intended  or espoused by me to be the end-all or be-all of testing.  Just the lowest level beginnings thereof.

Granted that advances in software, especially OOP have made testing more difficult and greatly expanded the notion of what is to be covered by testing and how to measure such coverage because unfortunately many bugs today are distributed and cannot be attributed to a single line of code,  But the fundamental idea that if you don't test it (be that a line of code,  an inherited attribute, a dynamic binding, an interaction, a what not) then you are guaranteed to miss  the bug inherent in what you have not tested.  

Boris Beizer  


----
I think given that 5 years on from 1993 was time of Windows98/IE5 that he was right on many levels - MS have always struggled to maintain any consistent quality of their software.  The fact Microsoft succeeded is not down to quality software, they have excellent business and marketing skills.  -- jaffamonkey
----

Regardless of what you think about him, Boris probably has written more books on software testing than any one else.

----
Anyone know where Boris is? I tried sending him email and got:
 <bbeizer@sprintmail.com>:
 207.217.125.22 does not like recipient.
 Remote host said: 550 bbeizer@sprintmail.com...User unknown
 Giving up on 207.217.125.22.
I wanted to see if he was going to STARWest this year. Oh well. Anyone that knows his email address, please send me an email at fcohen@pushtotest.com.

Thanks.

-- Frank http://www.pushtotest.com

----
Boris is the leading authority on software test. I've worked in the field for 19 years and have never seen anyone on the book/lecture circuit who understood the field as well as he did. All of his books are still relevant and his techniques are sound. If you want to learn how to do good tests, keep away from fads like 'Cleanroom' and just read his books. He is a very good speaker and not to be missed if you ever get the opportunity.
 
Last I heard he was retired in Pennsylvania and spent a lot of his free time sailing.

-- Banner

----
"Software Testing Techniques" also contains some very fine quotes:

"Programmers! Cast out your guilt! Spend half your time in joyous testing and debugging! Thrill to the excitement of the chase! Stalk bugs with care, methodology, and reason. Build traps for them. Be more artful than those devious bugs and taste the joys of guiltless programming! Testers! Break that software (as you must) and drive it to the ultimate -- but don't enjoy the programmer's pain."

-- moyix

CategoryAuthor

I've known Boris for many years.  Indeed, I met Boris around the 1993 time frame.  My recollection of conversations
with him at the time, with respect to Microsoft was along the lines of "Microsoft was the only company he knew that was aware of the cost of fixing a bug and the amount of revenue that would be lost/generated by the presence or absence of the bug."  Later in the decade, I recall that we discussed Microsoft's adoption of model based testing.

Robert T. Bauer 