Went from (perhaps) PerlLanguage to RubyLanguage; don't want to learn PythonLanguage.

* JohnFletcher came to RubyLanguage via LuaLanguage and ToolCommandLanguage (TCL). I haven't used PythonLanguage or PerlLanguage much at all. I use SimplifiedWrapperAndInterfaceGenerator (SWIG) to link CeePlusPlus to RubyLanguage.

* RobertFisher
** Despite the fact that EverybodysDoingIt (though, of course, probably partly ''because'' of it) & that I'm a sucker for trying just about any programming language I learn about, I continue to feel no need for PythonLanguage. It's kind of odd.
** I was HappyWithPerl. Then I was UsingRubyDontNeedPython. But then I moved on to UsingSchemeDontNeedRuby. Except on machines that don't have a SchemeLanguage installed, then I use RubyLanguage. Except on machines that don't have RubyLanguage or SchemeLanguage installed, then I use PerlLanguage. Except on machines that don't have PerlLanguage or RubyLanguage or SchemeLanguage installed (tho' I can't think of one at the moment), then I use BashShell. I refuse to use a machine that doesn't have BashShell, PerlLanguage, RubyLanguage, or SchemeLanguage installed. Well, almost. (^_^)
** ''But,'' I do ''need'' PythonLanguage as a user. There are a few programs I depend upon that were written in it.

* EdBorasky
** Came to Ruby from Perl and R. Still maintain a bunch of my old Perl code and still write new code in R, but I no longer write new code in Perl. I never learned Python or PHP or Javascript, and now that I have Ruby I don't see the need. To me, Ruby is the ideal "happy marriage" of Java and Perl.

* SteveJorgensen
** Did hobbyist CeePlusPlus way back when, but have been doing VbClassic, VBA, and MicrosoftAccess for most of recent history.  Started learning PythonLanguage a while ago and mostly liked it, especially the ExplicitIsBetterThanImplicit philosophy (though that can contradict DRY), but started learning Ruby recently for RubyOnRails.  Ruby is a little more DRY  (but can be less explicit) than Python and lets you use the most appropriate and legible style for any given statement or procedure (# of statements on the line, how to indent, if ... vs ... if, if not ... vs unless ..., etc.).  It also maps better into templates (i.e. rhtml) than Python does.  There are still many languages I want to learn more about (Perl, Javascript, Ocaml, Nice), but right now, my heart belongs to Ruby.

* MarcThibault
** Worked with perl, played with Python, learning Ruby, 'cause Python don't have Rails.


----
Contrast with UsingPythonDontNeedRuby
----
CategoryRuby
