a.k.a. Map, Hash, Dictionary, ... an array keyed by an object or reference type, rather than an ordinal type.
--------
Easy syntactical access and usage of associative arrays is one of the biggest productivity boosters in recent languages. It's one of the biggest difference-makers between pre-1990 scripting/dynamic languages and post 1990 languages (year is approximate). I imagine that earlier languages excluded them due to performance hits. Fast hardware gave us a really nice gift. Thank You, Santamoore (MooresLaw). --top

Easy syntactical access includes but is not limited to:
* Parameter lists being optionally accessible as an associative array (perhaps with sequential integers for the positional parameters.
* Usage of both "dot" syntax (or equiv.) and bracket syntax in the same language. Thus, foo.bar and foo['bar'] are the same thing. Brackets must be used if punctuation etc. is part of the key. (Older languages sometimes had API's, but "foo.bar" is a lot cleaner than "getArrayValue('foo', 'bar')").
* Being interchange-able or same as objects. In other words, the value can be or serve as a function pointer/reference/name.

----
CategoryJargon, CategoryDataStructure