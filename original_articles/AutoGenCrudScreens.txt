Some systems / frameworks / CASE tools have the feature that they will, with a "little or no effort" automatically generate CreateReadUpdateDelete functionality for you:  That is, screens (or modes) that enable the users to Create, Read, Update, and Delete objects/records.

This can save '''lots''' of development time (and money)
on the 80-90% or so of data that does '''not''' need a specialized custom interface for routine maintenance.

''One has to be careful because generated code is sometimes not easy to maintain on its own. Other caveats are raised in CodeGenerationIsaDesignSmell''

----

Examples of such tools:
* RubyOnRails - does AutoGenCrudScreens at run time and/or at development time -- '''and a lot more'''
* TheNakedObjectsFramework - does AutoGenCrudScreens, and as a design philosophy restricts you to these, giving you a DirectManipulation interface that not only simplifies development; it enables your users.
* corix 4i - http://www.corix.ch
* PicoLisp

----

corix 4i is something very similar to NakedObjects. It's available at http://www.corix.ch

''(100% German.  No English translation.  That's a little tough on little ol' me.  ;-)''
* My German isn't very strong, so I could be wrong, but I don't think this is "very similar", I think it's simply the usual persistent-objects via RDBMS framework with a GUI modeler/wizard.

----

I have been interested in automatic generation of screens for a while, particularly using Java Reflection as a starting point. I really like the idea of NakedObjects and E''''''xpressiveSystems.
Their demo framework is not great, so I have been developing a JavaSwing based version called Expressive, which is available at http://expressive.sourceforge.net/.

-- IanNeill

------

For a CrudAutoGenerator to be called "functionally complete" should be able to deal with the IrreducibleComplexityEntityModel, sadly, some of the CrudAutoGenerator in the market right now (JbossSeamGen for example) are not really able to deal with all the different kinds of relationships that are represented in the IrreducibleComplexityEntityModel.

-------
See also: CrudScreen, CodeGenerationIsaDesignSmell, RapidApplicationDevelopment, TheRadBottleneck
----
CategoryInteractionDesign