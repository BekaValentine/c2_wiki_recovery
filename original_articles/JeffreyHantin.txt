Lurker since 1997 and occasional WikiGnome.
----
2007-2008: working on trying to get my team to be more agile.  I've recently become TestInfected though the condition doesn't appear to be spreading. ContinuousIntegration via CruiseControl is working nicely; a few of us can really go on a tear when PairProgramming but there are others that "clam up" or actively resist.

2009: There's still heavy organizational resistance to both test automation and static analysis, and pairing is less resented but still seen only as a means to unblock a solo programmer.

I am a believer in TransparentPersistence, and see PrevalenceLayer''''''s as an effective low-end solution to the problem.  I've written one or two to support oddball platforms; in my current work it's rare for the data set to exceed 5 MB in RAM, and usually produces snapshots under 20 kB on disk.

The biggest complaints I get are that a number of other programmers just plain don't like designs based on LiberatingConstraint''''''s (for example, PrevalenceLayer requires SeparateIoFromCalculation), claiming that the use of design constraints breaks TheSimplestThingThatCouldPossiblyWork for new requirements.

----
CategoryHomePage