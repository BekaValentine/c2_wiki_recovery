This page is a discussion of possible reasons for adapting XpLite.
See also XpLite, TransitioningToExtremeProgramming and XpLiteConsideredHarmful
----
XpLite is not an attempt to  improve on XP.  It isn't better, and doesn't claim to be.  But it may be closer to where you are now.  People don't like to change quickly - it upsets them and with good reason.  XpLite is just an attempt to find something better than whatever people are doing now.   that can lead to Xp later on.

Everyone agrees that  XP works best when everything is happening at once - once it 'pops'.  However, many, even most, of the XP methods are GoodThings in their own right.  It is possible to make a case for introducing, say, continuous testing, above and beyond it being part of XP.

On the other hand some parts of XP don't work on their own - you get Almost Extreme Programming instead.  If you try to  RefactorMercilessly without CleanCode you are going to make an enormous mess.  It's a ChickenAndTheEgg thing:   "The code isn't stable enough to make changes we don't have to make."  Perhaps XpLite can help, but at some stage a BigBang will be required to go all the way.  And maybe XpLite can actually lock you into an inferior methodology.  See XpLiteConsideredHarmful.