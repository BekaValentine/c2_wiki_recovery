Name: Eighty Percent Programmer
Type: Development Team Organizational
Context: It is well understood that in any type of work, including software development, 80% of the work takes 20% of the time.  The remaining 20% of the work consists of the minor but important details, including refactoring.  That last 20% of work in a project tends to take the remaining 80% of the time. 
Problem: The Eighty Percent Programmer uses the 80/20 rule to his/her advantage. He or she will work stealth-fully evenings and weekends and surprisingly deliver a proposed project (80% complete of course) in a fraction (usually 20%) of the estimated time. This places the eighty percent programmer as a rock star in the eyes of management. The rest of the development team will be charged with completing the remaining 80% of the work while the eighty percent programmer will be given subsequent new projects. Magically, the eighty percent programmer will continue to complete 80% of a project in 20% of the time, reaffirming to management the great value of the eighty percent programmer.
A software development team is most successful working as a team, with all members contributing and sharing the same goal. The eighty percent programmer disrupts teamwork, setting him/herself as the object of success while the rest of the team works subserviently.
Forces: [forces]
Supposed Solution: [the bad solution; explain in terms of your concrete example]
Resulting Context: [what happens when you apply it, good and bad]
Judging by the SetTheBozoBit page, where almost all of the contributors cheered on the AntiPattern as if it were a DesignPattern, I think this is by far the most important section, and therefore perhaps needs to be expanded.
The exterior link to this antipattern did not at all help emphasize that it was an antipattern rather than a pattern; such things need very clear emphasis.
Seductive forces: why this is so popular
Why, despite the seductiveness, this is actually a BadThing
Replacement positive patterns (leaving this until later, in the possibly left-empty "applicable positive patterns" seems too little too late; that could be regarded as sort of "see also")
Design Rationale: [rationale]
Related AntiPatterns:
Applicable Positive Patterns:
AntiPatternCategory: [classify it]
Also Known As: [other names]
Examples in the Literature:
Examples in Practice: