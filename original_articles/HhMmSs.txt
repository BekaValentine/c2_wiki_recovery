The name of a pattern for representing time
	'''Hh''':	represents Hours in 24 hour format, with leading zeros. RegularExpression: '''2[0-3]|[0-1][0-9]'''
	'''Mm''':	minutes, with RegularExpression: '''[0-5][0-9]'''
	'''Ss''':	seconds, with RegularExpression: '''[0-5][0-9]''' but may include any additional digits of precision as needed -- '''[0-9]*'''
----
''Cue here the endless debate about how this doesn't account for LeapSecond''''''s, etc.''
There may be as many as two LeapSecond''''''s in any jump: thus the field Ss should be allowed to include '''6[01]''' in its RegularExpression - but only at midnight GMT.

The process of synchronization to standard, and the adjustment required take care of it, results in a time representation within the regular expression shown. One would not have a time of 12:12:61. To run a clock without synchronization, is to be incorrect. On the other hand Intervals of time which might span a period in which synchronization might occur can be accurately measured by time durations provided by a timer, not calculated by differences in clock times. A duration measured as ClockTime2 - ClockTime1 can result in incorrect intervals if synchronizations and adjustments have occurred during the interval. -- DonaldNoyes.20080505.1212.m06
* Donald - I don't understand. One can in theory have a time of 12:12:61 because of LeapSecond''''''s - why do you claim otherwise? Perhaps you should fix your comment and delete this question.

Don't LeapSecond''''''s happen only at zero hour zero minutes? 00006[01] can be allowed, but Donald's 121261 cannot be permitted into the RegularExpression.

I have begun to add the TimeZone as reported from RCS or other systems as the digits after the seconds. When all my milliseconds look like 070 or 080 folks can grok that. Unfortunately, those on the other side of the Prime''''''Meridian have to rethink or reinvent this pattern. -- ChrisGarrod
----
Eliminated parsing ambiguity with the Hh field. -- SamuelFalvo
----
CategoryPattern