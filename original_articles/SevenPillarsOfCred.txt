CRED stands for Controlled Rapid Evolutionary Delivery. It was launched and marketed as ObjectiveComputerSystems' method for Java in 1996. It didn't always work. But we had some pretty striking successes in some early commercial Java projects in the UK which were truly courageous (in the full YesMinisterCourageValue sense). CRED had something to do with that success. 

I partly coined the term CRED in order to use the following launch slogan in 1996 which I still rather enjoy: 

'''The last five years have seen the launch of many incredible object methods... isn't it time for a credible one?'''

We even invested in a MacroMedia Flash version with spooky music on that theme which I must dig out and put on the web for later software archeologists to discover.

The method contained a lot of the best things that Objective had learnt by 1996 from ten years' successful and sometimes less than successful application of the ideas of TomGilb, also influenced by AlanKay's vision for Smalltalk, CrcCard''''''s, MichaelJackson's recent multi-paradigm method thinking, patterns as initiated by BruceAnderson and the GangOfFour (not knowing of WardCunningham's pioneering work there) and last but not least KentBeck's original PassionForSimplicity.

For excerpts from our one big article for EdYourdon (which TomGilb kindly recommended Objective for) see ModelingTrap and KnowHowToGrow. For other CRED-related thinking and practices see EvolutionaryDelivery, ImpactModelling and SuccessStatement. Not all parts of these pages are made redundant by the advent of ExtremeProgramming I feel sure. Just trying to work out which bits will take more lifetimes than I have available though ...

Although he always hated the name NickSimons couldn't help but make a key contribution to the concepts, the real world feedback, the debates and the jokes that were part and parcel of CRED. NeilDyer, StuartClayman, MikeStorey, DavidBriant and DannyCoward should also be mentioned in despatches. Earlier Objective employees from whom I was privileged to learn some important lessons about business software development include DavidByrne (now of Reuters), DuncanLissett and SteveBerryman (now of Longview), ColinLewis (now of JP Morgan) and TimEllison (now of OTI/IBM).

-- RichardDrake

----

From the EdYourdon article:

"These are the seven principles by which we summarize and remind ourselves of the broad wisdom gained from our own and other people's project experience over many years."

	1. CustomerControl
	2. ManySuccessesManySolutions
	3. MaximumVerification
	4. FitnessOfFramework
	5. JustEnoughDesign
	6. KnowHowToGrow
	7. DocumentToDeliver

More WikiNames to create, huh? Maybe I should let people guess what they meant and thus create a new and better method.

----

See also
	 :	http://www.objective.co.uk/events/presentation/9710_java_design/sld021.htm ''(Brokenlink 2003-12-24)''
and the slides around it.