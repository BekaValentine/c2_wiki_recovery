Languages with something from every programming paradigm, style, era, whatever.

The PerlLanguage is an paradigmatic example of this:

LarryWall says:

	 :	The Perl motto is "ThereIsMoreThanOneWayToDoIt."

The above is often made into acronyms ranging around TimTowTdi TimTow2di etc.

LarryWall has also presented a paper on this: http://www.wall.org/~larry/pm.html
----
The PythonLanguage supports several programming paradigms as well, but there's only one (syntactic) way to do each; see PythonVsPerl.

LispClos and CeePlusPlus are also heading that way.

----
CommonLisp (not LispClos), is not ''heading that way'' --- it's '''been'''
that way for twenty years.  ''And'' you don't need the godawful line noise
syntax.  And you can usually read your code the next day.  --SmugLispWeenie.

''Ironic, isn't it?  :)''

It is.  Perl made sense in its original form, gluing together some often used unix tools for system administration tasks.  As a general purpose language it touted 'flexiblity' as a killer advantage.  However, as noted here, Common Lisp is simultaneously more flexible, more powerful (vastly), faster (vastly), and maitainable (vastly) than perl....