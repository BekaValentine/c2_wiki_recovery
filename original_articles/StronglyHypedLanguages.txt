Some programming languages (as well as any other technology) tend to create a huge wave of media hype. However, there doesn't seem to be an obvious relation between the technological merits and the amount of hype generated.

Please collect programming languages that got or are '''getting media hype''' and let's try to '''collectively figure out the possible reasons''' for that.

* RubyLanguage / RubyOnRails - currently strongly hyped as a server-side scripting language along with its canned design patterns.
** Appeals to Perl programmers because it's apparent (?) relative clarity. But how does that outweigh the large amount of already-written Perl code in CPAN ready to use?
** Appeals to former Smalltalk programmers, because of the concept of CodeBlock? But it totally lacks a Smalltalk-like environment and the development methodology encouraged by it.

* JavaLanguage - strongly hyped as a successor to CeePlusPlus, JIT, "internet" and "write once, run anywhere"
** See Smalltalk, Smalltalk and Smalltalk. Or even Lisp. (SmalltalkMinusMinus).
** The idea of an "internet-oriented" language didn't really materialize. Sure, JavaScript did but who uses it?

* CeePlusPlus - strongly hyped in the first half of the 90s as a successor to C
** Some critics claim the added complexity doesn't pay off in expressivity.
** Not hyped any more, nevertheless it still remains a mainstream language. Why did the hype stop and why didn't that have an effect on the language's success? The hype only stopped after it became mainstream and locked in.

* SqlLanguage - currently (late 2005) the de-facto "standard" for interacting with pseudo-relational databases.
** For many purposes, it is sufficiently ubiquitous, and adequately consistent across implementations, to be virtually a learn-once-(almost)-use-anywhere database language despite vendor-specific quirks.
** Peddled by major vendors with little or no business case for change, and embraced by developers who use what they're given and are generally not interested in better alternatives.  Often taught in technical colleges and universities as being synonymous with databases, or, even worse, being synonymous with the relational model.
** Flawed in various ways (see SqlFlaws), not the least of which is that it's not truly relational, and begging for improvement and/or replacement.  Imagine the whole programming world was COBOL; shrink that world down to databases and at least in terms of needless verbosity and awkwardness you've got SQL.  Why does it endure?  See the two points above.

----

Is this page concerned with any language that was hyped in the past, or only languages that are currently being hyped?  For example, do CobolLanguage, BasicLanguage, JavaLanguage, PascalLanguage, or LispLanguage count?  They were all heavily hyped at one time, but are not particularly hyped now.

''Yes. They count; I think those past examples also help understand the "nature of hype".''

And what is this nature of hype? That propaganda put out by a knowledgeable elite gets distorted by a wider audience that doesn't understand the issues involved and then further distorted until nobody recognizes it anymore? All hype ''seems'' to originate in marketing, which ultimately seems to base itself on tech departments.

''I '''wish''' marketing departments would base themselves more on tech departments.  Maybe there'd be less hype and more reality if they did.  Marketing departments seem to be a force unto themselves, entirely capable of spouting fiction whether they've been within a continent of the techs or not.''

----
DecemberZeroFive

CategoryProgrammingLanguage