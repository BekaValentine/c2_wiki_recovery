Somebody who is familiar (from the DesignPerspective, or from the UsePerspective, or both?) with a wide variety of software, and hence becomes a qualified critic and judge of SoftwareBeauty.

This was relatively easy to achieve in the middle-80s, when there were maybe a couple hundred commercial software packages.  I'd wager this is nearly impossible today, although we do find SoftwareConnoisseur''''''s in a variety of subspecialties -- e.g. computerized music connoisseurs, animation connoisseurs, et cetera.

''We need a better word for this -- a short techno-slang.  Grokker?''

Software gourmet. Software gourmand.

''How about "Software Critic"?''

The connotations of that are very different than that of Connoisseur, even though the denotation has some overlap.

"Critic" isn't always a positive in the sense of someone who knows the aesthetics of a subject well enough to critique knowledgeably; it also has a frequent sense of "someone who is bitter because they can't do something themselves, so they badmouth actual practitioners".

-----

A good critic is very specific. Bad critics will use lots of ArgumentFromAuthority and vague terms. Good critics will say things like, "It violates OnceAndOnlyOnce here and here, but is good under the following change scenarios....".  A bad critic will say things like, "It is messy." 

''It seems to me that if we're looking for a title that means "a qualified critic and judge of software beauty", then "Software Critic" (as in "restaurant critic", "theater critic", "music critic", and so on) seems closest to the analogous role in other domains. Sometimes the person who complains most loudly about a critic "who is bitter because they can't do something" is a performer who's received a negative review. I agree that "Software Connoisseur" has a different connotation -- and also a different audience and role. Who is the audience for this individual, and what will be done with their appraisals?''

[Excellent question. Settle the foundational issue first.]

Art and theatre are very subjective things. We thus allow a lot of subjective statements because we have no other choice. However, I expect more from software design critiques. The only value I see in a bunch of vague opinions is that the critic may happen to think like ourself does, in which case we are just looking for a kind of '''proxy''' to study something from the perspective of our own subjective preferences because we lack the time to do it ourself. Art critics use this technique also, as a person might find a critic who tends to have the same answer as themself. Thus, may be one kind of critic that mirrors our biases, and another type who can correct them. The first type might offer more instant gratification, but the second type is more educational.

''Any statement that addresses "Beauty" (as in "judge of Software Beauty") is subjective. My friends in the art and theater fields assure me that a) art and theater criticism is not nearly as subjective as the public believes and b) we in the software world are much more subjective -- especially in our self-criticism -- than we believe.''

---------

Re: ''art and theater criticism is not nearly as subjective as the public believes ''

If there are known "rules", then writers would simply stick to them and usually get good reviews. Then again, making critics happy and making the public happy may be different goals. Breasts and explosions are not favored by movie critics, but the paying public digs them.  In that sense I guess you are right. If the breasts and explosions exceed a certain level, critics will flunk it.

''Yes, and if software had known rules, then programmers would simply stick to them and usually get good software. This has little to do with breasts and explosions, whether you like or hate them. It has to do with the observation that following rules does not imply predictability (at least obvious predictability) with any but the simplest rule systems. It seems to me that this is one of the great unifiers between art, theater, and "objective" domains like software, science and mathematics. It also, I think, may contribute to why so many programmers feel a great kinship to music and musicians, and vice-versa.''

-----

This is a fine piece of software, with a strong presentation, a lingering hint of oak and vanilla, and a clean finish.  Not to be confused with the commercial brands from the Seattle vicinity, this locally cultivated program installs without difficulty, easily fits on a single diskette, and has a colorful and well-balanced interface. 

''Goes well with Google''

