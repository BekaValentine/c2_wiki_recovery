Fredrick Winslow Taylor (1856-1915) is the author of PrinciplesOfScientificManagement ISBN 0898061822.

Taylor's ideas were instrumental in the increase of productivity over the last century.	His ideas are often criticized as "inhumane" but this is a gross mischaracterization of his intentions.	His intention was to increase productivity by applying knowledge to work.	I find that WilliamEdwardsDeming's opinions provide a good supplement to Taylor. 

From an essay by PeterDrucker:

	 :	''Taylor's goal was to answer "how is work done?"...  His unforgivable sin was his assertion that there is no such thing as skill in making and moving things.  All such work, Taylor asserted, was the same.  All could be analyzed step by step as a series of unskilled operations that then could be put together into any kind of job... No wonder that Taylor's denial of the mystery of craft and skill infuriated these "aristocrats of labor" as subversion and pestilential heresy.''

	 :	''...We now know that Taylor was right... Eventually knowledge work and service work may turn out to be like work making and moving things - that is, "just work", to use an old Scientific Management slogan.  At least this is the position of the more radical proponents of Artificial Intelligence, Taylor's true children or grandchildren.  But for the time being, knowledge and service jobs must not be treated as just work....''

I find it interesting how Taylor's view fits into the whole AutomaticProgramming	mantra.
----
Taylor's intentions might have been noble, but his techniques were inhumane. On the other hand, you can't fault him for increasing prosperity.

''I'd argue that the misapplication of his techniques were inhumane. Taylor's contribution to management was in "work analysis" i.e. what's the most efficient way to perform a task?  Often the inhumane part was "job analysis", i.e. in a production process, how should you organize the division of labor?  Taylor had little to do with the latter.''

''Taylor made it clear in his writings & testimony that he cared deeply about treating workers as "humans", to be paid well and treated well.  Managers, under his system, were the servants of workers.  That he didn't know post-Freudian psychology is akin to blaming IssacNewton for not knowing about quantum mechanics.  ''

Taylor's strong emphasis in his writings about increasing workers' prosperity was at best an afterthought, intended to defend himself from mounting accusations. He was a purist, an engineer first and foremost. And even Taylor admitted that his techniques could be used as a "club to drive the workmen into doing a larger day's work for approximately the same pay" (p.70, ISBN 0-486-29988-0). A good read that will give you a contrasting view of scientific management is (dare I mention it?) Braverman's LaborAndMonopolyCapital. --PatrickParker
----
	 :	''...We now know that Taylor was right... Eventually knowledge work and service work may turn out to be like work making and moving things - that is, "just work"''

That's an astounding proposition. I though Drucker was supposed to be the clever one. --KeithBraithwaite

''What's so bad about it?  Sure, it's blunt, but he's trying to draw parallels to the "elitist craftsmen" who eventually became nearly extinct during the beginning of the 20th century.  He's not saying it '''will''' happen, just that it might.  There are people out there today in the AI community trying to make this a reality... --StuCharlton''

Uh hu. And then what? Does "making things" mean just manufacturing? Or does it also include the craft--fine art spectrum? Will (could?) writing poetry become "just work"? Painting? Sculpture? Programming? --KeithBraithwaite

Some service work already is "just work", i.e. mainly repetitive tasks that have been honed over the years.  Hairdressing, for instance.  This does not say that there isn't room for innovation - it says that the majority of hairdressers learn a particular technique and stick to it.

Will programming ever be "just work"?  Perhaps.  I think this asks the wrong question though.   Programming may not just be "work" because a computer has to be told exactly "what is needed".  The "how" can be automated (high level languages do this), but it is difficult to see how the "what" can be automated.  ''IMO this is going to end up meaning that programming will be one of the last professions to survive (albeit programming at a much higher level than is normal today (just as the general level of programming has risen over the last few decades)), because most other surviving work other than abstract research and group-based artistic endeavours (large films, for example) will devolve into programming. We can see traces of it already in finance and EE, where a lot of people are working largely as programmers.''

The underlying idea, and this paraphrases Drucker, is "the fallacy of creativity" - that if you just put people together and give them free reign to be creative, they'll do the best work possible.  This is bogus - that the "best" ways of doing work are never obvious, and hence require analysis and knowledge.     

Paralleling this thought, SteveMcConnell has a good editorial in the April 2000 issue of IEEE Software.  The premise is this:  Developing good software is not about process heavy development vs. commitment-driven development.  Both work, but there are too many people that just "go through the motions" of a particular methodology, process, or culture.   No, the real judge of doing good software (or good work) is about competence vs. incompetence.  --StuCharlton
 
See also PaulChurchland and EliminativeMaterialism.
----

I recently read a better theory which I discuss on MeatballWiki: http://usemod.com/cgi-bin/mb.pl?FairProcess. -- SunirShah
----
CategoryAuthor CategoryManufacturing