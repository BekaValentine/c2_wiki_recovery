''There is a place for either or both '' DonaldNoyes.ThinkingOutLoud.20110503
----
'''Evaluation'''
* Implicit Lazy
** ImplicitLazyEvaluation
* Explicit Lazy
** ExplicitLazyEvaluation
* Benefits of LazyEvaluation
* ''The benefits of lazy evaluation include: performance increases due to avoiding unnecessary calculations, avoiding error conditions in the evaluation of compound expressions, the capability of constructing potentially infinite data structures, and the capability of defining control structures as abstractions instead of as primitives''
** http://en.wikipedia.org/wiki/Lazy_evaluation
* Strict 
** StrictEvaluation
'''Patterns'''
* Lazy
** LazyInstantiationPattern
** LazyPattern
'''Programming'''
** ExplicitLazyProgramming
'''Language'''
* Functional
** LazyFunctionalLanguages
* Strict
** StrictLanguage
'''Analysis'''
* Strict
** StrictnessAnalysis
'''Maps'''
* ...
----
RoadMaps