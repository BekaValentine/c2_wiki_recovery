Yes it does.

I often see relatively complicated programming-related problems discussed here. Often, the more heated the discussion is, the more general the discussion becomes. The participants try to explain their experiences with different methodologies / paradigms / design philosophies, and do so to the point where they don't understand a word of the other participant's speech.

'''Therefore''', show your thinking in code. Make simple challenges which give you and your opponent an opportunity to tackle a problem in practice.  Then, if there remains something to be explained, explain the code: why you did it like so, what the process was like, whatever. On the other side, try also to make sure that your code works; that it is actual program code. Then there can be no ambiguity about what it does, because the semantics of the program are defined by the language the program is written in.

Don't waste your time bickering about the peculiarities of a given solution. If there remains something to be explained, make the next challenge: change or new problem, whatever will bring your point better visible.

----
I've noticed that very often InformationOrientedProgrammingIsAlsoDesign. So it communicates the design to some extent. I have included some 'designs' that came out of code under the CategoryEndemeSet. Perhaps I should include some of the code too. -- JonGrover

----
See also CodeSings, ListenToTheCode
----

(EditHint: RefactorByMerging)

Hm, I checked the three pages above and none of them seems to talk about code as a means of communication, but rather about communication between a human and the code.  So I think this page has a right to exist.  (But perhaps refactor under another name?)
----
CategoryCoding
