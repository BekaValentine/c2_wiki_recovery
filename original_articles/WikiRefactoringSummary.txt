Code refactoring is changing the implementation of existing code without changing its external behavior. Wiki refactoring should be changing the content of wiki without changing its meaning. Consider, while thinking about meaning:

	* The idea presented;
	* The supporting arguments;
	* The style of presentation;
	* The attribution or lack of it;

If you're really refactoring, none of these would be changed. Only the words.
----
----
Presumably discussion should go on WikiRefactoring and eventually resummarized here?
----

Some questions for the author:

	* It's not refactoring without changing the words. Do you believe then that it's ok for a skilful refactorer to change the words of a signed contribution, as long as the first three points are upheld? ''Assuming that they don't change the signature, maybe. I think that signed contributions should not be edited by anyone other than to correct spelling and such trivial matters.''
	* Isn't it sometimes difficult to preserve original style when it's different from your own? ''Yes, that's why we shouldn't mess with other people's writing. It is the whole point of this disagreement - we would be changing what other people said without their permission. The appropriate word for this is lying.'' You'd say that the example I give in RefactoringNotes under InexperienceGeneratesSuccess 
	* Can PairRefactoring of Wiki help with any of this? ''Not in my opinion. Abstraction of ideas to the top of the page is appropriate. In my opinion it is never appropriate to change what other people say except in the most trivial ways. I am tempted to trash your home page to see whether you like it. Do you think you would?''
	* Do you agree with the argument in WikiNewspaperAnalogy that a signature should sometimes be dropped, because the text has been modified or combined with other text too much? Didn't this happen with some of the older refactorings on Wiki? ''If someone is going to trash my ideas, then certainly I'd appreciate having my signature removed. I would also appreciate it if they would add something like "The above paragraph was originally written by RonJeffries. I, yourNameHere, have modified it to be substantially different from what he originally said, for reasons of my own."''

''Italicized material above provided by request by RonJeffries, at 1036 EDT 14 Apr 2000. If you change what I wrote, please remove this attribution.''

----

Ron, I thought the summary was extremely helpful, so I created the page and asked for your replies. Thanks for giving them so clearly. -- RichardDrake

''"It is the whole point of this disagreement - we would be changing what other people said without their permission. The appropriate word for this is lying."''

I didn't realize that we were disagreeing until this point. You'd say that the example I give in RefactoringNotes under InexperienceGeneratesSuccess, which went unanswered for a month until Kevin found it, you would say that I was lying in the refactoring I explained carefully there?

I know that someone has complained about something I deduced wrongly the other day, leading me to attribute something wrong to him. The moment I knew that I (and others) had made a wrong deduction that I had expressed publicly, I apologized publicly. I had done something really wrong, in assuming bad intent on his part. I didn't apologize for lying, because there was no intent to deceive, only to clarify the facts in a very confusing situation.

-- RichardDrake
--------
Whenever you reinterpret somebody's statement, there's always a risk of changing the meaning or intended meaning to some degree. There's also context that matters. I don't know any easy way around this problem. Perhaps the only way is to try, and let the author agree with the rewording or not. (This was an issue with the so-called "grammar vandal" when he/she occasionally unintentionally changed the meaning of something, creating the question about whether grammatical accuracy was more important than always preserving meaning. GV seems to think it is, but never gave his/her logic to us.)

----
CategoryRefactoring