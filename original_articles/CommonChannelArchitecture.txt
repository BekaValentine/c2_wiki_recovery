CommonChannelArchitecture is an effort to define a set of application architecture guidelines across a related set of applications at Wachovia Bank. It is closely related to the idea of a ProductLineArchitecture.

The target applications are primarily sales and service apps delivering functions directly to retail banking customers. But we expect many of the findings and recommendations to apply much more broadly.

This is a very applied level of architecture: concrete models that we expect to help developers make day to day design and implementation decisions. The content of the architecture includes some things that are not normally thought of as "architecture" per se, but represent big upfront decisions that will be difficult to change later.

It is important to note that this is not primarily enterprise, platform, or technology architecture. We are not focused on which j2ee platform or server OS should be used. We are concerned with common layering and tiering models, standard interface guidelines for shared services developed across the bank, important design patterns, and other rules of the road for developers writing real code.

I'm taking the liberty of posting some of the design questions we are arguing here, partly because I think you'll find them interesting, and partly because I selfishly think you'll have a lot to add to our internal discussions. Please join in on any pages that interest you.

Related pages include BusinessFlowAndBusinessRules, BusinessLogicInStoredProcedures, 

-- BillBarnett

-----
CategoryProject