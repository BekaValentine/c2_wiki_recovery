I learned that I did not understand just how important the '''being XP''' vs. '''not being XP''' issue was to some people.  But, as an unabashed EasternWuss, I can't say that I'm surprised (that I was clueless).  "Those who argue do not understand."

	 :	''XpAsReligion?''

Oh, and the answer to MartinFowler's question about the mystical area between ConcreteXP and TheoreticalXP is simple: it's QualityWithoutAName.

-- JohnLindsey

If that's the answer the question must have been pretty interesting. Could anyone quote it in full, please? Thanks. -- KeithBraithwaite

----

JbRainsberger learned:

	*Pair programming is difficult. 
	*I ''have'' to do ExtremeProgramming. 
	*I can be funny if my timing is perfect.

----

I learned that nearly everyone at the conference reads this wiki. I say nearly everyone because it would have been hard to see anyone with their hands in their lap when there were so many hands in the air. With that response I felt the need to apologize for letting wiki wander a bit from programming ideas. Then I asked, "Does anyone think I should tighten up control of wiki a little bit so conversation stays on topic?" And the response: zip. Nobody wanted a change or at least nobody was willing to admit that they did. I was amazed.

I also made a wiki joke or two at RonJeffries expense. I think they stung. For this I'm sorry. Ron's tenure here was/is unparalleled. -- WardCunningham

''Thanks, sincerely. Of course the Inquisition was unparalleled, as was the Titanic. But I'll choose to take the comment as positive. ;->  --RonJeffries''

----

JosephPelrine made some interesting observations, and came up with an idea about how to spread XP thinking while IncreasingYourWardRating.

----

ErikMeade confirmed his suspicion that Metaphor is a Metaphor for SystemOfNames.  He also learned that the ExtremeProgrammingCorePractices should be thought of as etudes (XpXtude).  

----

I heard that there were some sessions and tutorials on metaphor, about which there are so few resources. It'd be nice if you could share your experience here. -- JuneKim

The RaincoatMetaphor came up in a late night conversation and was cited by Ward in his talk.

----

These things have stuck with me:

	*WardCunningham's analogy of ComplexityAsDebt
	*KayJohansonsXpUniverseExperienceReport
	*KentBeck's XpForCapitalists
	*The DigiCompOneEmulator
	*And of course, all of the great after-hours discussions in the bar.

-- JimLittle

''Hehe, yeah, I think I learned more at the bar than I did at the rest of the conference.  Hmm. -- JohnLindsey''

----

I learned that I need to stop thinking too much and JustDoIt. I also learned that being a part of a global XpCommunity rocks! -- AlexViggio

----

XpForCapitalists was an eye opener for me.  It gave me a taste of the things I need to know to explain XP to financial people.  I still don't fully understand this stuff but at least now I know enough to start asking questions.

I think I finally have a grasp on the concept of metaphor (or SystemOfNames depending who you talk to) thanks to the tutorial given by BillWake and SteveWake and many discussions with other people.

I learned that there is nothing about XP that would prevent an organization reaching CMM level 5.

I was pleasantly surprised at how friendly the XpCommunity is.

I discovered that there a lot of interest in XpUserGroups.  AlexViggio and I had a excellent turnout for our XpUserGroups BOF and the mailing list is getting some good discussions.

-- MikeBowler

----

I learned that KentBeck isn't going to answer any questions, and also that it's hard not to ask him questions, even when he's just told you to your face that he isn't going to answer any questions, and pointed to the "no questions" logo on his name tag.

Fifteen seconds later, I learned what thinking too much feels like.  I'm going to try to figure out when I'm doing it on Wiki and cut it out.

It happened like this: the discussion at lunch one day was whether to rename "UnitTest''''''s" to "FlexibilityTests" (or something similar), the way "FunctionalTest''''''s" got renamed to "AcceptanceTest''''''s".  Kent eventually suggested just using the new name, and seeing if it catches on.  I asked what else UnitTest''''''s do besides helping with flexibility, figuring there might be a shortcut -- some obvious reason why the name wouldn't work.  I may have also been fishing for some kind of official response.  In any event, I was definitely thinking too much.

I also learned (in KenPugh and AndyHunt's Metaphor Workshop):

	* A good system metaphor should be Communicative, Generative, and Suggestive of a PatternOfNames
	* The ''abstract'' classes take on the ''metaphor'' names; the ''concrete'' classes take on the ''domain'' names (JeffMcKenna said this, I think)
	* You can think of your system as a tomato plant and your system metaphor as a trellis: it shows which way the system should grow, and makes it easy to grow that way -- but it doesn't show exactly how it should grow in all the details
	* You can use the AssemblyLine as the system metaphor for just about any system -- which is a good reason to find another metaphor instead

-- GeorgePaci

----
CategoryConference CategoryDiscussion