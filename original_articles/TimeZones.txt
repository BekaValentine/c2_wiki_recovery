Divide the world into roughly 24 time zones that differ from each other by an hour (and at least one that differs by a half hour). Lets 12:00 noon be (roughly) the time that the sun is at it's highest at any given place.

Second worst idea ever. (See DaylightSavingTime) A nightmare from which we can never escape. Think JetLag is bad? TimeZones are worse, because we all have it, and they won't go away after a few oddly timed naps.

''I think you are being ignorantly harsh. Fleming, a Canadian railroad engineer, invented time zones because he was getting sick of setting his watch every time he entered a new city. You see, back in the days, there would be Montreal time, Trois Rivieres time, Ottawa time, etc. Each city would set their clocks based on their local astronomical observations.''

Aren't there two different problems here, only one of them solved by time zones? When we first built railways between towns here in the UK, in the early 19th century, there was the problem of Little Bishops FitzWalter having different local time from Cholmondeley-Fortesque sur-la-mare, even if they were only a few miles apart. The first fix was to introduce additional minute hands on church clocks showing "railway time"; later, this was dispensed with and, at the insistence of the railway companies, the whole country got one local time: GMT. Great Britain doesn't have sufficient extent in longitude to make "time zones" as such a problem. Was Fleming dealing with this problem, or the true time-zone problem caused by trans-continental travel? Did all the various towns really set up transit circles, get themselves a meridian and fix their local time?

''Daylight Saving Time, like income tax in Canada, was introduced to help the war effort. And like income tax, it just never went away.'' Income tax was also introduced in the UK to help pay for a war. The war against ''Napoleon'', and we're still stuck with it.

''So, if you're complaining about the confusion now, consider what it was like then. Before globalization. -- SunirShah''

[DST link moved to DaylightSavingTime]

Now that we've got pseudo-globalization, why don't we push through to the real thing? Think how much better everything would be if two events occurring at 12:10 were nearly simultaneous, no matter where they were?

''Because it would really, really annoy people. For instance, noon would no longer be at 12pm here but at 7/8am. That's just screwy. Computers have been happily using GMT/UTC for decades now. People don't.''

Except, when using Daylight Saving Time, noon is no longer 12pm, but an hour later.

See http://usemod.com/cgi-bin/mb.pl?TimeZone

Also a timezone database maintained at http://www.twinsun.com/tz/tz-link.htm - it's not a trivial task (partly or mainly because politicians like getting involved, especially around DaylightSavingTime).
----

What's the alternative to TimeZones?

'''UniversalCoordinatedTime'''

So, could you tell us what is wrong with TimeZones?

''You've obviously never written a timezone-spanning application. It's 9:00 o'clock here. What time is it in London? There's no consistent way to answer that question.''

	 :	Yes, there is. Ask the operating system/platform. -- SunirShah

''So, if all our systems are going to use UniversalCoordinatedTime, why do we bother switching to LocalTime to display it? We are perpetuating communication problems when we do this.''

What problems?

Timezones would not be nearly so much of a problem if SQL databases supported them properly. The datetime datatypes do not support a way to store a timezone, there are no timezone conversion functions, and the now() function (or equivalent) always returns local time. Of course, you could run your database in GMT by setting the TZ variable before starting it, and do timezone conversions in the client. Airlines must know how to do that but Internet startups don't seem to. -- BrianSlesinsky

In an internationalized database, the date/time fields should be stored consistently in some standard timezone. UTC is a good choice because it is easy. Then clients around the world can do meaningful comparisons of local time to the database time. Note that timezones in internationalized applications are entirely a user interface issue (that is, they are the View's problem). Note that 1200 EST == 1700 UTC.

If you are complaining that computers aren't sufficiently globalized, get in line. Globalization support is pathetic. Win2000 is the most globalized OS, but it only supports it as a hack. Not pleasant to use. As for companies not being intelligent about it.. well, they don't have to be. Not enough cash in it for them. 

As for SQL databases, surely you can find better software for your needs? -- SunirShah

While I'm wishing, I also wish browsers sent the client's timezone in the HTTP request, and my PalmPilot's address book supported timezones.
-- BrianSlesinsky

You can use JavaScript to derive the timezone of the client and optionally send it to the server if you're desperate. But I agree that it's frustrating dealing with inflexible, arbitrary software. -- SunirShah

'''Don't Forget Swatch InternetTime'''

----
To complete globalization, we need to make the rest of the world rise and retire exactly when we do in New York. If they wanted to see the sun, they should have been born Americans. Everyone knows there's no free lunch; when are we gonna wake up and realize there's no free lunchtime either? -- WaldenMathews

''Now that is just silly. (Hopefully that was your intention.) My proposal is this: Everyone starts getting used to waking up at odd hours (around here it'd be around 13:00) which is actually the same time, but the clock says something different. Prime time on the TVs around here would be something like 00:00 to 03:00. WABC in New York would say that something is starting at 01:00, and it really would (TBS would inexplicably keep that stupid 5 minute lag). I could call a friend in Japan and it would be the same time there too (but he may be sleeping, that won't change). Someone somewhere in the world schedules a webcast for 10:00 and I would know exactly when it is gonna start. -- KyleJerviss''

That is almost a good idea, except that it is not handy to have the date change during your lunch.
-- StephanHouben

True. Have you ever done business with a bank in Europe from America? Or, even with a bank in New York from California? The European bank will have a date change during your business day, and the New York bank will usually have a change of banking-date (which happens at 3:00 here) during your lunch too.

----

TimeZones are a fact of life. But the real problem is the discontinuity, in places such as Coolangatta and Tweed Heads where crossing the road means your local time changes by one hour.

Better would be continuously varying local time. :-)

-- EricUlevik

----

I think it's funny to see people complaining about the use of TimeZones because of how they interfere with certain highly specialized situations, as if the entire world, most of whom rarely travel more than a couple hundred miles from home and therefore don't give a rat's ass about TimeZones, should just ''drop everything'' and change the way they do things just to please programmers and other geeks. Swatch time, metric time, UTC, etc., are all just so much silly noise to about 99.9% of the world's population. -- MikeSmith

''Always count on MikeSmith to put things in perspective. Yeah you tell them Mike! Time Zones are established naturally. Each zone has its own time depending on what? The meridian? It's only normal!''

Now I know Canada and Australia have a 14 hour time difference. Which countries have a 24 hour time difference? Brazil and Australia? I wish I could find my time zone map. ''Try http://aa.usno.navy.mil/faq/docs/world_tzones.html''

http://aa.usno.navy.mil/graphics/TimeZoneMap2003.jpg