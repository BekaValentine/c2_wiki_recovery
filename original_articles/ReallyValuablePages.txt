'''Really Valuable Pages List'''

Contains what some users of this Wiki have designated to be valuable contributions. When one has cruised through a few of these pages an idea should begin to emerge of what this community is all about, how pages are constructed, what passes for content, and something of the manner of presentation that allows a page to survive and grow.

'''WikiZens seek ways and means to increase value in this Wiki'''

Methods available:
* Creation of new ReallyValuablePages
* Deletion of empty or nearly empty pages or those which are inappropriate, archaic, or have little or no historical value (care must be taken here)
* Grouping and linking the really valuable pages to each other and to a central focal point (via indexes like FrontPage, RoadMaps, or this page)
* Classifying and adding categories where appropriate
* WikiCivility Be civil to one another. Important

'''WikiZens seek to add value with every word, every link, and every Categorization'''

When linkages are well designed, mapping via available schemes will also increase value. These and other new innovative processes and devices can make this a really valuable Wiki.

Suggestion: When you add a page link to the list, a helpful addition would be a one line description encapsulating the essence of the page and indicating the value the reader can expect to derive when the page is visited. This is how you tell the Wikizens why the page cited belongs on this list.
----
'''PeopleProjectsAndPatterns'''
----
'''People'''

* People Categories
** CategoryHomePage - Access to Pages created by participants, containing bios, interests, vocation, etc.
** CategoryAuthor
** CategoryPerson 
* Strategies
** CategoryLifeStrategies
** LifeVectors
** RulesToLiveBy
** SevenHabitsOfHighlyEffectivePeople - Life and TimeManagement
** PurposeDrivenLife - Book - Helping one to focus on "It's not all about you"
* Personal Involvement
** RegularContributors - People active in the wiki in the past

'''Projects'''

'''Patterns'''

* AdviceVsPatterns - A short discussion on the correct usage of DesignPatterns, ProcessPatterns, and advice, and when are the right times for each
* AntiPattern - Looks like a good idea, backfires when applied
* DesignPatterns - Defines design patterns and discusses two ways people come to know them: in using the DesignPatternBook, or in learning to command a pattern language.
* DiscussionPatternCousins - Patterns capture experience
* ElementaryPatterns - Simple patterns used for teaching
* ForcesVsConsequences - Patterns have tension
* GamesVsPatterns - If work is a game, patterns tell us what moves to make when.  Compelling observations follow.
* GammaPattern/DesignPatterns - Software patterns
* GenerativePattern - Works indirectly, rather than attacking the problem directly
* HaveThisPattern - Patterns are not original
* KoansMetaphorsAndParables - What in the world _are_ we doing?
* PatLet - Two sentence pattern
* PatternCatalog - Just the sum of its parts
* PatternDefinition - A discussion
* PatternDefinitionThread/MorePatternDefinitionThread? - A discussion
* PatternEnvy - Possible reasons why some are too quick to use the "pattern" word when describing something
* PatternForms - A list of presentation standards for patterns. 
* PatternIndex - lots of patterns
* PatternInEverything - Pattern names help standardize our vocabulary
* PatternityTest - Various criteria a pattern should meet before calling it a "patterns"
* PatternLanguage - More than the sum of its parts
* PatternLanguages - Alexander defines context, system of forces, solution
* PatternLanguagesArePatternsToo - PatternLanguages are patterns
* PatternLanguageTaxonomy - A discussion concerned to answer whether or not it's possible and how to organize the pattern kingdom
* PatternsAreNotTheLesserOfTwoEvils - Patterns relate context, forces, and solution
* PatternsDocumentTheObvious - Patterns document the obvious and the familiar
* PatternsDontNeedToGoBoom - Patterns are about catharsis
* PatternsForBeginners - An introduction
* PatternsHandbookLanguage - Unordered collection of patterns
* PatternsMisconceptions - Myths and misconceptions about what patterns are and are not
* PatternSystem - Patterns grouped according to appropriate criteria
* PatternValueSystem - Things pattern-writers should be concerned about
* PrescriptivePatternLanguage - Ordered sequence of patterns
* PrinciplesAreNotPatterns - Patterns aren't the general principles themselves - they are the results of applying them
* ProcessPatternLanguageTaxonomy - Sorts patterns into structural, process, and behavioral
* ProcessPatterns - Patterns that are manifest in social organizations.  This page has lots of links, a good starting point for research in the subject.
* ProcessPatterns/OrganizationalPatterns - Social patterns
* ProgrammingIdiom - Language specific mini-patterns
* ProvenPractice - Patterns have been UsedThreeTimes
* PurposeOfPatterns - Patterns give their users a common structure and vocabulary
* SomePatternsQuestionsAnswered - Pattern questions and answers
* SuccessesAndPatterns - Extract commonness from success stories
* TipsForWritingPatternLanguages - A pattern formula of WardCunningham's
* UsefulUsableUsed - Patterns are usable, and used
* WhenToUsePatternForm - Patterns balance multiple forces
* WhereDoPatternsComeFrom - Patterns are distillations of best practice
* WhyPatternsAreDifferent - Patterns chronicle solutions generated over time
* WhyPatternsAreInteresting - Texture of pattern problems is interesting
* WikiPagesAboutWhatArePatterns (Roadmap) - Comprehensive List of Patterns Pages
---- 
'''Informal History of Programming '''
* InformalHistoryOfProgrammingIdeas - Short History
* ProgrammingParadigm - Programming Languages, Methods and Approaches

'''Authors List as favorites:'''
* BehavioralEffectOfMetrics - Suggestions for those in the TrackerRole
* ChangeYourOrganizationTactics -- Organization change, please refer to diary pages listed inside as well
* OptimizationStories -- Xp advocates post some results of their practice
* PromptingStatement
* TenWordLine -- Compose text into lines averaging ten words or less, for casual reading, and even narrower for speed reading.
* KinestheticProgramDesign -- Having programmers throw balls to each other, so everyone understands message-passing.

----
See: DiscussionOnReallyValuablePages,
ShortListOfValuablePages
----
CategoryWiki, CategoryIndex, CategoryRoadMap, ValuablePage