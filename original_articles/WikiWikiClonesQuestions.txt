I'm looking for InternationalizationIntegration - I'm thinking of a button like "translate this page to... English, German, ...", and you need a preferred language selection, of course.

Does this exist? Anyone working on something similar?

--------
I want to run a special winewiki for winelovers and special text collaboration. Can I do this with quicky wiki software according to Ward's copyrights? -- HelmerPardun

''I don't think wiki is copyrighted by Ward. In any event, yes, you can do it, but get permission if it's used commercially. -- BrentNewhall''

----
I need some help finding a TotallySelfContainedWiki. I want a wiki that is a webserver and wiki all in one, a single file that would create a directory structure that would be all I need for my wiki.

''The Comanche Squeak Swiki, http://minnow.cc.gatech.edu/swiki/15, is what you're looking for. In addition, it runs on any platform and it takes about 15 seconds to read the instructions and install. -- StephanBranczyk''

''Or EddiesWiki. Runs on Windows. Unpack and run. minimalist but effective. -- SatisfiedUser''

''I don't know if something like this has been created yet. The closest thing I know about is the QuickiWiki that comes with the book TheWikiWay. It has it's own simple web server included, but I believe it is a bunch of separate files. Additionally, in your request, it would be good to mention what platform you're looking for, Windows or Unix or whatever.''

''I have been looking myself. Only ones I've found are above-mentioned and WiKit (but Wikit will when self-contained ONLY run on local computer, ie no localhost access from another computer). Of the above, the Swiki is the most elaborate, you can lock pages and see history etc. I have it on Win2000 at work and Linux at home for experimenting.'' -- JamesWillison

''Instiki (www.instiki.org) is a completely self-contained wiki and web server written in Ruby. It's motto is "There's no step three!" - the first two steps being "1. Download" and "2. Run instiki.rb".'' -- MarkReid (step zero: install RubyLanguage)
----

What's the best wiki for :
# Revision Control
# Ease of setup

I'd like to use a wiki for documentation. I'd like the backend to be perl or PHP. I've tried twiki (TOO HUGE) and PHPWiki (not enough rev.control).

Any middle ground?

Thanks,
-- Sam Rowe

----

http://wiki.slowass.net/?TinyWiki TinyWiki was written in Perl uses CVS and is reasonably good.

----
OliBye asked "Has anybody got any scripts/code for upgrading from one wiki to another? In general, or specifically WardsOriginalWiki to TwikiClone" ''I have a Perl script that exports the contents of a WikiBase wiki to XML. I haven't done an import for Twiki, it shouldn't be hard to do. -- JohnBrewer''

There's been discussion of WikiInterchangeFormat, sometimes about XML. There was some talk recently on WikiForum.

----

SimonArmstrong asked "Has anyone considered, implemented or done any work on a RealtimeWiki?"
----

Isn't PrincipiaCybernetica a bit wiki? Not quite, but...
-- AlexanderBostrom

----
Wanted: newbie installation instructions for Wiki. Questions:

1. Do I have to have access to the server, or can I run it as a simple perl script in my cgi-bin account?

thanks, mailto:mark@louisivlle.edu

Answer: If you have a CGI-BIN, you can do it. K2 (AustinDavid's next Kwiki) is gonna be made for this.  All you do is install it (copy the files, make one executable) and you can config the rest from the CGI interfaces.
-- AustinDavid

-----

Hey Ward (or other WikiMaster :),

I don't understand Perl, and I certainly can't say IwannaLearnPerl, but I'd love to have a local Wiki server as a discussion forum for our office. I'm currently writing one (having never seen the Perl source) in the JavaLanguage (using a servlet).

Is this okay?

One thing someone may be able to help me with... At the moment I'm requiring links to be explicitly marked with a double @ ( e.g. @@HelloWorld ) so's I can spot them.  I'm no RegularExpression expert, so the algorithm you use to identify links implicitly is a bit of black magic to me...

Can anyone explain how to do that matching in a ProgrammingLanguage like the JavaLanguage (rather than PerlLanguage)?

-- AlanFrancis

You might find the various packages at http://www.oroinc.com/ useful, and sourced from http://vaultfeed.com code framework. 

-- ChanningWalton

I use the PerlStyleRegularExpression

  \b(?:[A-Z][a-z]+){2,}\b

in PikiPiki to identify words. -- MartinPool

I used the above in Java using the Jakarta Project's ORO Matcher and it didn't work perfectly. This may be a problem with the library, but it matched ''''''SampleWord'''''' but not ''''''SampleWordExtra''''''. I'm not sure why... -- RussellBeattie

''Oops, I'm using a plain:
 (([A-Z][a-z]+)+[A-Z][a-z]*)
I might revise that then (though it works jus fine for now) -- StijnSanders''
---- 
 
Hey, what happened to Wiiski? It was a great little wiki, and seems to have vanished into thin air...

''Try http://wiiski.renewal-iis.com/wiiski/bin/view/User/GetWiiski.''

----

Hello, I'm searching for a Wiki-like which works on Windows, has anyone an idea where to find?
Thx a lot ''--- Try OpenWiki'' '''''Or EddiesWiki'''''

----

Hi. I'm looking for a page that either "rates" Wiki severs or advice on which is the most "advanced" Wiki server. Just need some information to ship around. Any ideas? -- Zoltan.

''This WikiGnome knows of nothing outside of WikiEngines. But how would one rate Wiki servers?''

----

Hi. I just want a small wiki that can run under my ordinary home webserver. -- Xitami

''Under what operating system? UseModWiki is one popular solution, but can be more or less difficult depending on your OS. -- BrentNewhall''

----

It would be nice if it's possible to run a program and write a line in a html-page and call that page index.htm.
I'm just a n00B in both html and many other stuff so it must be simple.
It's hard to find info about wiki ex HOWTO or other stuff about wiki on a small home webserver.
If it was simpler to find info, I think more people would have an own wiki.
I and some friends are about to start a project named free windows desktop and need a place to talk and share ideas.

Thanks Anakin
----

Hello Someone. Would you be so kind as to recommend wikis that can run on linux-based systems, well with small memory in particular, like that of a pentium 11 machine? -- Thanks Hams.

''UseModWiki should do nicely. -- BrentNewhall''

----
I have this dream idea. You have your personal wiki locally on your own machine (could be either Windows or Linux) and you create and/or edit a few pages. When you connect to the network, your changes are automatically uploaded. Meanwhile, all the changes that others have been making are automatically downloaded. Conflicting edits get duplicated pages for resolution. Any ideas out there?

----
For a Wiki that works on windows, and is self-contained, ZwiKi seems to be a reasonable choice. You do need to solve a couple of problems if you're installing ZopeApplicationServer 2.6.0, however.

----
Well, looking everywhere and I can't find a wiki with unicode support. :-( I know WikiPedia engine but I need one without requirements for a DBMS. Bye. -- Kpjas

----

I work in a large enterprise and would like to run a Wiki engine internally.  I've only found one (Twiki) that looks reasonably robust and stable enough for the enterprise environment. Are there any others?
Also, what is the data exit strategy? I know this is primarily text in a database format but what about that inevitable day when we want to either switch Wiki engines or port the content to a proper knowledge management system? I'm wondering how best to plan for the future before I let my users run loose and create thousands of pages I can't promise will be there in the future. XML seems like the ideal but I can't say.
Any advice would be much appreciated.

Thanks - M. Marchand

''What is your definition of "reasonably robust and stable enough for the enterprise environment"? This standard will vary considerably from person to person and situation to situation. Generally, a Wiki running on an intranet doesn't need to be as robust as a public Wiki. Lots of high-traffic public Wikis use UseModWiki.''

''As for data exit strategy: The Wiki engines I know store pages as plain text, just as they appear in EditText. The main issue in moving to a new engine is different TextFormattingRules. As long as you restrict Wiki formatting to common formatting marks (like two single-quotes for emphasis), you should be okay. But variety is what drives the creation of WikiEngines, so you'll invariably see differences.''

''Does that answer your question? -- BrentNewhall''

Thanks for the feedback. I'll elaborate on what you said in hopes of clarifying.

It seems a lot of Wiki Engines are created as a project by individuals or small groups that are not in the business of selling and supporting their engines. I cannot in good conscience commit my company's human capital (for lack of a better term) to placing content in a repository that is not supported professionally and may not be able to easily be ported to the next repository.  Traffic is not the issue, stewardship is. Public Internet Wikis, organic as they are, normally don't have someone responsible if any of the data is lost or has a master plan for the use of that data in the post-Wiki future.

I suppose my definition of enterprise environment ready would be something more like supported by a real company, stable code with regular upgrades, written in a fairly common language (vs something esoteric few people know), that is sensitive to important enterprise standards like XML and MS SQL. If anyone knows of any Wiki engines that are even close to that spec I'd like to hear about them.

Regarding data exit strategy you mention restricting to common Wiki formatting marks. This would be fine if our only data exit strategy is to another Wiki but that's not necessarily the case. Who saw Wiki coming and who can say what will come next? If I had an engine that stored the XML equivalent tags for the normal Wiki ones then the text could be reused in any XML compliant application in the future instead of just a Wiki. The shorter term solution is to try to run the text through a routine to strip the codes but that could be problematic.

Again, I appreciate the feedback and welcome any more than people have here.

-- M. Marchand


It seems like M. Marchand is looking for something that is quite featureful and has all the things that a large organization needs, authentication, revision control, consistent and powerful TextFormattingRules, has a regular release lifecycle, has a group of people working on it - the stuff that makes OpenSourceProjects really take off and work. But there needs to be some way to export the data out of a flatfile and into a DBMS of some sort. It's the ability to export the data and reformat it into some other form that M. Marchand is after. The extraction and reformatting may or may not be part of that particular Wiki. I imagine that you are shopping for a Wiki that, at the very least, allows you to write plugins. The plugin you want would need to access (read) the whole wiki, manipulate the data and then write it out in some format or other (XML, SQL, etc). -- FrancisLiu

This is all good and fairly close to our interests. Twiki does support plugins however I have to believe there is more than one Wiki out there that enterprises can choose from (based on the criteria listed in my previous post.) I will even settle for less than optimal now if it looks like the company is moving forward with development. Wiki engines may not be very powerful now but I could see committing to one that is going places and will be what we want it to be in a year or so.

Perhaps the answer is for someone to code their Wiki so that users are faced with the familiar Wiki formatting rules yet the database stores them translated into XML so they can be reinterpreted later.

Thanks for the feedback.

-- M. Marchand
----

Honorable wiki cognoscenti:

I am interested in writing/editing tools for the creation of scientific and technical educational texts through collaborative effort. The resulting works would be permanently posted on the web and would be freely available to all for any purpose other than commercial republication. Ultimately, a library of hyperlinked texts, current, correct and dynamically improving with each contribution, would be added to the human heritage of public domain intellectual holdings. It is hoped that the quality of the works would lead to their adoption as principal texts for university classes in science, mathematics and engineering. The implications for technical education in the third world could be very significant.  

The entire effort would be organized in the spirit of the Free Software/Open Source movement, making use of freely-available software and common conventions, reducing the cost of participation for contributors, and increasing ease of adaptation and re-use. I discussed the needs of such an effort with my son, a CS major at the University of Washington, and he suggested that I look into wiki.

I see now that there are many wikis, with varying features, and that some of my requirements may be hard to fulfill. One problem is equation editing.  Typical writing in many of the subject areas contemplated averages three equations per page. Quality of appearance and legibility equal to conventional texts is desired. Equation editing equal to that afforded by TEX would be important.  Another problem is illustrations. I see that at least some wikis support inclusion of tifs and jpgs, but what about captioning, composition and flowing text?

I have seen some things about Wysiwyg wiki using Amaya, which has MathMl capability. This looks intriguing, but is this not vaporware as yet? Has anyone thought about a melding of TEX and wiki? Or is this perhaps nonsensical.

Some degree of editorial control would have to be available, with rough version control and rollback ability in case of disaster.

My basic question is this:  At the present time, should this sort of project reasonably be attempted using wiki?  If so, which version of wiki? Also, is anyone interested in collaborating on this project?

-- Tom Higgins

---------
I would like to install a wiki on a hosted website, without telnet access (only file transfer), like the majority of ISP sell to people here (in Italy). I'have read about Kwiki, but it seems disappeared. Are there any other options?

Keith B adds: I'd like a hosted non-telnet wiki as well so I could let my students loose on it (behind a password protected directory). Anyone any ideas? 25 March 04

---------
I would need a Wiki with a reasonable security model. This means (something like) only registered users may edit, and in order to register, you need to supply a working email address. It should not be possible to bypass authentication by (trivially) guessing cookies or URLs, and there should be a mechanism for reverting a page to a previous version if a user goes berserk after all, or just makes an honest mistake.

UseModWiki didn't have authentication which passed the laugh test last time I looked, but I can't pretend to have done a lot of looking, or any at all recently.

Additional bonuses for anything which doesn't force one to use CamelCase or any particular DBMS for storage. The fewer external dependencies, the happier I will be. (That sort of assigns a negative score to anything which requires PHP, too. Perl or Python would be fine, as they are in practice required for a lot of things these days anyway. More minus points for MySQL in particular; I've tried to set it up and failed, more than once.)

''You might be interested in ZincWiki which I am working on, though it won't provide *that* much security by default. Do you want encryption of passwords? I don't know crypt. Do you want password always hidden from display? It's kind of UgLy to force that into POST data for every link; means you need form buttons for "edit page" etc. instead of plain links (Well. Or cookies, but I don't plan to implement those either.)''

''But I '''am''' doing levels of access, and non-CamelCase links, and no DBMS (actually, I'm just doing flat files + directory structure + symlinks). And I'm using Perl. :) -- KarlKnechtel''

----
My dream wiki has two parts... a personal wiki that runs on a local computer, and a public wiki that is 'out there' on the web.

Public wiki features:
	* basic wiki plus the ability to add pages via FTP and/or add comments to an existing page via CGI.

Personal wiki features:
	* little or no revision control, since I would be the only user.
	* little or no infrastructure required (i.e. built-in webserver and interpreter)... The installation of Apache and Perl to support a personal wiki seems a bit extreme.  
	* Each page would have a checkbox that marks it as publicly viewable or not... if a page is marked publicly viewable, it gets placed on the public wiki (or munged into existing pages).
