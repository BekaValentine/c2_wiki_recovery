The BoostPhoenixLibrary is one of the BoostLibraries. The main author is Joel de Guzman. It provides a different route to FunctionalProgrammingInCpp.  It claims to be influenced both by FC++ (FunctoidsInCpp) and the BoostLambdaLibrary.

It also implements closures.

* http://www.boost.org/doc/libs/1_50_0/libs/phoenix/doc/html/index.html (Phoenix V3.0)
** http://www.boost.org/doc/libs/1_50_0/libs/phoenix/doc/html/phoenix/what_s_new/phoenix_3_0.html notes a breaking change from earlier code.

Quote from http://www.boost.org/doc/libs/1_39_0/libs/spirit/classic/phoenix/doc/preface.html (not the latest version).

''What really motivated the author to write Phoenix is the lack of access to a true stack-frame with local variables (closures) in all C++ FP libraries in existence so far. When emulating functions in the form of functors, the most basic ingredient is missing: local variables and a stack. Current FP libraries emulate closures using state variables in functors. In more evolved FP applications, this "poor man's closure" is simply inadequate.''

It is used in the BoostSpiritLibrary. It uses the BoostProtoLibrary and BoostFusion. It is compatible with BoostBind.
----
CategoryBoost CategoryCpp CategoryCppTemplates