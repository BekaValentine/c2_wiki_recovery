Success means different things to different people. Consider some different metrics of success:

** The product shipped sort of late. Users hate it, but buy lots of copies anyway. (MicrosoftWindows and friends).
* The product shipped on a ludicrously short schedule, was full of bugs, but people seemed to like it anyway, although few paid for it. Made an IPO possible, generating bazillions of dollars. (Netscape in the 1994-1996 era).
* The product is given away for free. Beloved by many, even though authors may receive limited financial remuneration. (LinuxOperatingSystem, PerlLanguage, PythonLanguage, SqueakSmalltalk).
* The product never shipped (or shipped, but failed in the market), but served as an inspiration that led to major advances by others. (TedNelson's XanaduProject, which led to the web; most of what Xerox PARC did in the 70s, which led to GUI-based computing in the 80s and 90s.)
* Product is killed, but provides "enabling technology" to produce a wildly successful follow-on product. (the relatively unsuccessful Douglas DC-1 airliner lead to the legendary DC-3; Apple's Lisa led to Macintosh).
* Product is popular... popularity is contingent on many factors including marketing, the economic "network" effect, monopoly power, similarity to other popular products...
Before you can tell if a software project was a success, you need to know what yardstick it was using. For example, any startup that doesn't lead to an IPO or acquisition is a failure by the metrics of startups, regardless of how "inspirational" the software it produces is. ''Many successful companies stay private. In fact, I would usually consider acquisition to be an indication of failure rather than success.''

At the same time, as an individual, you need to consider if the yardstick used by the software project is congruent with your values. For example, by the standard business metrics of profitability and market share, Microsoft is wildly successful. But by the gift culture metrics of the OpenSource/FreeSoftware community, it is an abject failure, because they aren't giving any code back to the wider programming community. Similarly, you may decide that the startup values of "IPO at all costs" are incongruent with your value of code quality.  And your venture capitalist may decide ''your'' value of quality is incongruent with ''his'' value of an IPO. -- JohnBrewer

----

Great question, useful alternatives given. But all about product development.  We need translation into the consulting/bespoke development world too. -- RichardDrake

----- 

"''If life gives you lemons, make lemonade.''" (Clearly a saying of capitalist origin). Is success when you get what you intended to get, or when you get something neat, perhaps not what you intended, or when you turn it all around and make lemonade? Or when it just doesn't kill you? There's something strongly personal in the answers.

-----

I've known people who joined a sure-to-fail project because they knew their resumes would look better after (technology learned). Success to whom?

----

I use the concept of ''levels of success'' in thinking about deliveries. Level 0 Success is usually a variation on, "Nobody gets killed, nobody gets fired, nothing gets worse." Once I can guarantee Level 0 Success, I can start making promises about things getting better.

''Tell us more about the next levels. I like the approach.''

----

I would define a successful product as one that is beneficial to both the user and producer. This definition allows trade-offs to be made and does not force us into one extreme or another. -- WayneMack

----

Success is followership. Follow for a minute and let me explain. To succeed is, literally, to follow. "The second sentence succeeds the first." When you try something and get a result, the result is the successor of the effort... a ''success''. "But what if the result is a failure?". It's still a success. The only way not to succeed is to abort. This says something interesting about the quality culture in which the word 'success' evolved to its current connotation of ''winning''. It's closely related to the notion of perfection, meaning completeness. In what sort of culture do people not consider themselves done until the result is acceptable, and is this common today? If you've followed so far, then I'm done (with this part).

In another sense, there is a simple litmus test for success. If they call you back to do it again and you do, then you will have succeeded (yourself), but by cheating a little, you can ''claim success'' as soon as you get the call.

-- WaldenMathews

I believe you are defining ''successor'' not ''success.'' 

''I'm pointing to a relationship, actually, and maybe inviting you to explore it. -- wm'' 

Let me expand. I was questioning your hypothesis of a relationship between successor and success. Could you expand on why either one might imply the other?

''I thought I had expanded on that above, maybe not well enough. They are the same word, which leads me to ponder where the apparent two meanings came from, which leads me to the insight that to survive is to succeed. It's word history, not current usage, but I think worth pondering. YMMV, as they say. I was striving to be provocative. -- wm''

----
'''UK political perspective - spliced from AnAcceptableWayOfFailing'''

''"All political careers end in failure"'' -- Enoch Powell

One ''should'' learn something from failure. But remember too that HistoryRepeatsItself. It's unhelpful to say that all end results have the same success value. To stick with the political analogy Enoch Powell was an extremely clever man in the same party and with very similar views to MargaretThatcher.  However violently you might disagree with both of them, she was much the more successful politician.

It's unhelpful to XP or any other sensible method to have no concept of success or failure. I support both "failing gracefully" when necessary and succeeding greatly when possible. But I can tell the difference and I know which one I prefer! -- RichardDrake

----

JohnFavaro has predicted that more XP projects will be cancelled earlier, because you have so much early high-quality feedback about progress and value. How can we cast this in a positive light? Perhaps we call them "explorations" for the first six months, even though to us we treat them like regular development? What do real businesses do when they decide not to make an investment? Is that considered failure? -- KentBeck ''See also IsEarlierCancellationFailure.''

''Isn't six months an awfully long time to figure out if a project will fail? Product cycles on the Internet are 12 weeks long if you're lucky.''

You don't have this problem. The marketplace will give you the feedback you need. I'm talking about projects lasting 18-36 months like replacing the central accounting system for a large bank. Six months into many of these projects it's apparent to everyone that the plug should be pulled and everyone should start over, but no one wants to "be negative" or "not be a team player", so the projects continue for another $100 million, sometimes taking the whole sponsoring organization down with it.

I don't know a better way than XP to get to market quicker and stay in the market longer (if initial impressions are all that matter, the JoltPoweredGenius might get the first release done faster). If you do, please tell us about it. -- KentBeck

The problem with a project is rarely that the system metaphor is wrong (even assuming the project has one). It is much more often that the people you trust to give you a sensible job assignment are pointing you and several dozen other people in a profitless direction. That can take months to decipher, and then months more to decide what to do about it, and then months more trying in increasing frustration, and then (and then that's what DeathMarch projects are made of).  (But it's OK, because lots of other project have failed like this, we're used to it. It's AnAcceptableWayOfFailing. <wry grin>) -- AlistairCockburn

---------

On a completely different tack, many people claim that Silicon Valley's phenomenal success is due to a failure-friendly culture. If your company fails, there's always multiple people up the street hiring, so there's relatively little financial risk. And there's no great stigma attached to having worked for a failed company, so there's little professional standing risk. Of course, everyone would rather succeed, especially given the stock options. It's just that failing is not the end of the world, or even a CareerLimitingMove -- JohnBrewer

This is one of the biggest things we still lack in the UK to become a true enterprise culture. Thanks for making this point. -- RichardDrake

----

Interestingly, at XpImmersionOne last week, Kent spoke about "failing gracefully." Actually, I think he used a much better phrase than that, but I forget what it was. The idea is that many projects need to fail early, and the rapid development you get with XP can hasten their necessary demise. It is much better to recognize that the project can not or should not be done early on, and then fail gracefully.

Making "failing" another way of "winning" is apt to give the psychologists something else to work on.

After all, does failure exist? You learn something and except for once, you live another day to do something else.

-- MichaelFeathers

----
Success is measured not only in relationship to a C''''''ompleteProject, but also in the celebrations of success in incremental, scheduled issuance of completed P''''''rojectSegments. In a Successful Project, those engaged will experience both success and failure. In a LearningOrganization successes are celebrated while failures are LessonsLearned. While successes show ItWorks, it is no little thing that failures will teach us what WorksNot. --DonaldNoyes
----
See also:
* SuccessStatement
* AnAcceptableWayOfFailing
* IsEarlierCancellationFailure
* DefinitionOfProjectSuccess
* LevelsOfSoftwareSuccess
* WhatIsFail
----
CategorySuccess CategoryDefinition