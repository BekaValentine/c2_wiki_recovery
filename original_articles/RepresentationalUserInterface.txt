A representational user interface is a user interface that represents the data or RealInformation behind it. Representational user interfaces could become popular if our civilization began using InformationModeling to build InformationLayer''''''s. You see, representational user interfaces are presently unpopular because the system behind the user interface is almost always data rather than RealInformation. Customers need information rather than data most of the time. At present, the job of a GUI is to translate the data behind the scenes into real information for the users. This is a hardcoded literal translation and is difficult to change. Using a real information layer would allow representational user interfaces to be automatically manually generated, because the information behind the scenes would be the information that the users needed.

-- JonGrover

''How do you use "InformationModeling to build InformationLayer''''''s?"''

[How does this compare to NakedObjects, TangibleValues, OpenCroquet, ObjectBrowser, DeclarativeGui?]

NakedObjects and RepresentationalUserInterface s are very similar except that NakedObjects are used in the RealData realm whereas RepresentationalUserInterface work in the RealInformation realm. To work in the data realm you must have expert data oriented users. Users in the information realm don't need as much expertise because information is the language of users (as opposed to progrmmers). In addition, information can be used to format the representational interface somewhat. In effect both form and content can be represented by information but only content can be represented by data.

An ObjectBrowser is one kind of RepresentationalUserInterface. Object definitions are a form of RealInformation for programmers, so they reside int he information realm.

CategoryUserInterface, CategoryInformationOrientation