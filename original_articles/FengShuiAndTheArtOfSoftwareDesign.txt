There is much in the practice of FengShui that can be applied to the art of SoftwareDesign.

This page will hold thoughts on this topic, but I wanted to get this page started for fleshing out. -- MikePence

ABSOLUTELY! To begin with, consider how many software bugs are the ''direct result'' of the fact that your tower is stacked sideways beneath your monitor, or orthogonally against this side of your cube or that, instead of diagonally as it was meant to be?

''Thank goodness we have the snarkey comment above, I mean the idea of one's working environment affecting the quality of work, preposterous!''

Well, FengShui, at the core, is a formalized set of rules for defining when things look quietly bad. So it might be said that FengShuiAndTheArtOfSoftwareDesign is more of a set of ways to realize when your code is crap. Of course, we eagerly await MikePence or another person to actually tell us what they were thinking. ;) -- KenWronkiewicz

----

How many software products seem to get stuck on '2.x'? FengShui says get to the number 3 as soon as you can. Just one of those weird cultural things where 3 is better received than 2. 8 is the best number... but precedence says we should probably start giving our products year names (Win95, Win2000) or nouns beyond release 7.0. 

Those little rear view mirrors that pop up as schwag at conferences are another FengShui idea brought into the office cubicle realm. Ideally, you should be facing people as they enter your office, but a mirror is the next best thing if you're stuck facing a corner. 

FengShui's application of color, water, and plants in the work environment predates western interior design by many centuries. 

FengShui was developed on geographic latitudes similar to N. America and Europe, which might explain its practical adoption in these countries where the movement of the sun throughout the day is the same as it was thousands of years ago in China.

In general, FengShui applies more to the environment where Software is designed rather than the software itself.

-- MichaelLeach

----

Perhaps the things you're supposed to avoid in FengShui are "FengShuiSmells", just as we seek to 
avoid "CodeSmell''''''s" when coding? So now we just have to make up mystical and superstitious explanations for why each CodeSmell is bad. (Explaining them in practical, rational terms, after all, would break the FengShui analogy. ;-) -- MikeSmith

''FengShui artists are simply perceptive to superstitions and use them in their designs to make them more acceptable to their intended users, just as many western architects choose to omit the 13th floor from buildings. When is the last time you saw a software product with a version of 13?''

Well, AutoCad, for one. Most software products simply don't last long enough to have a version 13. Maybe MacOs? It's at 10.x already...

''Yeah... AutoCAD is a good example. It'll be interesting to see if the Apple design team takes this bit of superstition into account if and when the MacOS versioning reaches 13.''

----

The above sneer towards client superstitions is a bit shallow. If you assume FengShui is worthless voodoo, you'll never gain any insight from it (note that I'm not saying it isn't worthless voodoo, just that the assumption doesn't help). A more constructive approach would be to take one of the FengShui principles, assume (for the moment) it has value for software design, and see what implications it has. For example, 

[''Apparently, the example is null.'']

Just make sure the ClassDiagram''''''s face North, UseCases are on the next set of pages, put some chimes over your workstation and no sharp corners (that eliminates CeeSharp)

----

Oh, Gawd!  FengShui already.  All your vibes are belong to us.  End of the world as we know it.

Is there a TwelveStepProgram for those who don't "get" FengShui -- TrustTheForce, Grasshopper?
