The NUnit Web Test Runner (NUnitWeb) is a simple ASP.NET web application that can run NunitFramework tests on a web server and display the results in a web browser.  This is useful if you want to run tests remotely on a server.

Note that this is not like NunitAsp.  This does not test ASP.NET pages; it can run any tests that are installed on the server.

More information is available at http://kristopherjohnson.net/kj/NUnitWeb

Currently, it just runs the nunit-console.exe program in a subprocess and pipes stdout and stdin back to the client browser.  Whenever I get time, I'd like to change it so that it looks a bit nicer, uses colors to differentiate successes from errors, and provides some of the other niceties of the NUnit GUI.

Anyone who tried out version 1.0 should probably also try version 1.1, which has some usability and cosmetic improvements.

-- KrisJohnson

----

Have you thought about using the NUnit framework directly, instead of invoking a new process?  I've had a go at hacking it in but ran into some weird remoting errors - I don't know enough about remoting to fix it yet, but it shouldn't be too hairy.. -- JimArnold

I thought about it, and may do it eventually.  But I decided to begin with the simplest thing, and I haven't found a need for anything more fancy.

Even though using the NUnit framework in the page would be cool, there are some benefits to the separate-process approach:
	* If tests go haywire, they won't take down the ASP.NET worker process with them.
	* You can use any console test-runner program (that is, something other than nunit-console.exe), without changing the ASP.NET pages.
	* You can configure it to run the separate process under a different user account and security context.

Another way to go would be to run nunit-console.exe but then use the generated XML file and XSLT to create nice HTML output instead of piping back stdout/stderr.

-- KrisJohnson

----
CategoryDotNet
