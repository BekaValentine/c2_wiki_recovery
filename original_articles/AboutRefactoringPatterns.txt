Dear friends,

Here is a set of refactoring patterns which I'd like to discuss with you. All comments, ideas and suggestions will be appreciated. I'd like everybody who is interested to actively participate in the creation of these patterns. '''''These patterns are intended to be used by the community, so it is the community best suited for deciding their content.'''''

This page is the result of the research that is being taken in partial fulfillment of the requirements for the degree of Master in Sciences by the engineer Santiago L. Valdarrama.

At this moment, I completed the following refactoring patterns. The other patterns will come in few days:

* BacktrackIfRefactoringFails
* TheFirstRefactoringStep
* RefactoringInVerySmallSteps
* TestEveryRefactoring
* RefactoringInDuets
* RefactoringUsingTools 

'''Please, sign your comments. Each pattern has a section called "acknowledgments" where I mention all names that contribute to do better stuff.''' 

Thanks for your help.

-- SantiagoValdarrama

----
What about something along the lines of MakeItWorseToMakeItBetter? I find myself, say, adding a local variable that is just noise to the code, to facilitate a cleaner ExtractMethod, then inlining it after the ExtractMethod is done. Is that a Pattern? -- CarlManaster

----
See also WhatIsRefactoring
----
CategoryPattern''''''s CategoryRefactoring