Language used to glue things together.  VisualBasicForApplications is one, SchemeLanguage is also often used as one (look all the programs, like TheGimp, that use GuileScheme bindings to tie things together). PerlLanguage is also described as one.

Some defining characteristics of glue languages:
* Glue languages usually use DynamicTyping; in other words, values have types, but variables don't.
* Glue languages are usually interpreted rather than compiled -- or, they are compiled in memory every time a file is read, and the compiled code is never stored. Sometimes the code they interpret can be entered interactively; it is often read from a file and interpreted.
* Glue languages make it very easy to write small programs. It is usually possible to do it with a minimum of boiler plate code. However, it can be harder to write large programs.
* Using them you can AlternateHardAndSoftLayers.

Well-known Glue languages:
	* command.com batch files
	* UnixShell''''''s
	* PlanNineFromBellLabs RcShell.
	* PerlLanguage (having evolved largely out of the unix shell scripting tradition)
	* VisualBasicForApplications
	* PythonLanguage
	* AwkLanguage
	* AppleScript
	* Does the "expect" tool count here?
	* ToolCommandLanguage
	* RubyLanguage
	* EmacsLisp glues everything outside of Emacs to everything inside of Emacs

Less-known Glue languages:
	* JavaScript (using the RhinoInterpreter or SpiderMonkey from Mozilla - Rhino especially is easily integrated and can access all the Java libraries)
	* GroovyLanguage (another dynamic language targeting the JVM with full access to the Java libraries)
	* RexxLanguage

Techniques and Issues surrounding glue languages:
* BasicLikeGlueLanguage
----
CategoryProgrammingLanguage