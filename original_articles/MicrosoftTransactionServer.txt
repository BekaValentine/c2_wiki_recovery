''MicrosoftTransactionServer (MTS) is nolonger available as a separate product (see ComPlus), however its concepts and functionalities are used whereever there is a need for transaction and /or security management in the Microsoft environment, even in days of MicrosoftDotNet, quite possibly until WindowsVista become an established product.''

http://www.microsoft.com/com/tech/mts.asp.

-- sg

-----

'''Features:'''

	* Static Load Balancing
	* Multi-Threading and Resource Pooling
	* FaultTolerance
	* Multi-User Concurrency
	* Role-Based Security
	* Transactions (with TwoPhaseCommit)
----

Here are some patterns from ComponentDesignPatterns that come to mind for folks who are interested in how to apply patterns when building an MTS app:

	* LayeredComponentFramework
	* ComponentBus
	* ContainerManagedPersistence
	* ConnectionFlyweight

Feel free to add others or reference other patterns/languages that have applicable ones as well.

Contributors: PhilipEskelin
----
'''Resources related to MTS'''
	* Java (Visual J++) components for MTS http://www.microsoft.com/mind/0298/mts.asp
	* ..


----

Note that MtsObjectsCanBeStateful. You might also want to know WhyUseMicrosoftTransactionServer. 

But what are the drawbacks? We're trying to figure that out on DnaVsOo.

----
'''QuickQuestions seeking answers'''

EJB differentiates between Entity and Session Beans but you can design MTS objects as "Database update" objects and "query objects". Can someone bother to tell me how this competes well against the abstraction of separation data and business objects as captured by entity and session beans. 

Thanks. 

-- Mumtaz Ahmad 

----
CategoryMicrosoft CategoryMicrosoftTechnology
