An experimental technique to improve SignalToNoise on wiki. Someone announces a deadline for people who've been making a ThreadMess on a page to ReFactor their stuff or see it deleted. Could this work? Well, we're about to find out ...

''Has been tried with some success on DeleteThesePages. I'm going to try and clean out other messy corners the same way.''
----
What would give you, whoever you are, the right to delete other people's contributions? (I do think plenty of them deserve it, but I don't see that the power to do so is the same as the right.) -- RonJeffries

Can this be the same RonJeffries who wrote the original WikiMaster definition? Still, perhaps you're right, perhaps a better way would be to attack the problem at its root and DeleteWiki. -- PeterMerel

This seems like a good time to remind people that they can create a WikiPageArchive. Everyone has the right to ''try'' to delete content from Wiki, and likewise everyone has the right to try and stop them from doing it. This is a situation where individuals are allowed only to exert ''influence'' rather than ''control''. 

In order to have final say over what is to be on a page, you must come to agreement with anyone who is willing to oppose you. RefactoringDeadline is a good thing because it announces an intention to act, but a WikiPageArchive is also a good thing because it can be used to prevent that action and force a debate on the issue. The resulting balance of power can be frustrating but it is also an opportunity for all involved to exercise and improve their social skills. -- PhilGoodwin

It always cracks me up to see the same people who support CollectiveCodeOwnership freak out over refactoring a ThreadMess in order to collectively create something better. This, for some reasons, forces all these ''ownership'' alarms to go off. I think it is pretty clear that in this context, delete means reshape the original text into a collective dissertation. How many people that practice CollectiveCodeOwnership feel so hesitant to delete large portions of code that do not add to the overall program? To the contrary, they are usually rewarded for this. --

There are important differences. Refactoring of code is supported by unit tests and deleted code is backed up in revision control. We don't have those things available here to support the deletion of ThreadMode contributions. There are some Wikis that are backed up with revision control. I'd like to see one with a three-paned diff merging editor that showed the current page on the left, any past revision on the right and allowed you to merge them into a new version on the bottom. If I had that I'd be way more comfortable with deletion. -- PhilGoodwin

----

I don't think anyone has ever objected to ''refactoring'', especially if that meant abstracting a long thread mode up to the top of a page. After people were convinced that the essence was maintained - kind of a human unit test - they'd likely be less concerned about removing the discussion. Deadlines and reductionism seem not to support the desire - perhaps even need - to have one's ideas preserved. -- RonJeffries

Reductionism has been badly defined then. The eventual reduction of a page by the consensual means you describe is very consistent with my own definition. I agree about the limited usefulness of deadlines. -- RichardDrake

----
CategoryRefactoring