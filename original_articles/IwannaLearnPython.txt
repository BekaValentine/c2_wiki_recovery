Good for you. PythonLanguage is easy to learn, very expressive and powerful, and extremely popular and well-supported.

'''Online tutorials:'''

* The official Python tutorial: (http://docs.python.org/tut/tut.html). Takes you gently through the language, and is well-organised and -indexed so you can use it like a quick reference. Read this if you know another programming language already.
* ''Dive Into Python'' (http://diveintopython.org/): Online version of a printed book. This is much more verbose than the official tutorial. Read this if you know another programming language already.
* ''Learning To Program'' by Alan Gauld (http://www.freenetpages.co.uk/hp/alan.gauld/) For the not-so competent programmers, this tutorial far surpasses the official one - and the author also assists on the Python Tutor mailing list (below).
* ''How To Think Like a Computer Scientist: Learning With Python'' (http://www.ibiblio.org/obp/thinkCSpy/) is excellent for novice programmers.

'''Printed books:'''

Get yourself a printed book too, for carrying around and reading at odd moments (or in bed). The following general-purpose Python books are arranged newest to oldest.

* ''LearningPython, 2nd ed.'' by Mark Lutz and David Ascher (ISBN 10: 0596513984) October 2007
* ''ProgrammingPython, 3rd ed.'' by Mark Lutz (ISBN 10: 0596009259) August 2006
* ''PythonInaNutshell, 2nd ed.'' by AlexMartelli (ISBN 10: 0-596-10046-9) July 2006 
* ''Beginning Python: From Novice to Professional'' by Magnus Lie Hetland (ISBN 159059519X) Sep. 2005
* ''PythonCookbook, 2nd ed.'' by AlexMartelli et al. (ISBN 0596007973) March 2005. (Also see the online recipe site below)
* ''Dive Into Python'' by MarkPilgrim (ISBN 1590593561) Jul. 2004. (Or read it online, above)


'''Wikis and groups:'''

* Official Python Wiki (http://wiki.python.org/moin/FrontPage)
* Python Tutor mailing list (http://mail.python.org/mailman/listinfo/tutor)
* PythonTranslator on this wiki may be of interest

'''Portals & online journals:'''

* "Python Documentation Index" (http://www.python.org/doc/) The official Python site.
* "Python Topic Guides" (http://www.python.org/topics/) The official Python site.
* O'Reilly's "Python Dev''''''Center" (http://www.onlamp.com/python/) LampPlatform portal
* "Charming Python" column by DavidMertz (http://www-106.ibm.com/developerworks/views/linux/articles.jsp?view_by=Search&search_by=charming+python%3A or http://gnosis.cx/publish/tech_index_cp.html) Getting a little old, but interesting nevertheless.

'''Other online resources:'''

* "Unifying Types and Classes in Python 2.2" by GuidoVanRossum (http://www.python.org/download/releases/2.2.3/descrintro/) is still invaluable instruction in properties, method overriding, method resolution order, MetaClass''''''es, etc.
* Additional Python Cookbook recipes: http://aspn.activestate.com/ASPN/Python/Cookbook/
* Wikibook ''Programming: Python'' (http://en.wikibooks.org/wiki/Programming:Python)
* ''Instant Python'' by Magnus Lie Hetland (http://www.hetland.org/python/instant-python.php) Minimal crash course.
* "Python Quick Reference" by Richard Gruet & Simon Brunning (http://rgruet.free.fr/#QuickRef) Outline of Python itself and several modules (HTML or PDF, in English or KoreanLanguage).
* ''An Introduction to Tkinter'' by FredrikLundh (http://www.pythonware.com/library/) HTML and downloadable PDF about GUI programming.
* ''Thinking in Tkinter'' by Stephen Ferg (http://www.ferg.org/thinking_in_tkinter/) Online or ZIPped lessons about GUI programming in several literate .py files.

'''Special interest:'''

* For advanced learners with CeeLanguage skills: ''Extending Python, and embed Python in C'' (http://www.codeproject.com/cpp/pythonpart1.asp). Unfortunately part 2 never did materialise.
* ''Text Processing in Python'' by DavidMertz (ISBN 0321112547) Jun. 2003 (Or read it online: http://gnosis.cx/TPiP/) This book also happens to be terrific for FunctionalProgramming in Python.
* ''Python Programming on Win32'' by Mark Hammond and Andy Robinson (ISBN 1565926218) Jan. 2000
* If you want to use Python to program games, check out the fantastic PyGame library.
* If you want to use Python to program windowed GUI apps, see WxPython.

----
'''Older book reviews:'''

Read DavidMertz's reviews of Python books at http://www-106.ibm.com/developerworks/linux/library/l-pbook3.html (within the page there are links to earlier book review lists)

The reviews are worth reading. (I, personally, think ''Quick Python Book'' is the best for the beginners and ''Python Essential Reference'' for the veterans.) -- JuneKim

''The same site has lots of material suitable for people interested in PythonXml.''

DavidMertz is very into FunctionalProgramming. Several articles in his "Charming Python" column are about FP in Python, even articles that don't mention FP in their titles. In addition, a good part of an early chapter in his ''Text Processing in Python'' book addresses FP.

The only Python book which I've bought was Andre Lessa's ''Python Developer's Handbook'', which is mentioned in Mertz's review, but not reviewed itself. It's somewhat larger than most other Python books I've seen, with the possible exception of the Core book, and tackles things from a beginner's perspective. A large part of the book is dedicated to certain tasks you might use Python in, and a comprehensive annotated list of useful Python modules, as well as sample code on how to use certain modules in certain contexts. Lessa's native language is not English, but the book is written well, and suffers from very few odd turns of phrase, and is well worth looking at. -- DanMoniz

----
'''IwannaLearnPython QuickQuestions'''

'''Q''' ''Cygwin and its Python package''.   Is that combination any good? It says there are Python 2.3.3-2 and 2.3.4-2 stuff. Is that a good Python for beginners?

'''A''' Taken from VisualBasicSuitableForDevelopment
''Python with py2exe, using a gui toolkit like WxWidgets/WxPython or even tk or gtk is another viable alternative.''
* Anyone got opinion about WxWidgets/WxPython as GUI builder on WindowsXp? -- dl 
** I love it but I'm a long time WxWidgets fan so I'm biased --ChrisMellon

'''Q''' ''Python CGI under WindowsXp''.   Need expert help to see whether steps to setup Python cgi for windows95, located at http://starship.python.net/crew/aaron_watters/pws.html is still relevant to WindowsXp. Seems odd one has to directly manipulate registry files.

'''A'''
I'd hope not.  You could try using ''Apache + mod_python'' - http://httpd.apache.org/modules/python-download.cgi
* ''I need to use IIS though.'' I am hoping to apply that setup on a work machine later, and I do not want to change any major software config like IIS on the XP
** ActiveState ActivePython has an installer that sets up Python for use with IIS via CGI. I've never actually used it so I can't make promises to how it works. --cm

GoogleKnowsEverything - "IIS Python" gives <http://support.microsoft.com/default.aspx?scid=kb%3Ben-us%3B276494> ... You could have done that ;-P
* thx, Google search was done but I asked "Python script" instead :(

'''Q''' More on Python GUI bindings. What about Tk Gui binding for Python (read in ToolCommandLanguage, and found Tk Inter link at http://www.python.org/moin/TkInter). I presume it is available for WindowsXp (?PocketPc) and behaves well (not like X windows). What pros and cons compared to alternatives?

'''A''' Tk works "fine" on Windows XP, but my personal bias is that Tk is crappy even at it's best. WxPython works great on Windows XP. If you can afford a commercial license for Qt and PyQt, that works great too. If you want something higher level than WxPython, try PythonCard. There's also pywin32, which you can use to access MFC and the Win32 API directly, but I wouldn't use this unless you've got a lot of C/C++ experience with MFC (common), and are really in love with it (far less common). --cm

'''Q''' PythonCard page here was last updated in 2002. WhatHappened to that project in terms of major changes in the interim years? I am asking the question on this page so people can see a QuickDiff of the PythonCard. Maybe "someone in the know" can update that page with the info on the current release (0.81 see http://sourceforge.net/project/shownotes.php?group_id=19015&release_id=276425) and give some indication as to what major limitations/bugs exist and its alternatives?

'''A''' 

----
Since I am trying to learn python, and this page, while offering many links, does not give any direct help, I thought I would share the absolute basic, which to me is open a file and run. This was not as straightforward as it seems. I made a file called test.py with a function called go() then tried 

  import test.py

which did not work, then

  import test

which did, but then typed go(), which did not work. Finally after slogging through the tutorial I found further down (http://docs.python.org/tut/node8.html the fibo.py example) you have to reference the filename so

  test.go()

Worked. From there it should be a matter of CopyAndPaste from examples. Hope this helps save someone else time. 

''Some clarification for why this worked/didn't work:

"import" imports a module. Modules are referenced by abstract name, not filename (putting a path in there won't work either). Modules are also imported into their own namespace. You can alias the modules namespace by using import as - import test as mytest will create load the module test into the namespace mytest. You can also import directly into the global namespace (although this is not recommended) using the from import syntax - from test import go will load the symbol go from the module test into the global namespace. This also works with a wildcard - from test import * loads all symbols from the module test into the global namespace. This use is not considered best practice.''

I am also trying to use PipPy on the palm, at first when I tried a for loop in the "command line"/eval it kept giving errors even though it seemed very simple:

  for x in [1,2,3]:
    print x

Then I pressed enter after the last x and it worked. I am now heading over to PythonWhiteSpaceDiscussion. In PipPy it is even worse trying to load files, you have to do 

  import memoimp;memoimp.install()

But then it seems to work same as using ''import file'' in the windows Python command line interpreter above. ''file'' is a Python category memopad file with #filename.py at the top. I deliberately have not tried the windows GUI IDE yet as I want to use both palm and desktop so am using the environment that is similar on both.

----
CategoryBooks, CategoryPython, IwannaLearn