You have an old system you want to replace by TestInjection. But no one wants to sit down and write the functional tests.

'''Therefore,'''

CaptureTransactions going in and coming out of the system. Automate that. Dump your database before and after. Let your testers label each bag of in/out transactions + associated dump with the intent of their use of the system.

Now automate re-running a bag of captured transactions. Congratulations, now no one has to sit down and write the functional tests. --PeterMerel

----

Excellent idea; I can see how this would be very useful to me on a number of projects. Does anyone know of pre-existing software for doing this, or strategies?  I am imagining this as a strategy:

* capturing a "before" database dump and an "after" database dump
* computing the differences and store in a YAML file
* Allow user to delete fields from the YAML file (e.g. transaction_date)
* Write script to verify records and fields present in YAML file

'''Update:''' I now have the budget to write a tool if one doesn't already exist (for PostgreSQL specifically).  Anyone know of one?  If not, I'll post reference to it here.
