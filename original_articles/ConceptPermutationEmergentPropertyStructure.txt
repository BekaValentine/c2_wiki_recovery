The Concept Permutation Emergent Property Structure which I call an EndemeSet is a structure in which the relative priorities of concepts can be placed. Usually I list 22 concepts and then order them into an endeme to store a piece of information. That piece of information is an emergent property. Here is an example:

 Identity Name fields EndemeSet:

 ABCDEFGHIJKLMNOPQRSTUV|
 ----------------------+
 A                     |A. Alias
  B             P      |B. Best/preferred
   C  F                |C. Complete/full
    D       L          |D. Documentary/literary
     E             S   |E. Engaged's/spouse's
      FG               |F. First/given
       G               |G. Generational
        H              |H. Handle
         I             |I. Internet
          J L          |J. Judicial/Legal name 
      F    K           |K. Kinship/father's
      F     L          |L. Last/family
             M         |M. Mother's
              N        |N. Name
               O       |O. Old
                P      |P. Professional
   C             Q     |Q. Quit/cut endeme
                  R   V|R. Responsibility/virtual
                   S   |S. Suffix
                P   T  |T. Title/prefix
                     U |U. Unknown identity
   C                   |V. child's
 ----------------------+
 ABCDEFGHIJKLMNOPQRSTUV|

 maiden name        = NLGO
 occupational name  = PT
 like to be called  = NB
 second middle name = LF
 former first name  = FO
 birthday           = DG
 Internet name      = NI
 Internet alias     = AI
 Internet handle    = HI
 nickname           = NH
 known pseudonym    = NA
 hidden pseudonym   = AN
 pseudonym          = ADQ

 Is not intended to be interpreted past the Q in this case.

 <field set="name">
   <f e="NF">Jon</f>
   <f e="NFL">Robb</f>
   <f e="NL">Grover</f>
   <f e="NFC">Jonathan</f>
   <f e="NBF">Jack</f>
   <f e="NI">jonrgrover</f>
   <f e="HI">Random Axess</f>
   <f e="NJ">Jon Grover</f>
   <f e="NH">Jonny</f>
   <f e="NLGO">Smith</f>
   <f e="NLGOM">Tunney</f>
   <f e="SP">MD</f>
   <f e="SG">III</f>
   <f e="TP">Mr</f>
   <f e="FK">Jeffrey</f>
 </fields>

''Why is the above useful or desirable?''

EndemeSet''''''s make it possible or easier to:
* Index unorderable information
* Automate decision making
* Construct mutual languages between data formats or between people and data
* Allocate resources
* Build InformationModel''''''s
* Build an InformationLayer that makes what is behind the scenes in a program more similar to what the customer/user needs than data is.
* Reduce interface complexity between multiple systems using an information layer as a central conversion layer
* Reduce space requirements for sparsely used structured data structures such as xml
* Reduce the number of screens for sparsely used data
* Manage people and groups with more precision
* Help users find buttons, and functions in a large complex menu hierarchy or application
* Support a certain amount of natural language
* Computational/artificial creativity
* Partner human creativity with computer creativity
* Add fields to a UI that have not been thought of until the user needs them
* Build genetic algorithms
* Perform signature recognition
* Identify overlooked possibilities in a domain

-- JonGrover

''How do EndemeSet''''''s make it possible or easier to do the above?''

''In partial answer to my own question, I found a better example at http://acblog.net//comments.php?id=100_0_1_0_C''

''It's a simple dictionary encoding scheme.  By way of analogy, in the same manner that XML generalises HTML, it seems to be an attempt at generalising the concept behind GeekCode.''

CategoryEndemeSet, CategoryInformationOrientation
