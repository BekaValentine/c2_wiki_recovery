I'm wondering how people deal with migrating persistent objects that have changed. 

I'm specifically interested in Java and serialization, but the discussion should be pretty general. 

Q: What's the best scheme for saving objects and for migrating them when they have changed in a way that has broken serialization. 
* Some ideas include not using serialization, but then again, you have the same issues to deal with. 
 
A: 

Q: If you serialize the objects and their codebases change, is there a simple way to update the codebase for those objects? 

A:

I'd like this to turn into a set of best practices for Versioning Persistent Objects.

''Possible solution bound to start a flamewar, but it is an option to consider: don't use heavy OO. Talk directly to the database instead of through object wrappers.''

-----
CategoryJava 