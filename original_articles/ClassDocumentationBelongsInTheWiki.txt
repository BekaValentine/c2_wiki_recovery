The idea is that minimal class and package documentation should be
with the classes themselves, the rest whould be in a wiki.

Your wiki is where you can build the dense network
of relationships that truly document your software. If your code
is related SNMP, that can be a link to SNMP, for example.
You can refer to the product specs or design docs that relate
to the software. You can refer to a talk about alternate
strategies that weren't taken.

Your wiki is where you can easily write larger pieces of
example code.

----

No... not sure wikis are actually useful or read.  Except for this wiki of course.  The time I spent creating a table specing out the development servers and whats on them could easily have been spent drawing them in a notebook,  because anyone only asks me ad hoc questions anyway, they dont read it,  no matter how many times I point them to it.

Wards wiki is great and worthwhile,  but I dont know what kind of a wiki it is,  its an enduring forum,  not a project documentary repository.   Documentation is worse than worthless,  its lies.   The docs used by management are nothing more than glorified forms of the scraps of papers I write my notes and cheats and recipes down on to get my tasks done.



----

See WikiAsBuildComponent
