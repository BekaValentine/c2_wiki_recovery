RandalSchwartz used to sign off his usenet postings
and email messages with ObfuscatedPerl that would print 

    Just another Perl hacker,

after the perl interpreter got through with it.  It has since grown into
a favourite past-time of PerlHackers to strain their knowledge of the
language in both creating and trying to understand these bits of code.
It's a nice way to have FunWithPerl.

----
JohnBeppu <beppu@lineo.com> - my first japh.

    package wuv'apqvjgt;($_=join('',(*Pgtn''''''Hcemgt))) # print map "beppu\@$_\n", qw(
    =~ s/([HaP])(?!e)/ \U>$1/g;s/^.|:| (?=A)|>//g;y # cpan.org lbox.org binq.org
    /c-z/a-u/;print"J$_\n";#$^%$^X@.^ <!-- japh --> # lineo.com codepoet.org);

''This human concept of "WUV" confuses and infuriates us!''

----
If you've got a japh, feel free to add it to this page!

----
I've always found it fascinating that C and Perl programmers take such
delight in ObfuscationContest(s).  This, as much of anything else, tells
us about the cultural mindsets prevalent in this community.

I find it telling that there is no obfuscated CommonLisp contest, nor
SmallTalk, EiffelLanguage, etc.  Could users of these languages be more
interested in solving difficult, real world problems instead?

I've always found writing clear C/C++ a challenge (and I don't think I've
ever succeeded in writing really clear Perl, after many many years).
Those language's emphasis on HeavySyntax make the task of getting the
program right difficult at the expense of the overarching design and
problem being solved.  I think that SyntaxConsideredHarmful applies.

As our field mature, I think we will need to cease trying to impress
each other by how many obscure exceptions to the language we can remember,
and concentrate instead on solving difficult RealWorld Problem(s).
In this respect, I think the development of PythonLanguage is a step
in the right direction.  --AlainPicard

''sorry for somewhat hijacking this page -- feel free to refactor 
this to another page.''

----
Not a problem, my friend.  

To paraphrase LarryWall, the same thing that makes it possible to
write really obfuscated code in PerlLanguage, is the same thing that
allows one to write really beautiful code.  Perl, to me, is freedom.
As I program in it, I get the feeling that
ThereIsNothingPerlCannotDo.

Of course, not every PerlProgrammer is a FreedomLovingPerlPoet.
WithFreedomComesResponsibility and there are many programmers who
are not disciplined enough to wield this freedom effectively.  Many
people have faulted PerlLanguage for allowing this to happen, but I
ask you -- can discipline ''really'' be enforced by a language?  Is
not the only true discipline ''SelfDiscipline'' ?

BadProgrammer''''''s will be BadProgrammer''''''s in any language.  
I have a friend who will take your beautiful PythonLanguage and make
it his bitch.  This is not a boast on my part -- I'm actually rather
disturbed.  My point is that writing code in PythonLanguage will not
magically make my friend write beautiful code.  --JohnBeppu

People have compared RubyLanguage to PythonLanguage in readability; one can write really good object-oriented code very clearly.  And yet it's flexible enough that you can obfuscate the hell out of things if you so desire.  It has some great features that contribute to this, like Perlish regexps, and C++ish overloaded operators.  --NickBenesma
----
CategoryPerl