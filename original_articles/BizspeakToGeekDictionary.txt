The business world is spinning out of control with new metaphors, acronyms, models, architectures, and what not, while we hackers still write ''programs'' (you may have to define this term for your manager).  This page is here in order to facilitate translation from nouveau IT-speak into actionable work plans.

When your manager says:

	'''... using SOA ...''':	... where programs delegate via a tightly enforced, centralized point of failure ...

	'''... a service ...''':	... a program ...

	'''... a solution ...''':	... a program the end user sees ...

	'''... a technology ...''':	... a program the end user does not see ...

	'''... BI ...''':	... a dashboard which shows things ...

	'''... using workflow ...''':	... with graphs with boxes and arrows ...

	'''... using BPM ...''':	... with interactive graphs with boxes and arrows ...

	'''... using an object broker ...''':	triple your development time estimate due to the coming of middle-man bloatware.

	'''... enterprise ...''':	triple your license cost estimate (see EnterpriseApplication)

	'''... pro-active ...''':	... with more meetings ...

	'''... best of breed ...''':	more consultants, implies '''... using an object broker ...'''

	'''... initiative ...''':	more meetings, more consultants, may imply '''... enterprise ...'''

	'''... open ...''':	will contain ''open'' in the product name, and may need more lawyers

	'''... multi-task ...''':	you will do at least 2 jobs at one time

	'''... active ...''':	changes settings behind your back

	'''... dynamic ...''':	does things "for" you that you will have implement workarounds for

	'''... cooperative effort ...''':	you will have to work with a bunch of idiots that don't know what they are doing

	'''... going forward ...''':	you aren't allowed to use time travel

	'''... CMMI ...''':	you will spend 1/3 of your time on paperwork that no one reads and adhere to the WaterFall model.

	'''... quality assurance ...''':	there will be no refactoring and no unit tests, but the paperwork will be consistent with the last project.

	'''... intuitive interface ...''':	the whole CrudScreen and ModelViewController shebang, possibly a "rich user experience" (which see)

	'''... rich user experience ...''':	redefine all standard key combos, mouse clicks and menus to force the users to memorize every detail about the UI. Roll your own controls that appear differently than the standard. You can bet some controls need to be semi-transparent. ''Just use LotusNotes as your platform.'' (Or, you will have to pay somebody lots to use it, and thus a "rich user" is born.)

	'''... WebTwoPointOh ...''':	you need to throw together a turquoise and orange wiki with Ajax

	'''... portal ...''':	a slow web site with a "rich user experience" (see previous entry)

	'''... seamless ...''':	using a hacked together architecture/methodology/interface

----
See also: AlarmBellPhrase