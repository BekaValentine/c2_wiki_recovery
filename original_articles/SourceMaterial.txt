It's important in any engineering environment to have access to all the reference work needed to create the product under development.

Okay, so that sounds obvious.

So, why is it that I have frequently found myself working in environments where some essential piece of literature, industry standards documents, system configuration manuals, definitions of terms, and explanations of the constraints that led to the current state of the system at hand are absent?

I can understand an individual desire to be "important" or "valuable" or even "indispensable" and to enforce this through the use of obscure terminology or references to academic works not available within the walls of the current establishment.  Oh, you haven't studied Cobbler's ''Methodologies''?  Too bad.  No, we don't have a copy here:  it's assumed that any ''qualified'' engineer will have studied it.  I'm sure [''university''] will use it when they catch up.

That's fine for EgoBuilding, but it sucks for the health of the organization.

The knowledge base needed to understand what you're doing has to be codified and accessible.  That's your SourceMaterial.

To expect obscure knowledge to be passed down as a legacy from "father to son" in an engineering endeavor is to invite the phenomenon of "LostTechnology" where the reasons, or even methods, for some implementation are lost in the mists of forgotten history.

Which is okay if your company has no plans to be around for long.

''It won't be, at that rate. It is pretty standard for companies to buy individual copies of any books or manuals that are considered essential, or at the very least to have available to loan to anyone who needs to reference it, if expense is an issue.''

''And that's even in organizations where that kind of EgoBuilding is common. There's no excuse for claiming something is important, but not then making it available as a company resource. No excuse at all. It's an obvious contradiction.''

''P.S. there are a lot of books that I consider essential, but I can't think of a single one that I could just assume that every programmer has read. It's a big world.''

''P.P.S. I understand that Cobbler's kids don't have a copy, either. ;-)''

* 'Course not.  Cobbler is now employed by a multi-national corporation that pays him peanuts; you think he could afford to ''buy'' the stuff he designs at work?  (I certainly couldn't afford to buy the things I design at work; of course the things I design at work are professional-grade test instruments costing tens of thousands of dollars, that I have little household use for.. :)