''Note: this topic is '''not''' related to security breaches (spam-bot "zombies"), but rather obsolescence patterns.''

We can't always afford to throw away investment in older technologies. Some technologies survive due to the excessive cost and risks associated with change even when there's a consensus amongst most people that we'd be better off in the long term converting.

It can be difficult, however, to say when a technology is truly obsolete. Although one technology may seem 'obviously' better than another, a closer look often reveals advantages of both. As always, don't use a snappy epithet as a substitute for critical thinking.

See the ScaleOfObsolescence; it might be useful to attach scores to the technologies listed here. (Quick reference: 0: State of the art; 1: Best Available to users; 2: Best cost-effective Mainstream Solution; 3: Low-end Solution; 4: Legacy Solution; 5: On the way out; 6: Limited Use; 7: Fully Replaced; 8: Museum Piece)

'''Software'''
	* The whole BasicLanguage ethos ("on error ...", "goto ...", "anyone should be able to program - who cares if they get it right?")
		* ''obsoleted by:'' ObjectOrientedProgramming, EssentialDifficulty.
		* ''but looking closer:'' Good for rapid prototyping
		* ''but looking again:'' Nowadays scripting languages like PythonLanguage are also very good for rapid prototyping
		* ''but peering deeper still:'' It is hard to argue with the effect Visual Basic .NET has had on the creation of applications and products all over the marketplace. There is nothing out there to go head-to-head with the 2nd and 3rd party support given to VB.
		* ''but peering still deeper still:'' This effect may not be a good thing - witness the amount of 2nd and 3rd party support required.

	* CobolLanguage (score: 4)
		* ''obsoleted by:'' Every language invented after it, except BASIC.
		* ''but looking closer:'' Many other languages fail to provide exact decimal arithmetic which is necessary for serious financial applications
		* ''but looking again:'' SmalltalkLanguage got decimal arithmetic right.

	* JavaLanguage
		* ''obsoleted by:'' Many languages invented after it ''and'' before it including LispLanguage, SmalltalkLanguage, RubyLanguage, PythonLanguage, ObjectiveCee, etc.
		* ''but looking closer:'' Despite the limitations of the language, there are a huge number of free and commercial class libraries and frameworks written in Java.
		* ''but looking again:'' Many languages can now be compiled to run in a JVM and take advantage of existing Java classes.

	* StaticTyping
		* ''obsoleted by:'' DynamicTyping
		* ''but looking closer:'' Static typing allows IDEs to do a lot of contextual searching for you; for example, hit <Cntl>-space in Eclipse while using Java and compare this to doing the same thing in Eclipse with Ruby. Additionally, most after-the-fact analysis tools still require static typing to determine compile-time faults, do they not?

	* DataFlowDiagram''''''s
		* ''obsoleted by:'' TestDrivenDevelopment
		* ''but looking closer:'' sounds like chalk and cheese - FlowBasedProgramming uses DataFlowDiagram''''''s, and supports a mental model of how data flows between asynchronous components. What does TestDrivenDevelopment say about data flow or asynchronism? 

	* AssemblyLanguage
		* ''obsoleted by:'' Every computer language invented after it.
		* ''but looking closer:'' Compiler writers and others who deal with very new CPUs must use AssemblyLanguage. Occasionally someone really does need that final increment in speed that AssemblyLanguage can give. Often people that write OSes must write a few words dealing with interrupts in AssemblyLanguage. Also, most CPUs have registers needed for systems programming which aren't abstracted by high-level languages. Further, how does one convince any compiler to spew out native relocatable code that has no independent requirement for a language overhead? Sometimes it is necessary to do really bizarre things with memory mapping, including unmapping and remapping the code segment. The trampoline that ties them together must be written in assembly. And no, I'm not a virus writer or something like that.

	* Pre-ANSI C
		* ''obsoleted by:'' ANSI C

	* PC-DOS/MS-DOS (640k ... d'oh! WindowsME ... D'OH!!)
		* ''obsoleted by:'' Anything with a true 32-bit kernel. ''Anything with a true 8-bit kernel ?''
		* And yet, there are still a fair number of people using it (at least '''DOS applications'''). In 2005!!!
		* Making a kernel "32-bit" doesn't really mean anything except that the default word/address size has changed. I think this is a WintelCulturalAssumption, where the 16/32 address size shift happened to coincide with the implementation of Virtual Memory Management in Intel processors making things like proper memory protection possible. On other platforms, these two innovations didn't necessarily coincide. So, talking about "true 32-bit kernel" when meaning "true memory protection" is IMO somewhat erroneous.

	* 32-bit operating systems
		* ''obsoleted by:'' Anything with a true 64-bit kernel. 
		* ''but looking closer:'' Only pointer size matters here (All other things being equal, 64-bit systems do not significantly outperform 32-bit systems). The leap from 16-bits to 32-bits was inevitable and necessary, but 32-bits might be enough for 90+% of what gets done with computers WithinTwentyYears. ''The 32/64-bit OS shift is in the WinTel world not at all like the 16/32 shift - instead of a new generation of operating systems, all that's happening is 32-bit operating systems being reworked for larger address/word sizes. So, 64-bit operating systems are in fact 32-bit, but with 32 extra bits - while the 32-bit operating systems were complete rewrites (Win NT or OS/2 vs DOS/Win3.1/Win95) of their 16-bit counterparts''
		* ''but looking closer:'' Pointer size does matter. 4 gigabytes is nothing these days; it won't be much longer before 4Gb is regarded with the same bitterness as 640k.
		* ''but look again:'' There are still needs for 32-bit and even smaller OSes in an embedded world. You aren't going to put Ubuntu on your washing machine, are you? Or Mint on your wall thermostat? Do you want your car's ECU to run Windows 8? No? Well, then, bunkie -- welcome to VxWorks, ThreadX, RTXC, etc., all running 32 bits and smaller. (And you're not going to put a computer in every doorknob, right?)

	* Email
		* ''obsoleted by:'' Newsgroups. See EmailIsObsolete.
		* ''but look again:'' Mailing lists have grown in popularity spectacularly, while newsgroups are virtually unheard-of by anyone born after 1985. This is largely due to the significant ease of moderation and spam control. Mailing lists, of course, rely on SMTP, not NNTP. And who among us can actually get work done without the ubiquity of email? C'mon, really?

* MacLisp
** ''obsoleted by:'' CommonLisp
*** ''obsoleted by:'' PythonLanguage (for better or for worse)
**** (Stealth flame-bait?)


'''Hardware'''

	* Chemical analog cameras (score: 3)
		* ''obsoleted by:'' Digital Cameras ''Really? Where can I buy a $100 (US) digital camera with the resolution of 35mm film?'' Counter query - How can I take 100,000 film pictures for less than $2000? -- MikeWarot
		* See ChemicalVsDigitalCameras

	* Cathode Ray Tubes, used for displays (score: 2 [Note: is this paragraph still accurate?)
		* ''obsoleted by:'' LCD, LED, plasma, VFD, DLP, OLED, ...
		* ''but looking again:'' CRTs provide the best color resolution, screen resolution, longevity, and frame rate. DLP has great color resolution, but still can't match the maximum screen resolutions and frame rates of CRT.

	* Cathode Ray Tubes/vacuum tubes, used for audio amplification (score: 5)
		* ''obsoleted by:'' Solid-state transistors
		* ''but looking closer:'' Vacuum tube amplifiers still preferred by some audiophiles, who claim the sound is "warmer". Audiophiles with some technical sophistication claim that the non-linear distortions introduced by tubes are less objectionable than those introduced by transistors. (The various types of devices are known to have different transfer functions which introduce different harmonics).
		* ''but looking even closer:'' Many others say that tube-loving audiophiles are nuts, and it's all in their head. At any rate, few (if any) claims that tubes are superior have been validated by statistically-valid, double-blind studies. Many audiophiles retort that such studies themselves are flawed - that the only evidence that matters is the opinion of an "expert listener" (i.e. an audiophile) aware of his environment (i.e. already knows whether the amp uses tubes or transistors). 
		* That's only talking about studies that looked at distortion-free amplification. This was all objectively settled a very long time ago. Tubes objectively have advantages, but '''only''' in the distortion regime (that is, when you crank them up higher than they're rated, so that they behave non-linearly). Don't turn it up to 11, and then it doesn't matter which you use.
		* Unless you're intentionally distorting a signal while producing music. In that scenario tubes and transistors are both useful devices.
		* Vacuum tubes are still used in many guitar amplifiers and effect units.

	* Cathode Ray Tubes/vacuum tubes, used for switching, RF amplification, other electronic functions. (score: 7)
		* ''obsoleted by:'' Solid-state transistors
		* ''but looking closer:'' Vacuum tubes still used in many high-power/high-frequency applications. (There's one in nearly every kitchen.) Transistors continually improving, though; tubes are not. ''Tubes don't need to improve, they're a mature technology, so that's specious. Transistors need to improve in order to displace tubes. On the other hand, there is still the occasional new breakthrough in vacuum tube technology, maybe once every 5 years, if one pays attention.''
		* Vacuum tubes are still used in most large radio transmitters.

	* FloppyDiskZombieTechnology (score: 6)
		* ''obsoleted by:'' Networks, Higher-capacity portable storage

	* Betamax (score: 4)
		* ''reverse obsoleted by:'' VHS
			* ''both obsoleted by:'' DVD
				* ''obsoleted by:'' large hard drives, broadband
					* ''obsoleted by:'' tablets, NetFlix, WiFi
	* CDs (score: 4)
		* ''obsoleted by:'' Pervasive networking, Higher-capacity storage.
			* CDs have their problems, but "bulky"? Compared to what, a diskette? BTW if you did happen to want one for your computer, they've come way down; today's paper shows $40 for a combo CD/DVD drive, $60 for a dual 8x DVD writer (very useful for larger quantities of data than a CDROM can hold). Even DVDs are too small, but nonetheless a cheaper archival/backup solution than swappable hard drives.

			* My hard drive holds the capacity of over 200 CDs with vastly superior peak access speeds, astronomical random access speeds (because you don't need to swap CDs), for HALF the cost of those same 200 CDs and much less than 1/20th the space. Oh, and it's rewritable! And it's got at least 3X the mean lifetime to failure.
			* My broadband connection is infinitely more useful than a CD/DVD drive, and makes hot swappable drives unnecessary. My net connection is my portable medium. A portable medium that obviates Fed''''''Ex charges for guaranteed transcontinental delivery. ''Your portable medium is PayPerView''
			* Anyone serious about backup will use a RAID (120 CND), not a CD burner which they will never EVER use. And especially not a cheap burner which will break down very quickly. (1 or 2 years of light use)
			* ''RAID is not a backup system. RAID guards against hard drive failure, and does nothing to keep your data safe from misbehaving programs or users.''
			* That's right, only a LoggingFileSystem or other versioned filesystem does that. Oops, we don't have any because of Unix and Windows. Nice job there. Ever wonder why nobody does backups? Because nobody wants to burn all those bloody sodding CDs. Which means that far from your contention that CDs provide backup storage, currently nothing provides usable backup storage for most people.
				*Fast forward to 2012, and online backup is easily and cheaply available

	* ElectricCars, such as Henry Ford's first automobile
		* ''obsoleted by:'' The InternalCombustionEngine (dead for 110 years and counting!)
			* ''obsoleted by:'' ElectricCars
			* ''obsoleted by:'' Hybrid vehicles. In railroading, the diesel-electric hybrid locomotive has been dominant for years, except in local passenger railways where electric motors powered by a third rail, trolley wire, or some other transmission system still are quite common.
			* ''obsoleted by:'' ElectricCars

	* Super-8 cinecameras
		* ''obsoleted by:'' video cameras
		* ''obsoleted by:'' digital video cameras
				* ''obsoleted by:'' Super-8 cinecameras for some applications

	* copper telephone wires (score: 2)
		* ''obsoleted by:'' fiber optic telephone cables.
		* ''but looking closer:'' Fiber optic is too expensive for many applications. Until a practical optical switch is invented, photons will always need conversion to electrons to be of any use.

	* That blankety-blank '''MCS-51''' family of microcontrollers (score: 7, but tell that to Cypress)
		* ''obsoleted by:'' Any processor made since 1975. Note that Intel themselves gave up on this thing back in the 1980s, but the Little Micro That Could refused to die. Every silicon kiln on planet Earth has turned these things out at one time or another, and there are still manufacturers who refuse to let the 8051 die a natural death. O how I wish electronics OEMs would join the 21st Century. There have been more MCS-51s put into "smart" electronic devices (like wall thermostats, paper shredders, and lamp dimmers) than all other microprocessors put together. Oy. ''[Note: This may no longer be true; Atmel has been pouring 8-bit AVR parts out like water from a fire hose for a number of years. A''''''TMega devices show up everywhere MCS-51 devices ever did, and a lot more places in addition. Stay tuned.]''

'''Standards'''

	* BadKeyboards: Qwerty-based keyboards (See the treatment in The PsychologyOfEverydayThings about this.)
		* ''obsoleted by:'' DvorakKeyboard and MaltronKeyboard
		* ''but looking closer:'' Dvorak's speediness is a popular myth (see: TheFableOfTheKeys) ''I know it's controversial. Has anyone (other than Dr. Dvorak) actually measured it, rather than slinging opinions around ?''
** Yes, and it's '''not''' controversial in terms of results of neutral studies. Dvorak has been measured to be about 0% to 5% faster in various studies.
** ''but looking closer:'' Dvorak's claims to ergonomics holds true, however.
** Do we have to re-hash this argument every time Dvorak is mentioned? Can't we just point to some wiki page and OnceAndOnlyOnce list all the EmpiricalEvidence (what neutral studies?) on that one page, such as TheFableOfTheKeys?
*** ''obsoleted by:'' stenotype keyboards, which are used by people who must type stuff quickly, as it happens in RealTime -- courtroom reporters and TV closed-caption text.
**** ''obsoleted by:'' BadKeyboards on tablet and phone screens

	* AsciiCode (score: 4)
		* ''attempt-to-obsolete by:'' IBM-EBCDIC (EBCDIC was developed by IBM in reaction to ASCII, '''after''' the ASCII effort began; it was all about vendor lock-in)
		* ''obsoleted by:'' ISO-8859-1, also known as Latin-1 ASCII
			* ''obsoleted by:'' UniCode (ASCII data is valid UtfEight data)
			* ''but looking closer:'' a couple of ISO-8859-1 fonts are built into the HP48 calculators and many other small devices. I doubt that even a single Unicode font would fit in the tiny ROM available on such devices. A single typographer can feel confident that he's produced a "complete" ISO-8859-1 font. I doubt there's any single person that can produce a "complete" Unicode font. -- DavidCary
			* ''but looking again:'' just because you support Unicode doesn't mean you need glyphs for every code point defined by the standard. '''Correct; bogus objection.''' In fact, the first PDA, the AppleNewton, used compressed UTF-16 for text and had at least four built-in fonts. I imagine the zillions of Japanese PDAs make even fuller use of Unicode.
			* Also, fonts and character sets are sharply different issues, yet everyone except Unicode specialists mixes them up. If you mention both in the same breath, you've probably gotten mixed up already. This is the case even if you think you're not confused. For most people, this is the case ESPECIALLY if you think you're not confused. The rest of you know what I'm talking about.

	* Non-IEEE floating point
		* ''obsoleted by:'' IEEE floating point
		* ''but looking closer''. IEEE floating point is good for general-purpose arithmetic, and is nice as a portable FP format. But many in the both the numerical and financial communities have legitimate gripes. It can't store decimal fractions exactly, and it's handling of denormals is a major kludge...
		* Partially obsoleted by BigDecimal implementations, as in JavaLanguage and DotNet.
		* One potential counterexample: http://www.codeproject.com/KB/recipes/SFP.aspx 

	* CapsLockZombieTechnology (score: 8)
		* ''obsoleted by:'' The Control key; Better ways of formatting text

	* ScrollLock Key
		* ''obsoleted by:'' Disuse
		* ''but looking closer:'' It's a handy key to remap. Some programs even use it for its namesake. We're not sure if users take advantage of that.

	* The Imperial system of measurement
		* ''obsoleted by:'' SI (Metric) units.
		* ''but looking closer:'' Imperial system still used in many places, despite obvious deficiencies. In the age of computers, one of the key benefits of SI (use of powers of 10) becomes less and less important. ''And powers of 10 is not necessarily an advantage. Imperial units are based on multiples of 2 and 3 (3 teaspoons in a tablespoon, 2 tablespoons in a ounce, 8 ounces in a cup, etc.), which makes it very easy to do scaling and conversions in your head. If I use 2 tablespoons of coffee per 12 ounces of water, and I want to brew 4 mugs worth, how much water and coffee should I use? Answer: 6 cups of water and a half-cup of coffee.'' Imperial measurements also provide a good level of granularity for hand-made objects eg inches are still used for quilting squares; gallons are a good measure of home-brew etc.
			* I tried to do the math in my head, and had to write it down and use FactorLabelMethod to evaluate the conversion, just to make sure what happened in my head matched reality.  Moreover, I was born, raised, and currently still live in UnitedStates.  Yet, SI system comes ''naturally'' to me.
		* ''but looking again:'' nobody raised on the metric system would believe such a stupid argument. Also the SI system do have binary prefixes nowadays.
		* ''Imperial units are based on multiples of 2 and 3''. Er, and 7 (14 lbs in a stone), 5.5 (!) (yards in a perch, equal 16.5 feet), 11 (22 yards in a chain, but this is 1/80 of a mile, but that still involves a multiple of 5)...  ''(But 5 != 5.5, so that is ''yet another'' factor you have to remember.)''
		* ''but looking closer:'' Imperial units are more natural to human scales than SI units are.  When cooking, it's more natural to think in terms of teaspoons, tablespoons, and cups (where there aren't good "liter" equivalents); in measuring things, inches and feet can be better than centimeters (whereas yards and meters are about the same), and so forth.  At least, that's been the case for me...YMMV.  (And this is probably a part of the reason why Americans have resisted the change...)
*** Base 12 in general seems more natural than base 10 because it divides into 3 and 4 evenly. 10 is a poor choice. 

	* NTSC format television
		* ''obsoleted by:'' PAL format television
			* ''obsoleted by:'' HDTV
				* In many parts of the world, HDTV is a non-issue. Plus, this whole section confuses a bunch of different issues, including encoding format (analog vs digital vs compressed digital), resolution, etc.
			* ''but looking closer:'' NTSC is still used to describe 525 line, 30 frame/second video on DVD, as is PAL for 626 line, 25 frame/second.

	* MyProprietaryClassDiagramNotation
		* ''obsoleted by:'' UnifiedModelingLanguage

	* UnifiedModelingLanguage
		* ''obsoleted by:'' SimpleDesign (sometimes)

	* Morse, TelegrapheDeChappe
		* ''obsoleted by:'' Phone, Fax, V92 (!!!)
		* ''but looking closer:'' My carbon monoxide alarm beeps CO in morse code to distinguish it from smoke alarms, and many phones beep SMS in morse code to herald the arrival of a Short Message Service text.
		* ''but look again:'' Morse is not faster than speech, but it ''is'' faster than instant messaging, and consumes 1/100th the bandwidth of speech.  Thus, telegraphy still has uses in bandwidth constrained environments.
		* ''obsoleted by:'' PSK31, which actually has ''tighter'' bandwidth per bps than MorseCode.
		* ''but looking closer'' Morse, unlike PSK, still wetware-encodable and -decodable; can use almost any detectable binary state change (e.g. car horn, flashlight, blinking eyes). ''If you only need Morse code once in your life, that will be the one time you '''really do need it'''.''

	* Fax
		* ''obsoleted by:'' e-mail
		* ''but looking closer:'' Until DigitalSignature''''''s become accepted, fax is still a great way to rapidly transmit a legally-signed document.

	* V92, ISDN
		* ''obsoleted by:'' DSL, CableModem, WiFi

	* Third class mail (category of mail service in the UnitedStates {now called "standard mail"} used for bulk mailings; it is commonly used for advertisements - aka "junk mail")
		* ''obsoleted by:'' Spam
		* ''but looking closer:'' Junk mail still has a more respectable reputation than does spam. Most of the spam I receive is from pornographers and scam artists; most of the junk snail mail I get is from legitimate businesses. Junk mail has the advantage that the advertiser bears most of the costs.

	* PDAs
		* ''obsoleted by:'' PAD's (PersonalAnalogDevice''''''s)

	* RS232 (score: 6)
		* ''obsoleted by:'' USB
		* ''but looking closer:'' Still used with many non-PC devices, such as network switches, electronic thermometers, etc., where USB is too complex and it's speed is unnecessary.
		* ''but coming back to reality:'' In 2011 the good ol' RS232 port is a complete dinosaur. No modern electronics have been manufactured with this interface for nearly a decade, and if you have something so old that it doesn't have a USB port on it then it's probably too old to interface with the rest of your system anyway.
		* ''the reality underneath:'' The above only goes for peripherals plugged into personal computers, and then for the plug and cable. Virtually every microcontroller made has multiple RS-232 compatible UARTs, and many "USB" devices simply contain an internal USB to RS-232 bridge chip that communicates with the rest of the system via a serial bus.
                * ''obsoleted by:'' CAN Bus. Widely used in Automobiles, Marine Industry and Manufacturing

	* Centronics ("parallel printer port," score: 8)
		* ''obsoleted by:'' USB

	* CMMI Levels 2-5
		* ''obsoleted by:'' CMMI Level 1, which all of the highest quality businesses use.
			* Except the kind folks behind the space shuttle.
		* ''obsoleted by:'' Formal inspection methods such as Fagan.

	* IrDA
		* ''obsoleted by:'' BlueTooth, WiFi, WirelessUSB
		* ''but looking closer:'' If I cover my IrDA port, I can be confident that my machine is not sending or receiving any unwanted communication. But that machine with built-in WiFi - who knows? Some people claim that small NanoTechnology devices are too small for BlueTooth or WiFi, but can receive IrDA just fine.
		* ''but not being a complete Luddite:'' If I want to prevent my Bluetooth or WiFi device from being exposed to security problems then I apply the proper security protocols.

	* <add your favourite zombie technology here>
----
I see a lot of posturing here - I'm not at all certain that digital imaging has obsoleted film yet, and the ''Basic language ethos'' is hardly technology. -- PeteHardie
----
When I first read the title of the page, I understood "Zombie" to mean "technologies which ''should'' be long dead (technologically) but aren't (on the marketplace)". I guess you would find at least ''some'' people who would put Microsoft operating systems there... -- FalkBruegmann

''Yes, you may find some. You will find useless, impotent ranting of all sorts here on the C2...''

"The MS OS is dead. Win 8 was its ninth life."

''As we have discussed, all manner.''
----
''Moved here from Natural''''''Thing''

Anyone here into using "old" technologies? Especially someone using or maintaining SAG's Natural and Adabas. If so, what ya think? Is this fading away in front of all that hitec java, jini, corba, sql and stuff? Or will micro$oft rule the world shortly with all it's proprietary "must-install-to-run-the-latest-things" strategy? Just a thought...

* I vaguely recall an early Natural user's guide - it was copied from manually typed pages, and was truly awful.

* I'm an ExBase fan. There's something elegant and natural about it for ad-hoc data manipulation that just doesn't exist anymore. There's a MouseScriptDisconnect.
----
I was recently at a user group meeting where the director of research and development for a fortune 500 company was telling us that Java is the future, and all other programming languages will go away within the next 10 years. "Wait a minute," I said, "'''Your company''' is still using COBOL 74 for its main applications!" (And they refuse to upgrade to COBOL 85 or COBOL 95, as it would require recompiling their programs, which they claim they can't do. They have the source code; they claim that they can't afford to compile it.) So I'm sure that many familiar old technologies will still be around, for as long as the hardware holds out.

* What was his/her response? (And, if Java is the pinnacle of programming, I'll eat my shorts forward and backward.)

Want to take a trip down memory lane? Visit a HamRadio swap meet. You can get Commodore-64s, Apple-IIs, and lots of other museum pieces. -- JeffGrigg

''Ham operators are pack-rats. I have a circa '68 20 metre rig sitting on my bench, ready to go. Works fine, too, so long as I don't move it!''
----
See: QwertySyndrome, VinylIsDead

CategoryTime, CategoryRant