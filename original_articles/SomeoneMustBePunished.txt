'''Problem:''' A project has failed by some metric--been cancelled, is late or over budget, or fails to meet customer expectations or revenue targets.  The culture is such that FailureIsUnacceptable.

'''Context:''' Senior management has noted the failure; and is demanding something be done about it.  Even if there is no clear-cut person responsible for the failure; a ScapeGoat ''must'' be selected for punishment--if for no other reason than to be an example for the rest of the team--to make it clear that FailureIsUnacceptable.  For a large team, multiple ScapeGoat''''''s may be required--in some cases, entire project teams are selected.

'''Forces:''' 

* A FearCulture

'''Solution:''' Choose a ScapeGoat(s) and punish him/her/them in a visible way--often including termination.  (Think Robert De Niro playing Al Capone in ''The Untouchables'', wielding that baseball bat.  Think Darth Vader killing the Imperial officers' corps, one at a time, in ''The Empire Strikes Back''.  You'll get the idea).  Make it clear throughout the organization that their punishment was due to the project failing; and that the next project team that fails will receive similar consequences.

'''Resulting Context:''' The FearCulture is preserved/enhanced.  Employees will take great pains to make sure they don't fail again.  Senior management is mollified (though if too many failures occur in a department, then middle management of that department may find it's ''their'' turn).   Morale goes into the toilet; those developers who have a choice frequently leave.  (The ones who are left are the ones who have trouble finding jobs elsewhere).  Massive SandBagging occurs in schedule and budget estimates, as nobody is willing to risk failing to meet these targets.  Management congratulates themselves on their "old-school" approach, thinking that the best way to run an organization is to use the stick (and not the carrot) frequently and visibly.

'''Rationale:''' It is frequently believed by some managers that whenever a failure occurs, ThePeopleIsTheProblem.  Failure is never due to problems with processes, bad luck, or other unforeseen circumstances, but because ''people are not doing their job''.  If there's too much work--they aren't working hard enough.  If there's bugs in the code--the programmers are sloppy.  If a key developer gets hit by a truck (TruckNumber) causing a schedule slip--the ProjectManager should have planned for that contingency.  If the product didn't sell well--it obviously wasn't well-designed.  Etc.  As the PeopleAreTheProblem, the way to correct things is to punish the people and make it clear that failure is not allowed.

'''Related Anti-Patterns:'''  This has a lot in common with ScapeGoat in that someone is punished for a project failure (regardless of whether or not they are responsible for that failure).  Key differences though:

* In ScapeGoat, punishment is generally less severe; the purpose is to mollify senior managers who know the project is in trouble, and want to see ''something'' done about it.

* In SomeoneMustBePunished; punishment is severe--the purpose is to threaten and intimidate the workforce.

Another related AntiPattern is TerminationQuota.

'''Examples:'''

* The Roman army practice of ''decimation''.  (If one of the Roman armies was ever defeated in battle; one out of ten survivors, picked at random, was executed, by the remaining 9 survivors).
----
CategoryAntiPattern
