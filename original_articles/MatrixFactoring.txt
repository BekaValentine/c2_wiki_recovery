Matrixes can be factored into nice forms, especially forms like this:
 '''A''' = '''B''' '''C''' '''B'''^(-1).
This is nice, because 
 '''A'''^n = '''B''' '''C'''^n '''B'''^(-1)
Well, this is nice if it's easier to compute '''C'''^n than it is to compute '''A'''^n!  The nicest case is when the matrix has dim('''A''') unique EigenValue''''''s  - in this case you can factor the matrix so that '''C''' has the EigenValue''''''s on the diagonal and zeros everywhere else, and the columns of '''B''' are the EigenVector''''''s for the EigenValue''''''s !

For example,
 [ 0 1 ]
 [ 1 0 ]
Can be factored as
 [ 1 -1 ] [ 1  0 ] [  1/2 1/2 ]
 [ 1  1 ] [ 0 -1 ] [ -1/2 1/2 ]
Cool, huh?

----

''So this is why the EigenValue''''''s correspond to (1 + interest rate).''
       [  p    0   0  ]
  '''C'''  = [  0    q   0  ]
       [  0    0   r  ]
''Look what happens when we take C^n :''

       [ p^n  0   0  ]
 '''C'''^n = [  0  q^n  0  ]
       [  0   0  r^n ]
''The interest just keeps compounding...''

''The same rates of compounding happen within the original matrix, but are harder to tease out.''

NetPresentValue calculations use this feature of EigenValue''''''s.
----

So, for the example on the EigenValue page, we get:
 [ 0.97  0.35 ]      [ 0.795  8.805 ]   [ 1.06025  0       ]      [ 1.2223  1.3789 ]
 [            ] ^n = [              ] * [                  ] ^n * [                ]
 [ 0.08  0.75 ]      [ 0.205 -7.805 ]   [ 0        0.65975 ]      [ 0.0321 -0.1245 ]

          [ 0.97      0.35  ]   
      '''A''' = [                 ] 
          [ 0.08      0.75  ]   

          [ 0.795     8.805 ]   
      '''B''' = [                 ] 
          [ 0.205    -7.805 ]

          [ 1.06025   0       ]   
      '''C''' = [                   ]  
          [ 0         0.65975 ]  

          [ 0.9744    1.09925 ]
 '''B'''^(-1) = [                   ]
          [ 0.0256   -0.09925 ]
'''B'''^(-1) is the MatrixInverse of '''B'''.
----
CategoryMath
