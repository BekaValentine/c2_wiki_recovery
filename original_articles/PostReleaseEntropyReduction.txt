PostReleaseEntropyReduction is LukeHohmann's phrase in BeyondSoftwareArchitecture for something that should (as in, needs to) occur in the rhythm of SoftwareDevelopment.

Basically the idea is that after a release, the team needs to take a couple of weeks to fix all the hacks that went in to make the deadline.

If such a rhythm doesn't exist, if there is never time for this due to immediate pressure to start developing the functionality of the next release, then the codebase may eventually get into the state of InternalQuality that KentBeck describes in ExtremeProgrammingExplained: "Eventually, internal quality problems will catch up with you and make your software prohibitively expensive to maintain, or unable to reach a competitive level of ExternalQuality". -- RandyStafford

''To pre-empt those with the notion that entropy only ever increases: that's for closed systems.  It bears repeating that decreasing the entropy will require energy input in one form or another.''

''The pedantic will note that we are using a metaphor, since the actual entropy of the code is more closely related to its compressibility(?).''

----
See TechnicalDebt


