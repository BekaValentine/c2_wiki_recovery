CommunityPatterns have some notable differences from other types of SoftwarePatterns. Unlike most other information products there is usually little in the way of defined goals or requirements that a community must meet. In fact the community is the goal and the software implementation that supports it is usually subject to multiple constraints and near constant review and evolution.

Whether started as a place for those sharing a particular set of interests to meet and interact or for a more activist purpose; a living community quickly becomes an end unto itself. CommunitiesAreInfiniteGames is one way to look at it.

ChristopherAlexander in the prologue to A PatternLanguage discusses how living communities naturally employ PatternLanguages and how those PatternLanguages are discovered through trial and error, it is hoped that the WikiPage''''''s below will help us distill our CollectiveExperience into recognizable and useful patterns.

----

'''DescriptivePatterns'''

	*CommunityLifeCycle
	*NegativeOne
	*WikiMind
	*ThreadMode
	*FlameFest
	*TrustAndResponsibility
	*AmericanCulturalAssumption
	*WhatsaCommunity
	*VirtualCommunity

'''PrescriptivePatterns'''

	*WikiRefactoring
	*ForgettingOnPurpose
	*CoreContributorFoundation
	
'''ExampleCommunities'''
	
	*WikiWiki
	*SlashDot
	*EverythingTwo
	*UseNet
	
Title Search for Community:
	
	*CommunityLifeCycle
	*CommunityOfPractice
	*CommunityOfTrust
	*LinuxCommunity
	*PatternCommunity
	*SoftwareDevelopmentAsCommunityPoetryWriting
	*VirtualCommunity
	*WhatsaCommunity
	*WorkingLikeaFarrierCommunity
	*XpCommunity

----
CategoryPatternLanguage