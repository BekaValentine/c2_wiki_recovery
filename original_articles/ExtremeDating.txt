Dating in the mode of Extreme Programming.  While possibly never tried (or at least repeated), it is useful to see how similar humans are to machines.

This was refactored so that mostly serious suggestions are normal text, mostly funny ones are italics. ''Just in case any of the geeks couldn't tell.'' See, self-documenting.

DoTheSimplestThingThatCouldPossiblyWork: ''Chocolates.  If that doesn't work, try roses.'' Don't make a complicated plan on how to win their heart - just think of something simple and honest.
* I would try beer first. Certainly cheaper than some chocolates. After a few good ones she may not noticed you have switched her to cheaper wine.

RefactorMercilessly: ''If your date is less than impressed with your appearance or your PC vs Mac jokes, you've obviously done something wrong.  Work to readjust their expectations of a date to something simpler and more reasonable.  If you dare.'' Change your strategy if it's going badly. Change yourself if you can't see how to proceed.

TestDrivenDesign: Once you have made the adjustment, run all the UnitTest''''''s again to make sure where you stand. If something goes wrong in the dating process, do not continue, stop it immediately and work on the issues until they are resolved.

ContinuousIntegration: ''If something goes right, be sure to cement that behavior by presenting her with a gesture of approval.'' If something goes right, be sure to include it in your future plans.

SmallReleases: ''Don't get married on the first date.'' Work things out slowly. ''Consider giving out N month anniversary agreements.'' Remember when you started going out so you can offer some small gesture on 'month anniversaries'.

FortyHourWeek: Too much time spent dating can result in unhealthy practices. Be sure to take a breather every now and then.

OnsiteCustomer: LongDistanceRelationship does not work.

YouArentGonnaNeedIt: Don't worry so much about how you can please your date three months in the future; keeping them happy in the present tense is challenge enough.

PairProgramming: It helps to have more than one person involved.  It works better if both partners work together.

ThereMustBeFood: ''and red wine?''

OnceAndOnlyOnce: Don't continually cut-and-paste the same personality type into your dating program.  One canonical experience should be enough.

----

DoTheSimplestThingThatCouldPossiblyWork: 

''i.e. Go to the least effort possible for your date.  Don't bother showering, shaving, or looking respectable; if you think there's a chance you can get away with looking like a slob, go for it.''  To a more reasonable extent: why go to the trouble of a big fancy five-course meal at a restaurant and a big broadway play, when a rented classic film and a home-cooked meal would do just fine? (Because dates that take place in the home are recipes for disaster, except for established couples, that's why.)

Remember, "simplest" isn't the same as "least amount of effort".

: Cooking your own food is more effort than paying someone else.

----

This sounds like great advice. --

----

Hmm, I can't wait to get developin'

----
See also: ThreeDateProgram
----
Contributors: TorneWuff

------------
I think that a proactive version of RefactorMercilessly is actually the pattern PanDimensionalRenaissanceDifferentiator (from the core web site for Dating Design Patterns, http://www.datingdesignpatterns.com). Then you start from a position of strength.

There's also a great deal to be gained from ContainerManagedDating. 

Though my favorite pattern for the most direct and simplest implementation on the job, is GoToGuy. Depends on who you work with but if there's someone you want to get to know at work outside the core tech departments, it's excellent.
