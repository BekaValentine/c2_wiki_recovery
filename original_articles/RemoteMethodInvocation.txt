See JavaRemoteMethodInvocation.

RemoteMethodInvocation (RMI) is a Java-specific middleware spec that allows client Java programs to invoke server Java objects as if they were local. Since this technique is designed specifically for JavaPlatform, there is not a need to have an InterfaceDefinitionLanguage mapping. Sourced from http://my.execpc.com/~gopalan/java/java_rmi.html


----
Is JAX-RPC a substitute for Java-RMI as at 2005? Or are these complementary?

----
Anyone knows:
	1 Whether there is something equivalent in the MicrosoftDotNet world. Bit simpler than SoapProtocol, but more functional than RemoteProcedureCall (e.g. true OO method invocation, work with subclasses)? 
	1 Is this apply only on the J2EE platform? Or any JavaPlatform?
	1 What is this distributed garbage collection thing and is it not an overkill?

''In dot net, this falls under the umbrella of the "remoting" API.  There are some SOAP implementation plugged into that umbrella, and some other more capable protocols.  Garbage collection happens via leases.  The server will keep an object alive as long as the lease lasts.  Clients can renew their lease before it expires, and/or other server objects can renew it for the client.''

'''Searching for non Java KissWebServices with RPC type capabilities (simpler than SoapProtocol.'''

Thanks Michael. I have forgotten about DotNetRemoting here. But actually I am interested in this because of the search for WebServices alternatives simpler than SoapProtocol, for the DistributedInternetArchitecture and / or DotNet arena that have RemoteProcedureCall capabilities. RestArchitecturalStyle implementations don't have that, or do they? -- dl