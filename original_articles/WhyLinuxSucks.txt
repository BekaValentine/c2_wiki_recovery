Linux networking is limited to 255 interface bc of host-to-route MASK! NO Linux common protocol routes beyond 8 bits!!

''At least you've identified a problem that everyone has to deal with.''

''Oooh, I just had a sarcasm.''

----

Linux sucks because in the year 2013 and "Linux Ready For The Desktop (tm)", you still need to hack together init scripts in order to get a freaking network connection running. Don't believe me? I have a default Debian install here (I think with "Gnome"), and while setting up the first network interface via "System -> Preferences -> Network connections" "kinda" worked, setting up the second network connection did absolutely nothing. I, as a total Linux PRO, looked at ifconfig -a and saw that, well, yeah, you guessed it, the "Preferences" thing did absolutely nothing to eth1, even though I added a second "Wired" network connection and set up everything correctly. It also didn't add a correct default route, nor did it add the nameserver to /etc/resolv.conf. End of story: I hacked everything into /etc/rc.local, including stuff like "echo nameserver 172.20.10.1 >> /etc/resolv.conf" because the idiotic scripts in DEBIAN overwrote my /etc/resolv.conf with WRONG stuff on each reboot, and now I'm set. Well, not quite. I also had to add "mount /mnt/db", because appearently, the mounts from /etc/fstab get executed at the wrong time at boot when the network interface still isn't up. Oh Linux, you're SO ReadyForTheDesktop (tm)...

--Alexander

''Of course, that doesn't happen to everyone -- in fact, it's pretty rare -- and it's good that you '''can''' hack the scripts if needed.  Under Windows(tm), there are no scripts to hack.  When Windows doesn't work -- and it's just as likely as Linux to not work in peculiar circumstances, though usually not the same peculiar circumstances -- you're left completely screwed instead of slightly annoyed.''
----

Linux sucks (I'm typing this into Ubuntu Konqueror, BTW) because of the LastMileProblem.

The systems that route the millions of last miles of copper wire, to each house in the developed world, costs an order of magnitude more than the hubs that generate power or data. The "LastMileProblem" requires municipal trusts and over-regulated industries to optimize the copper while avoiding abuses and corruption.

In software, the "last mile" is tuning and polishing all the drivers, libraries, modules, scripts, plugins, and configurations that unify our wondrous diversity into a seamless user experience.

Linux provides pure ConfigurationHell when it neglects the last mile. It's too easy to write an awesome new module, and it's too hard to get the <Delete> key to work the same in every configuration. Linux requires dictator wannabes, such as RedHat, to take on the LastMileProblem. Until it is solved... What does your Delete key do today?

--PhlIp
----
Linux sucks because it doesn't support CapabilityUserInterface, NewOsFeatures, NoApplication programming, makes CrossToolTypeAndObjectSharing a pain, has a horrible and hacked-together concurrency and security models, because it uses a FileSystem and FileSystem's suck compared to persistent process objects, and so on. LanguagesAreOperatingSystems, and I want my OperatingSystem to be a DistributedProgramming Language (SingleLanguageOperatingSystem). But I still favor Linux over other market OperatingSystem''''''s for its philosophy and the freedom I feel in using it. The few times I've tried to go back to Windows, e.g. to play games, I've felt stifled, like I was stuck in a cage, and it doesn't help that the first thing that happens is a virus checker complaining it is 279 days out of date and Microsoft Update saying there are 95 updates and the system will need to be reset about five times to install them all. (Right now I'm running eeebuntu on Asus EEE PC, hooked for the moment to a 24" monitor at 1920x1080 resolution. And every. hotkey. works. including the little calculator icon, music/track/volume, and that <Delete> key.)
----
Linux sucks because it's an OperatingSystem.  Linux sucks because it's not a cohesive whole, but a dog's breakfast of random utilities assembled by a self-selecting gaggle of greasy geeks spouting code in their mums' basements between bouts of downloading porn.  Of course, that's also its strength.  

* Linux s*cks because it doesn't have a UnifiedDataModel

Linux sucks; the only thing that sucks worse is everything else.  ''ThumbsUp''

By the way, my <Delete> key works just fine, thankyouverymuch.

-- DaveVoorhis

''Could either of you have'' configured ''your Delete keys if your distro happened to screw it up?''

I could.  You can too.  See http://www.faqs.org/docs/Linux-HOWTO/Keyboard-and-Console-HOWTO.html

''For a very close analog in GNU-land, Delete keys generally work on M''''''acOhYesSex, however, it does not when you use iTerm to SSH into a Linux and run IRB. The point is not the Delete key, it's the lack of oversight and autocracy that forces our configurations to work together...''

It's rather unfortunate that Microsoft did not achieve total & utter domination over the computing world.  We'd all be using DOS or Windows 2.0 or something (and it would be illegal to use anything else) but at least it would be consistent.

-- DaveVoorhis

Relevantly, you complain about ''configuration'', but could you ''configure'' your keyboard if a fresh installation of Windows screwed it up? There's a reason computers are shipped with tweaks and drivers from their manufacturers. The main difference configuration side is that the OEMs are doing the tweaking and configuration instead of you. The OEMs who ship Linux do the same. Mac, of course, simply controls the hardware.

''I'm sorry, Dave. I'm afraid I can't do that.'' ...and your argument is a complete RedHerring when applied to Windows or any M$ product. M$ has a decades-long history of how their products work with the PC keyboard and they aren't about to rock that particular boat now. In fact, M$ maintains the behavior of ancient products that have long since disappeared, all because of that legacy. Point to the Linux legacy that has the same history, please. -- MartySchrader

I think the Linux legacy you seek is called "UNIX", which was mature long before Windows was even a gleam in Bill's eye.  The ''dc'' utility, which is still provided on Linux distros, was first available around 1970.

What is a "PC Keyboard"? Are you talking about the 'standard US' 101 or 104-key boards? Go grab a Dvorak keyboard and see how easily you can configure it without external help (hunting down drivers and such) to solve the LastMileProblem. Or a foreign keyboard. Or one with all those extra multi-media hotkeys. Grab yourself a browsing mouse, while you're at it - the forward and back buttons on my wireless mouse currently don't work in Windows because I haven't installed some drivers. Tell me how much ''Microsoft's'' "legacy" helped you out vs. how much seems to be 'extra' configuration from 3rd-party sources such as OEMs (Compaq, HP, etc.), device manufacturers, etc.. And Linux has been around since the Windows 3.1 days, and also does a great job of maintaining support for legacy devices. Linux has trouble handling new devices and those with non-standard or proprietary interfaces, and that last configuration - but those are problems even MicroSoft leaves to the device manufacturers and OEMs. 

The "standard" keyboard for a W''''''inTel box (101, 104, whatever) is one which requires no special drivers to use. In fact, the BIOS of the typical W''''''inTel box will recognize this keyboard and use it for doing pre-OS hardware setup, the same as you'd do for any *NIX installation. Same goes for the run-of-the-mill three button (with scroll wheel) mouse. If you are going to use anything special then you gotta expect to install OEM-supplied drivers. That's what device drivers are for, dude.

By the way, why in the ''hell'' would I want to subject myself to a totally non-standard Dvorak keyboard when next week I may be at a client that uses what everybody else does?

* [Maybe because next week, or the week after, or the week after that you '''won't''' be at a client that uses what everybody else does, and in fact will be spending year after year using the same keyboard to write documents and code? I suspect this may come as a surprise, but there are other people out there, and almost all of them aren't you.  Most of them aren't even remotely like you, and a lot of them do different things from you.]

''And you prove the above point: if you use '''anything''' special, you gotta expect to do some extra configuration. That's what end-users are for, dude. You can't say it's primarily a Linux problem when other OS's have the same problem.''

I wasn't complaining about it, dooode. I was pointing out that in the W''''''inTel world a keyboard is a keyboard is a keyboard unless you want some of the spiffy additional functionality of a Logitech or whatever. In the Linux world I've run across distros that wouldn't even recognize my USB keyboard; I had to use a PS/2! Now, ''that's'' crapola in a can, when the OS can't even see a system hardware resource with which the BIOS has no problem.

And as far as "anything special," well, that's what the OEM has to deal with. If I am embedding a RAID controller into my system then I don't expect the VxWorks driver to act like the Nucleus driver to act like the QNX driver. They are radically different OSes, so the drivers need to be uniquely created for each. Why not Windoze and Linocks?
----
''"In the Linux world I've run across distros that wouldn't even recognize my USB keyboard; I had to use a PS/2!"''

Which distro and version?  I've not run across that with any Linux distros I've used (and I've been using Linux since waaay before there was USB), but I've had that problem with Windows XP during installation.

''Sorry I can't quote exact distros with which I've had this problem. However, I have used every flavor of Windoze since the 1980s (including the embedded versions) and have never had the problem of Windows not seeing the keyboard that the BIOS could see.''

I have used various Linux distros since 1993, and have never had the problem of Linux not seeing the keyboard that the BIOS could see.  I'm not saying it ''couldn't'' happen, or that it ''didn't'' happen, but I doubt it's common.

''There are other issues. For instance: I am currently using two distros: Ubuntu 10 "Lucid Lynx" with GNOME 2.30.0 and Mandriva 2010 Free with GNOME 2.28.0. Both of these display the same default behavior with the US-104 or international or 105 key or similar layouts selected. The default behavior is different from that of Wintel boxes, but that isn't bad by itself. But there is an oddity in the default GNOME keymapping.''

''Under Windows when the N''''''umLock is off the keypad arrow keys can be used just like the dedicated arrow keys. So, holding the Control down makes the cursor jump by word with the left and right arrows. Holding the Shift down causes the cut-and-paste selection highlight to appear on any characters the cursor passes over with the arrow keys. Cntl-shift-arrow gives you highlight by word. This was the standard in Wordstar under MS-DOS back in the 1970s when Microsoft picked it up and made all Windows keypad layouts act the same. Pretty much all the MS-DOS applications made back then operated the same way, too, and the standard was simply carried forward for decades.''

''Enter Linux.''

''Under GNOME the default behavior is to generate a digit instead of the cursor movement if the shift key is held down. I found a nifty little trick under the extended layout menu: ''"Shift with numeric keypad keys works as in MS-Windows"''. My question is this: Since PC applications have been using this behavior for more than 30 years that I know of, and since most Linux installs are on some form of Intel/PC/ISA/PCIx/yada yada box these days, why isn't the default behavior to use the keys as a couple hundred million users have learned how to use them?''

1. Linux isn't Windows.  There's no reason for it to have the same defaults as Windows, especially if its differences are better.  The generate-digit-for-shift difference is definitely better.

2. Until you mentioned it, I never noticed this.  I doubt anyone else did, either.  This is probably the first time I'd pushed the N''''''umLock key in twenty years.

''See, here's a fine example of WhyLinuxSucks. The Linux behavior is "better" because...well, because it's how Linux behaves? That's like saying the Mac is better because it's a Mac. Complete and utter bullshit, folks. Sorry, but there's simply no polite way to express that. I will sign this so that nobody messes with my statement. -- MartySchrader''

You seem to have been so blinded by righteous indignation that you misread what I wrote.  Linux behaviour is better than Windows in this case because it provides a more useful and convenient interaction between the numeric keypad, N''''''umLock key, and the shift key.  I look at the Linux behaviour and think, "cool, I will use that."  The Windows behaviour makes me think, "ugh."  It's nothing to do with being "better" merely because it's Linux.  My point was that Linux has no reason to emulate Windows behaviour.  It has a proud, independent heritage going back to the earliest UNIX systems of the late 60s, and Multics before that, long before Windows was a gleam in Bill's eye.  If anything, you should be castigating Windows for not being more like Linux.

''Yeah. That's why this page is C''''''ategoryRant. The proud, independent heritage you speak of was on ancient terminals like Teletype and VT52 and junk like that. When IBM created the Plain Jane they did the computing world an enormous favor -- they put a de facto hardware standard into place that everybody in the entire world wanted to emulate. Then the applications used editing keystrokes which made sense because of the keyboard layout, and hundreds of millions of people around the world learned to use those keystrokes for editing. Still use them today. Will use them for decades to come.''

''I am still not saying that different is better, merely that sticking one's head in the sand and pretending that a standard didn't already exist isn't realistic. There was no standard for PC keyboards before the PC because, well, there was no PC, and therefore no PC keyboard. But since 1981 we have a PC, a PC keyboard, and an editing keystroke standard that's been in use for almost 30 years. I am suggesting that when Linux was brought into being it should have picked up on an existing standard. Why did it not?''

Note that the "teletype and VT52 and junk like that" -- which would importantly include IBM's 3270 and 5250 terminal devices (and, of course, the System/23 computer) -- were highly influential on the design of the original IBM PC.  You are conflating the notions of "standard" and "somewhat common".  In the early 1980s in certain sectors, the IBM PC was somewhat common but by no means popular enough to be considered a de facto standard.  The UNIX world was (and still is) correct to consider PC development to be at best a parallel stream of platform evolution, irrelevant to its designs and decisions.  As such, when Linux was brought into being it ''did'' pick up on existing standards -- UNIX ones.

I think there is a different issue being discussed here - HowStandardsEmerge.

'''''Hmm.''' Perhaps we are getting a bit off the trail here, but I stand by my assessment of the impact on the small computer market when I refer to the IBM PC as the instant standard of the time. It most certainly was that. I watched the effect the PC and its progeny had on the firms at which I was employed and those of my fellow engineers and consultants. In only four years the IBM PC had completely supplanted all other computers in the sub-$5000 range, and had nearly done the same to those in the $5-10K range. So it is not at all a stretch to say that the standard for personal workstations was already well established by the time Linux came on the scene.''

''And also, let's not forget that Linux was a UNIX port to the Intel desktop box platform in the first place. I mean, really. C'mon, huh? On what other hardware platform was Linux going to be successful? Since Linux was created to use the existing hardware, why the heck not use the existing standards of operation, including keystrokes with which millions of people were already familiar?''

''But we're getting away from the point of this rant: '''''Linux sucks.''''' Let's not lose sight of that.''

'''''Linux Sucks''''' I like the challenge of a good virus and linux just doesn't challenge me like windows. I also love paying for an os every other year even if the version is marked as stable, when it's actually beta. I might switch to a mac because I like tight black tee shirts and telling people how coool I am.

'''And I thought ''LanguagePissingMatch''es were bad.'''

Didja ever have to chase down the IP configuration tapeworm in Linux? I accidentally screwed up my Ubuntu 10 install a couple days ago and spent quite a few hours trying to figure out what the heck was going on. All I wanted to do was ask Linux what its local IP address was. I could have interrogated the router through any machine on the network with a web browser, but I figured Linux had to have something simple like the Windows ipconfig tool.

So I tried ipconfig. No, it said, are you maybe wanting tpconfig? That's part of some package I don't have installed. What about wpconfig? That's part of some wireless package, so I'm not interested. How about ifconfig? Well, maybe. Type in ifconfig --help and let's see what this thing does.

I have no idea what this drivel is that I'm looking at. Lots of "data" with very little info. Somehow I did something with ifconfig that croaked the Ethernet card and wouldn't let it come back up again. Several hours and lots of reboots later, after chasing down every possible command line facility to deal with the Ethernet NIC, I got tired and unplugged power to the little bastard. Plug it back in again and Viola! The NIC lights come back on!

I hate Linux.

''Ubuntu 10?  To find network information like local IP addies, go to System | Administration | Network tools.  To change network settings, go to System | Preferences | Network connections.  Easy.  Linux sucks just as much as every other operating system, but this isn't where it sucks most, or even where it sucks particularly.  Here, it barely sucks a little.  '''You''', however, suck a lot.  A.  Lot.''

Gee, thanks for that AdHominem attack, there, Linux apologist. I did everything you mentioned and it didn't wake up the NIC. The host had to be power cycled to bring it back up. Great OS you got there.

Windoze ain't my favorite package of phunctionality, but it certainly does a lot of things better than Linux from a user's perspective. For instance, if I want to know if a piece of hardware in my box is working okay how do I do that in Linux? In Windows I use the Hardware Manager. I can bring the NIC up or down with mouse clicks and even test it without taking it offline. There's gotta be a way to do that in Linux, but the ifup and ifdown commands weren't doing what I thought they might; reset the hardware. I've never had this problem under Windows. Perhaps MS has a more intimate knowledge of the internal workings of the hardware than the Linuxoids do. Whatever. The net result remains the same for me. 

* Wow --I hate linux because I do not know how it works, and you should too even if you do now how it works!!  ifconfig is the orginal UNIX command, ipconfig is the abasement of it on windows. I mean, really, its ok not to know how something works but to  hate it because its not like windows? Learn Linux or use Windows.

Is it too much to ask that command line facilites at least explain what they do? *NIX is full of badly-written junk that gives you a list of arguments and options to arguments without telling you a single thing about what any of this crud does. Not. One. Word. Is it so hard to add a line of text saying, "Set IP parameter X to Y"?

''man -k IP'' works.  I've tried to set IP in Windows, and if you don't know how, it's as bad.

So, another magical command line facility to explain the other magical command line facility that can't explain itself, eh? '''Hmm.'''

''How should a command line "facility" explain itself? If I type 'ip' then pause, should a paper clip pop up and say "You seem to by trying to set the ip.." Linux has a command that searches documentation of *every other* command on the system (a couple actually, there's also apropos). Whats the Windows equivalent?''

* How command lines "should" be designed in general is an interesting question and perhaps deserves its own topic. I personally prefer feedback such as the number of files or records changed, for one. However, turning off feedback should perhaps also be an option, perhaps on a per-user basis. A single prompt-at-a-time or menu-driven hand-holding "wizard mode" could also be a possibility if one doesn't want to use command-line parameters. Suggesting similarly-spelled commands (perhaps using SoundEx) if one guesses wrong would also be a nice feature. They could even have numbers so one could type in one digit to select it. Example:

  ? ''miff''
  Command NOT FOUND: "miff"
  Suggestions: 1=Remiff, 2=Meff, 3=Mapper, G=guess more, 0=Exit, ?=Help
  ?? __    [2 question marks means we are in a sub-utility]

''Who's going to type 'documentation'? Wouldn't 'help' be more likely for a new user looking for help? Typing help on my Debian 7 install produces the following output:''

 GNU bash, version 4.2.37(1)-release (i486-pc-linux-gnu)
 These shell commands are defined internally.  Type `help' to see this list.
 Type `help name' to find out more about the function `name'.
 Use `info bash' to find out more about the shell in general.
 Use `man -k' or `info' to find out more about commands not in this list.

 A star (*) next to a name means that the command is disabled.

''... along with a list of shell builtins with options in standard ManPage style notation''

{I don't think "documentation" was intended to bring up help; it was an illustration of what should happen if a command is not found.}

* That is indeed the case. It was only meant as an example. I changed the example to avoid such confusion, using "miff" instead of "documentation". However maybe there is a real tool with that name such that future confusion will abound again.

''Still, what generates this text? The shell? A separate process? There's nothing here that's not possible to implement without even touching C. bash has a PROMPT_COMMAND environment variable that gets executed before it displays a prompt. Do a path lookup, if not found, display suggestions. Here are a couple links: http://www.linuxjournal.com/article/3215 http://stackoverflow.com/questions/592620/how-to-check-if-a-program-exists-from-a-bash-script There's no Linux, Inc. that's going to add it as a feature. Maybe WhyLinuxSucks is just that no one has written this tool yet.''

* Part if it is standardization. Even if somebody makes a nice command-line tool, there's no guarantee all the different distributions will include it or make sure the distribution is compatible with it (such as "registering" services to search/include).

** There is a tool called "cnf" on SuSE, although I'm not sure if it is common on other distros, which tells you that a command can't be found and suggests how to install it - it isn't very powerful, and I don't think it does any searching for corrected spellings (or alternative names - what is netcat called on this particular Unix?)

And as far as setting IP constraints under Windows, every version I have used since Win95 (15 years ago, by the way) has had sufficient command line help that I could do what I needed to do without digging out a book. However, that hasn't been necessary for the most part because the GUI included with the OS tools was capable of doing what I needed to do.

I ''still'' hate Linux.

see :
http://linuxmanpages.com/ Unix and Linux are very well documented. If you really want to use Windows I will not stop you. But if you want to learn http://oreilly.com/  (OreillyAndAssociates) publishes books  as do other publishers. It is the case that some people should not use Linux or UNIX and I am perfectly OK with that.  Others can find resources,many free, to help them. They have even been known to ask and get free support from the internet. Others not so much.   -- Goodbye and Good Luck

As for the books, I guess this is how "free" software publishers make their change. They produce some facility that has a totally craprod help mechanism, then sell you a book so you can figure out how to do work with it. Nice scam.

As for the luck: thanks. I'll take your wish for luck, since I will be needing it. The product platform I am currently developing requires Linux because everything else out there would simply cost too much in the quantities we're looking at. High enough that we can't afford to use something off-the-shelf like Windows (at $80/seat) and low enough that we can't justify getting into VxWorks, Nucleus, RTXC, etc (at roughly $8-10K to get development seats and enough licenses for the first year). That leaves Linux. Oh, well. TenSeven.

{Wow. What a sad excuse for a rant. Nothing you've said holds any water; it all boils down to "I don't know how this works and I don't want to make any effort to find out" (well, all the bits that aren't just made up nonsense).}

Yes, a sad, sad excuse for a rant -- except that it's all quite true. Here we are in 2014 and still not able to hook a Linux server up to a Windows network to provide printer serving. What a great OS you got there, acolyte.

{What do you mean "we", paleface? I've been doing that for over 10 years. YOU might not be able to do it, but that's a whole different "xxxSucks" page. As I said, this all piles up to a load of "I don't want to learn anything I didn't know 20 years ago".}

''http://wiki.samba.org/index.php/Samba_as_a_print_server''

''You're welcome.''

"We," as in, "everybody who isn't completely intimately familiar with every tiny aspect of the internals of their particular Linux distro," or, most of the planet. Been screwing around with Samba on a Mint 15 box for two weeks now and can't get the shares to work right nor the printer to show up properly. Oh, well.

And as for the instructions on that Wiki page, well, that's for when I have an additional week to play with it. If this were a Win2008 server then I'd plug the printer in and it would be visible to all the Windoze workstations immediately. Don't know about the Linux boxes. Whatever.

Linux ''still'' sucks, and we're only discussing the details of why.

''Here we are in 2014 and you still have to print? You're doing something wrong.''

In cubicle-land, printing is still a common need. Fading, yes, but still around.
----
CategoryRant

DecemberThirteen