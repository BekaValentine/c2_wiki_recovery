A lot of software is really pointless: it sucks, it crashes, it frustrates you with its endless mindless refusal to do what you want.

''More importantly, for a lot of software there never was, in the first place, a problem which it would solve, nor a need it would fulfill.''

The bright side of this, of course, is that if you don't like it you can change it (if it's open source) or just write something better.

Being a rather "sharp" programmer, I make sure all the software I develop has a "point". -- EdPoor

''I completely agree. I don't know a single person who uses software for anything, ever.''

Do your taxes with pencil, paper, and a 30-pound mechanical calculator and then let us know how you feel.
----
''SoftwareIsReallyPointless; most of the time it doesn't work, nor does it solve people's problems--it just creates more of its own.'' -- SunirShah, being a NegativeOne

Used to be from EntropicLawOfComplexity but now it's lost its context. It wasn't as biting as it sounds. It was more of a depressing realization that most software is uninspiring and that I'm in this game for the theory of computing, not software engineering. However, see SoftwareMasterpiece for some hope.

This page is overly cynical. Take it lightly. Feel free to be cynical yourself, just so we can sink some of the negative energy off the rest of Wiki.

Uhh, I hope none of our collective clients are reading this.
----
Cars run better. ''On occasion.'' Pacemakers work. ''Thank God.'' Visa cards work. ''Most of the time. Ever been a cashier?'' Your bank pays interest. ''Which means they threw more people at it to keep it running because more customers would lynch them if they didn't get their money than if they didn't get charged interest for a month or three.'' ATMs deliver cash wherever you are. ''Provided there isn't a network failure; yes I've seen these.'' You can order jeans on the web and they show up at your house. ''If you've got the right browser and the web server doesn't experience a freak failure.'' The FedEx web site knows where they are. ''Most of the time.'' Amazon.com sends you books when you click them. ''But they have to patent it first; see AmazonAssociate...'' Planes mostly fly. ''Heh.'' Furnaces turn down the heat when you're gone. ''If you remember to program them.'' Telephones work. ''Ever work in telecommunications?''

The wiki.  ''The wiki works, I'll give you that.  GodBlessWiki''

These are a few of my favorite pointless things.  --RonJeffries

''but that doesn't fit the tune any more --VonMoreTrap''
----
Sheesh...  We decided back in 1998 (CE) that SoftwareIsEvil.  Not pointless.  Evil.  (There's a difference.)
----
After attempting response after response, I've finally realized why I can't express my deep dissatisfication with software. ''Wiki is software.'' Worse, it's ''software about software.'' It's just not the same as talking over beer. But hell, if I was drinking beer right now, I wouldn't care about software or GoedelsIncompletenessTheorem. LifesJustTooShort. -- SunirShah

''Maybe my friends and I need professional help, but I have discussed the GIT over beer; software, too. Like QuantumMechanics, GIT gets easier as you drink more.'' --KeithBraithwaite

I'm with you - I think GIT ''belongs'' over a beer, at least most of the time. --AlistairCockburn

''If you don't enjoy software, open a shop and sell shells in Key West or something. LifesJustTooShort to do something you don't enjoy. I enjoy software. Pointless my bare bummie, what's the point of anything but to exercise your skills? Hunt, gather, or get out of the way, that's my motto. --RonJeffries''

Well, I still need revenue to do other things I enjoy. Your implied assumption is that I write software because I enjoy building accounting software. I'm in Theory of Computing (vs. say Software Engineering) for a reason. Much to do with GIT, in fact. However, this ''pointless'' kvetching aside, you may have noticed that I've taken a deep interest in methodologies. Perhaps this is because, since my motto is "I'm the only one responsible for making my life happen," I feel that I should change the stupid methods that I'm forced to endure. Of course, that won't fix the existing software that I have to deal with, like stupid crashing, mouse-exploding Linux. I aim for the day when I don't have to think, "well, I'll just rewrite that application so it works." (whoops, that ''is'' the point of Linux, isn't it?) --ss

Yes, part of the point of Linux is a reaction to the insane and dysfunctional state of most of the software industry today.  

Isn't software pointless in the same way that life is pointless, i.e. you feel some pain, some joy, some other things and then you die? -- MartinPool

Life isn't pointless. Life is a struggle to build and grow and become better and happier. Software is a struggle to avoid sucking. There is no goal of goodness, just a goal of not sucking enough that someone will buy your crufty piece of junk. Or, more likely, invest in your newly IPOed vapourshares. Just look at Apple vs. Microsoft vs Amazon. --ss

I don't think all software is "a struggle to avoid sucking."  Maybe a large part of it is, but there are some projects that are about actually doing something useful for customers.  And a lot of the "suck" is relative.  Some developers aren't happy unless they're using all of the fancy, latest, bleeding-edge tools on a project, where other developers see every project as an opportunity to find better ways of accessing flat-files.  Somewhere in between is the happy medium of using exactly the right tool at exactly the right time, and delivering something useful in a reasonable amount of time.  No suck there, except for the developer who didn't get to use his shiny new "toys." --EvanCofsky

EmacsHasQwan
----
''Wiki is software.'' Worse, it's ''software about software.''

So....Wiki about Wiki would be worse still?

''Depends how clever you are. Hopefully, I'm even less clever than I think I am. -- SunirShah (cf. MeatballWiki to understand.)''

Speaking of MeatballWiki, as you know by now that's my main attempt to make software that isn't pointless. But still, there's some self-congratulatory BS involved with building online communities. As if those are the real social issues of the world and I'm really doing something useful. But it's fun, so that's what matters right now. --ss
----
More updates. Well, MeatballWiki is growing up and I think it's doing pretty well for itself in the ''pointful'' front. I'm also continuing my management training, as well as learning about sociology, psychology, cognetics, ergnomics, philosophy, etc. My new job, which is pretty cool, seems to put me exactly where I wanted to be. It certainly involves mapping technology onto people's lives and needs. Now, I just have to vanquish Java and I'd be happy. --ss

''Vanquish Java in favor of what? VisualBasic?!?!. Hopefully not. What is your alternative to Java that is better?''

Assembler with Macros. 

ChefLanguage.

CommonLisp.

''ForthLanguage.''

''EiffelLanguage.''
----
I think more people would see the point in software if it actually applied to real life:

*if you could program your oven to turn on at certain times with your desktop.. 
*if you could reprogram your VCR to actually have settings that you want control of, and reprogram the access menu so it's easier to navigate
*if you could reprogram your breadmaker to come on 5 minutes longer rather than the built in hardware setting, 
*if you could program your lights outside to come on so you don't have to turn them on (actually you could do that with home automation, but everyone seems to just buy a hardware based timer solution), 
*if you could program your watch on your wrist to have the timer in front of the chronograph, since you used the timer more.. 
*if you could program the car to get mileage rather than power, when going on a road trip..(as opposed to buying some hardware based eprom chip, let alone if it's even available on your closed source car model) 

''(HomeAutomation? DeviceAutomation?)''

All these above would apply to your real life objects that you use every day. Too much time is spent on virtual subjects in programming like buzzword technologies, programs that run virtual companies like banks, accounting firms, etc. You don't get to see the real direct affect that the software has on a real life object, so you go insanely virtually crazy. 
--------
Re: "it sucks, it crashes, it frustrates..."

Users (the marketplace) have repeatedly indicted that overall they '''don't want to pay''' more for better software. It takes time and money to make good software, but consumers don't seem to want a price that reflects that. See WorseIsBetter and BugFreeDoesntSell.
----
This page could be seen as an example of why SpecializationIsForInsects.
----
See: MeetTheUsers, LifeIsReallyPointless

CategoryRant