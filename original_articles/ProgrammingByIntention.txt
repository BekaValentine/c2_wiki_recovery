I've seen this mentioned a few times, but don't fully understand it yet. Can somebody give a few examples?

See IntentionalProgramming

''Actually this seems to be something different. I'm referring to what's going on from the page: '' http://www.xprogramming.com/xpmag/acsCodeManager.htm [BrokenLink]

"Programming by Intention goes a step further. When we program by intention, we reflect on what we intend to do, and we write the simple method first. If we know that we're going to create the array of strings by first creating an ArrayList and then copying it into an array of Strings, we say so. We write the short version of the method first, then we write the two sub-methods.

There are a number of advantages to proceeding this way. First, we don't have to remember so much. As soon as we know what we intend to do, we write it down. Then we just refine it until the code is there. Second, the code comes out well-factored without as much refactoring. We get better code, and it takes less time!"

----

''Is there any difference between what RonJeffries calls ProgrammingByIntention, vs. TopDownProgramming ? -- DavidCary''


----
See
TestFirstProgramming
----
CategoryContinuation

