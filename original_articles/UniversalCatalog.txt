A universal catalog is a system embodying a ''few-to-many'' publication model aimed at disseminating ''metadata'' and ''location'' information for ''static content''.

What that means is that if you're looking for some, possibly unspecified, static object (e.g., a novel, movie, music, software) then you'll be able to find information ''about'' that object in a universal catalog, using a combination of browsing and searching. In addition, your client might find a ''repository'' for that object. If it does, it will then attempt to retrieve it automatically, and it shouldn't matter a whit whether that repository is a web site, bittorrent peer, or Usenet over carrier pigeon.

This is superficially similar to IMDB, Amazon, library card catalogs, and AudioGalaxy. However, to be worthy of the name, a ''universal'' catalog must also adhere to the following '''principles''':

* Universality and Openness, unlike the above services.
* Unity of Content, unlike Usenet, IRC, etc.
* Freedom of Publication, unlike Wiki.
* No central point of control/failure, whether physical (storage) or legal (company), unlike Wiki.
* Resilience against attack and sloth, unlike web novel archives.
* Accessibility and Usability, unlike libraries.

To accomplish the above, a universal catalog must be massively distributed, ObjectOriented, versioned both inside and out, fault-tolerant, completely automated, searchable, easy to use, have bidirectional references, and a next-gen interface.

Universal catalogs were conceived and designed by RichardKulisz. An implementation called Objects is now currently being implemented, also by RK, both for its own sake and as a stepping stone in a comprehensive plan to remake the entire computing experience from the top down. The long-term goals for Objects itself include the destruction of Hollywood and the shrink-wrap software industries by making seamless distribution completely effortless.

----

Architecture

* 3G UI, a DirectManipulation framework (but will use a shit UI to begin with).
* book, author, category, keyword, content, and search objects (will have a fixed ontology for now).
* log; reverse maps; repository index; content; request stack.
* log, maps, index and content distribution (FreeNet model limited to groups); log writing proposals, and arbitrations (piggy-backed over Usenet); groups management (group memberships, groups list, membership lists, export lists).

----
See UnversalCatalogTalk
----
CategorySoftwarePolitics CategoryProject