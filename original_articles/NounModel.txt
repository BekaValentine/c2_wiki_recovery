The structure, relationships, and attributes of nouns or entities. 

Databases tend to focus on this. A Schema could perhaps be
considered a NounModel, except that certain behavioral issues, such as triggers and validation, are sometimes included under the umbrella of NounModel.

''The attributes of nouns?! Is this expression used for real, or is this just kid speak for EntityModel?''

''{Is it ambiguous, covered by another term, or just silly sounding to you?}'' 

''Nouns are just a type of words, they have no ER-type relationships or attributes. Entities do. It's also silly-sounding.''

Somebody read an inept OO tutorial that recommended a BigDesignUpFront session should consist of a "hunt for nouns" in the requirements that could represent OO classes.

Even though this has nothing to do with modern ObjectOrientedProgramming, someone has then latched onto it as if canon.

''Some seasoned OO fans still agree with a noun-centric way of organizing. I don't know if they are a minority or not, though. Besides, if a class is not based on a noun nor wraps state, how does it differ from a procedural module or subroutine?''

I'm gonna type a word without searching for it first, and see if it turns into a clicker:

MethodObject

There. I'l bet it doesn't have a ? on it.

--------------
See TableOrientedProgramming, SeparationOfDataAndCode