When everything is a priority in fact nothing is priority... don't you hate it when you boss tells you: Task A is a prority, but Task B is also a priority and Task C the most important thing you must finish ASAP?

Why bosses do not realize that EverythingIsaPriorityEqualsNothingIsaPriority ? 
----
The highest priority is implementing vastly expensive and complicated project management software that allows them to easily set priorities for everything and communicate them to you, so that you can get your tasks back on track.  It gives a full range of priorities to choose from: minimal, low, medium, high, critical, urgent.  Yet inevitably you end up with either 98% of all tasks set to 'Urgent' or 'Critical' and 2% set to 'High'...or all tasks set to 'Medium'.
----
"There will be priorities." is what I say.

Basic time management practice says that you must work on your Priority #1 task until it's done, then move on to Priority #2.
(...which, among the remaining tasks to be done is now Priority #1.)

Basic time management practice also says that the converse is true:
Whatever you work on first is Priority #1.
...even if you don't want it to be.

So, when they set some number of tasks to all be "TOP PRIORITY!!!", then I select which one I think is most valuable to the business and make it the one and only Priority #1 task ... by working on it.
And by not working on the other tasks until my Priority #1 task is done.

There:  There will be priorities.
-- JeffGrigg

''Yes, but... what do you do if, when you are in the middle of task 1, you boss calls you and says: You should be working on task 2, because I am going to have a meeting/demo about it in some short and unexpected period of time? and he keeps playing this game all the time, always asking you to change in less time than the one you need to finish any of the top priority tasks''

I've never really had that problem.  If the boss tells me to work on X, then I do.  And I let them know that by working on X now, I am stopping work on everything else, until X is done.  Now maybe some bosses are really dysfunctional.  But realize that for this kind of boss to thrash me, they have to put in the time and effort to do so.  I won't thrash myself; they'll have to come to me several times a day and change my direction.  There will be no denying that they are doing this to me; it would be obvious.
----
I find it effective to select next task 70% of the time Priority 1, 20% Priority 2, 10% Priority 3.
Reason: low-priority tasks left untended for months create terrible consequences over time even
though they may never be able to get high priority.

If you think this odd, consider that nice(1) works in a similar fashion.
----
''(I've also been known to pull lower priority items closely related to the #1 priority.  When working on legacy code, it's more effective to make several changes at once than to delay some until later.)''

Agreed; sometimes it's more efficient to '''bundle''' certain related tasks, and simple request lists don't take that into consideration.
----
See: CountTheHands

Contrast: QualityFunctionDeployment

CategoryAntiPattern