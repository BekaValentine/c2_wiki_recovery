A FreeSoftware GPLed R4RS SchemeLanguage environment for PalmOs.

http://www.lispme.de/lispme/

It has a few limitations, such as:
* The numeric tower isn't fully implemented (missing rationals)
* eval only accepts one argument, so you can't pass it an environment
* non-hygienic macros
* macros do not allow top level definitions.  ''i.e.'' (macro (foo args) (`(define (bar) ....))) is invalid.
* only "macro" and "define" are allowed at the top level of a source program
* no native error/exception handling.

Despite these limitations, LispMe is still good to work with.
* You have a pocket REPL to play with.  Learn Scheme on the bus! On the toilet! In a long queue at the bar!
* LispMe makes a great calculator.
* With Rsrc Edit (A PalmOs based resource editor for making gui's), you can make your own simple palm applications in hours, or less.
* Use PluckerSoftware, get yourself a copy of StructureAndInterpretationOfComputerPrograms and away you go.  Same goes with HowToDesignPrograms.  Hours of learning fun!
* Great for fleshing out algorithms  

----
It would be nice to have a couple tests to show common uses such as memo read/write, pen events, graphics, controls, ''etc''. The LispMe page has examples but these are a bit verbose. I'm thinking something built on the LispMeObjects (for example (class 'file ...)) and posted here.

''I am slowly but surely working on a CellularAutomata program, and I will eventually have it draw the CA on screen.  Once I have that finished, I'd be willing to post the code here.  A set of LispMeObjects that talks to memopad, graphics, and even a Graphical toolkit would really be the Cats Buttocks. What do you say we make it go?  -- JonathanArkell

''LFC?''

''Actually, the more I use LispMe, the more I think that trying to build some kind of L''''''ispmeFoundationClasses would be like putting legs on a snake. The built-ins seem quite useable and elegant.  I guess we will see how that changes after 6 months however. ;)'' -- ja
----
Is LispMe ready for prime time?  Would you bet the company on it?
----
see also LispMeUnit LispMeObjects LispMeAspects LispMeLanguageElements
----
CategoryScheme CategoryHandheld
