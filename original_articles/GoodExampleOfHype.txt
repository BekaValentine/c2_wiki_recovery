The only good thing about hype is it put the thing in everywhere.

'''XML (ExtensibleMarkupLanguage) Hype'''

I think most people like XML at first because of WWW's HTML Hype. It was claimed to be very human-readable and writable. Yet if you compare it to INI/YAML/SEXP/ODGL, all others are just easier to read/write/parse. (Actually there is no need at all to account for how easy it is to parse a format as long as you are not the one writing a parser).
* ''Not strictly true, as this will affect the speed at which the parser could operate, which might be of interest for some time-critical things.''
** From search in Google and what I have heard so far, an XML parser library's size is the biggest of the four and also consumes a lot of memory. What makes you think that parsing "<foo>text</foo>" can be done faster than "(foo "text")"; just count the characters, and XML can't be extracted with RegularExpression''''''s.

The dream of being able to have unrelated applications automatically talk to each other through XML is still a dream. Those applications still can only talk via the same XML schema, which is no different a constraint than using the same XXX protocol.

But the good thing about it is that now XML is everywhere. Most software products now have a way to input/output XML data. Whether or not the XML-ish format can be immediately fed into other programs or not (which it usually can't) is not the point. At least you can do XSLT on it. XML is becoming a big ugly glue data format. But it was good for that purpose.

'''Java Hype'''

Java was pushed by SunMicrosystems. They released the free SDK and a full-blown GUI/Network/Database library. For the first time all those things have been standardized.  Sure the language itself was a hype, it was not much more than CeePlusPlus plus GarbageCollection minus PointerArithmetic. But the hype of Java promotes an ArmyOfProgrammers. You can see how many Java OpenSource projects have grown. JavaLanguage is at least easier to learn than C++. Because of the common knowledge in the GUI/Network/Database library, newbies can more readily find help. Lots of OpenSource projects are Java because of its hype. -- PisinBootvong

''You seem to be implying that the good thing about hype is that it can produce de-facto standards that are slightly better than the de-facto standards it replaces. Without so much hype, maybe a truly meritorious language will more likely emerge to replace the big guns.''

Without hype things move slowly. Hype wastes a lot of creative effort, but a small portion results in real progress. Hype is tangible merits grown out of proportion. Without hype there is just not enough energy and focus. -- AnonymousDonor

'''WirelessDevicesEnterpriseComputing Hype'''

WebServices (and DotNetCompactFramework and JavaMicroEdition) are supposed to be the enabling technologies for realizing the ultimate SupplyChainManagement benefits. Neither hardware nor software is there yet, but surely costs are coming down quickly.

----
'''Hypes that were harmful'''

YtwoKaboom and a whole heap of now-expired wiki pages on that subject.

----
See also: NextBigThing