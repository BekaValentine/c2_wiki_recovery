Boredom is a smell that you understand the problem well enough to automate a solution.

Recurring examples of this smell:
	* Programmers who complain about how boring HTML work is. Ever consider RefactoringHtml? Eventually, you'll be able to move past rote layout issues and on to interesting business problems.
	* UnitTest''''''s. If your tests are boring to write, it's probably because you're testing the same things over and over.
	* You are adding the same dozen entry fields to ten different forms.
	* You are creating several new classes by copying existing classes and then using your editor's search-and-replace feature to adapt them.
	* ...?
----
If you take this advice the wrong way, you'll end up GoldPlating, which is bad in different ways.
----
''Moved from M''''''akeTheGameMoreInteresting''

In the spirit of http://www.greencheese.us/ExpandToContract [broken link]. In Go, but also in many other games, it's good to play in ways that lead to situations you've never seen before. You learn a lot, and you have more fun this way.

----
See also: AutomateBoredom, CodeSmell''''''s, LeaveWhenBored (meeting advice), contrast with comments in GoldPlating.