Not unobviously, an attempt to save the baby of BigDesignUpFront while throwing out the bathwater.

From OptimisticProgrammingSkunkworks - day 20030108: 

''BigDesignOutBack is sort of a shacking up of XP and architecture. Impossible, you say. And you're right. The key is that the architectural model is not implemented -it's a pure Platonic form. Implementation proceeds according to strict XP principles.''

''Into the BigDesignOutBack go all the good old noun/verb entity/relation business model things we would be building in a WaterFall methodology, e.g., in the RUP UseCase analysis process. It evolves with every new UserStory. We get to play with all the cute UML diagrams and whatever without fear of a RealitySmackDown.''

''There are two uses for BigDesignOutBack:''

	* ''comparison to the evolving structure of the implemented apps/system''
	* ''a basis for predicting (and even suggesting) new UserStories.''
----
Can be seen as an elaboration of the ''residue of the game'' and ''intermediate products'' as described in SoftwareDevelopmentAsaCooperativeGame.

[More to come -- TomRossen]