A YesNoQuestion presumes that the person you're talking to has really listened to and understood the question. I know of at least one very diverse workplace (not here) where English is second language for most of the technical folks. Asking a YesNoQuestion may get an answer to the wrong question; asking for something like ActiveListening clarifies that both sides are agreeing to the same thing. (YesNoQuestion clarifies that both sides agree on the answer, which is both a strength and a weakness.)
-----
Sometimes people appear to be in agreement, but they are only pretending they are in agreement. There are situations where I know people disagree, but are afraid to say so because they are in an unequal relation (hierarchical, apprentice-master, local-central administration)...

----
I've seen this happen often:  People can get so caught up in explaining their own view of the problem that they don't listen to anybody else's explanation. If Fred-across-the-table is nodding, it is assumed that he must agree with me, even if his last input was a direct contradiction of what I'm now saying.  
-----
This sort of problem usually happens when people are speaking in speeches rather than sentences; if they were being terse, the contradictions would be apparent.

To create a phony example:

The schedule is being discussed.  Testing gives a speech about how understaffed they are, development never gives them code on time, and they have serious concerns about the current schedule.   Development gives a speech about how robust the code is, and the internal test harnesses are working fine, and they should have the code ready to test by the end of the week.  Testing nods, because they like the idea of getting the code at the end of the week.  Development thinks testing are nodding because they think the code is robust and doesn't need much testing.

The sort of question that often helps resolve this problem is "So, if we slip the deliverable a week, will Testing have enough time to be confident the product is shippable?"

Usually, Development will say "Yes", Testing will say "No", and then the conflict is out in the open.

--BetsyHanesPerry 

----

I suppose you could refer to this type of question as a PredicateFunction.

--AaronRobson

----
CategoryDialogue