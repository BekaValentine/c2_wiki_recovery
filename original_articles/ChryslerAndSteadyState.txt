One suggestion I venture to make is that C3 went into steady state, as defined in ImpactModelling, soon after KentBeck and RonJeffries' arrival. This was a great achievement in six weeks. In other kinds of project though - front office trading room systems and internet product development for example - one can have a harder time getting to steady state, for the positive reason that the business value side is richer and more unpredictable. -- RichardDrake

''Anyone done both? Everything looks simple when you've never done it. Getting into steady state is probably more a matter of choice than anything about the domain. -- RonJeffries''

----

I'd say that yes, Objective has been involved in both kinds of project using EvolutionaryDelivery. Really honest case studies are difficult though, for reasons of commercial sensitivity as well as personal embarrassment! You and Wiki have done a great service in opening up so much of C3.

I didn't say it was simple to get into steady state and succeed with C3 by the way. I don't buy this, I never have. 18 months of non delivery prior to the adoption (and invention) of XP would suggest otherwise.

I am saying that in some projects the SuccessStatement's (objectives) are better understood and more bounded than in others and I assume that C3, being a Y2K replacement system, was the better understood end of the spectrum. Such projects are often ''more'' difficult to succeed in, in our experience, because you have less room to manoeuver on scope when another variable goes AWOL.

I fully agree that getting to steady state has a great deal to do with choice, determination and the belief that it ''can'' be done.

On the other hand I was part of a team of five working in a fund manager running an innovative equity hedge fund at the time of the Russian/Long Term Capital hedge fund crisis in autumn 1998. All the SuccessStatement's for the project changed dramatically in a few days. The key question was: could the software cope?

I don't want to talk about it. -- rd