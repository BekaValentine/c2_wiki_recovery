''Viewing Applications in a place with an interface which does not alter Application or Data'' ThinkingOutLoud.DonaldNoyes.20110922
----
*** http://fenfire.org/manuscripts/2004/hyperstructure
* ''Instead of forcing the user to think in applications, such a system lends itself to be structured around the user's tasks.''
* ''Nelson uses the term "Applitude" for such a ZoneOfFunctionality.''
---'''not separate applications -''applitudes'' '''
*** zones of functionality not walled off (as separate applications), but resulting from certain operations and views taken together 
*** activities you might want to do by themselves, ignoring the rest of the system 
*** activities that are easier to explain by themselves, even though they are deeply woven into the system. 
---'''what applitudes do'''
* the functions of 
** word processor 
** hypertext editor 
** spreadsheet 
** database 
** Macromind Director 
** and others which will become clear. 
*** http://www.xanadu.net/zigzag/fw99/ZXdesign.html
---'''An Applitude is not "walled off" from the rest of the system'''
* when information from a different Applitude is needed, it is always available.''
----
An idea I have been toying around with is to mount a filesystem which interprets files and provides structure so that content is viewed as if it resided in sub folders

The simplest case of displaying archives (ZIPs) as their content is often already simulated by file browsers

---'''But my idea is to also'''
* expand documents into folders for chapters, pages, paragraphs 
* possibly providing sym-links for cross refs
* a folder containing all embedded images
* provide sub folders for old versions (or use git for this)
** I seem to remember that there is at least one CMS which does something like this.
* expand spreadsheets into sheets (and rows and colums)
* expand code artifacts into folders for classes and methods
This way you can use your normal tools (file explorers, CLI, backup, RCS) on this structure.
This would avoid reimplementing in each application
* versioning
* navigation
* merging
* backup
* copy/paste, structured modification

----
Examples:
* most File Explorers
** right click opens a context menu with options relevant to the current file (usually choosing one application)
** Windows (c) displays folders in a way suitable to their main content
*** music folders get columns with play time, artist
*** video folders show preview
* modern IDEs
** the tree view for the "files" often goes deep into the structure of the coding artifacts
* PaperPort is an application which allows the viewing (and modification) of a file found in one of the PaperPort Folders.
** If the file is a .jpg, it will be viewed by the default image viewer or application
** If the file is a .pdf, it will be viewed using the Pdf Viewer
* There are other applications which perform in a similar manner
** such as Artifactories

----
CategoryInterface