BucketThink is a potential OrganizationalAntiPattern / ManagementAntiPattern that I have observed, in which user(s) or manager(s) give instructions to software developers in terms of handy categories, often called "buckets." I am posting this page to see if anyone else has observed anything similar.

More formally, the non-developer(s) wish to frame their discussions with (or instructions to) the developer(s) in terms of categories they draw up based on easily identifiable data points, e.g. "all of the items listed on this screen should require routed approval to purchase" or "each of these accounts should have their access to funds restricted." 

This sort of statement can provide valuable feedback, especially when it is given during an online exploration of an application's screens or reports. Problems arise when such ad hoc pronouncements are allowed to substitute for other necessary (and typically more formal) communications. Typically there is an ImpedanceMismatch between the Relational tools used by the developers and the NaturalLanguage used by the non-developers. Or, the non-developers will simply assign a level of significance to their "buckets" which is not compatible with their informality, incompleteness, etc.

'''Is this an antipattern, or just the state of the world?  The act of programming is resolving the ImpedanceMismatch between the non-developer's requests and the relational (or other software) tools.  When there is no ImpedanceMismatch, that's just users using the computer, and no more help is required from the programmers.  If this is AntiPattern, what is the correct pattern?'''

CategoryAntiPattern