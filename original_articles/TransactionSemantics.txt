On the page LazyEvaluationAndTransactionSemantics is this:

''Transactions provide a way to define and freeze relevant state and to clearly delineate the lifespan of LazyObjects (objects that implement CallByNeedSemantics). TransactionSemantics can be implemented either optimistically (state is changed continually throughout the transaction and rollback means reversing the state changes) or conservatively (changes are accumulated off-line and only applied to the live state on a commit). If TransactionSemantics are implemented conservatively then all objects that either implement or rely on CallByNeedSemantics will be protected against unwanted state changes for the duration of the transaction. Once the transaction completes all objects that implement CallByNeedSemantics can be discarded.''

What does it mean by TransactionSemantics, which has remained until now a dangling link. -- JohnFletcher
----
I have found this link to a paper: http://www.openlinksw.com/weblog/oerling/?id=1691 '''Transaction Semantics in RDF and Relational Models'''
----

