'''LessonsFromFailure need to be LessonsLearned.'''

It is easy to play the BlameGame, and the OrganizationCulture may compel you to do it. You start to BlameTheManager (ProjectManager), BlameTheTool, and early in life you learned never to BlameYourselfFirst.

''If there exists a BlameCulture then BlameAvoidance will be the DominantGame. That, in my opinion, is the reason why RefactoringGovernment is so difficult the world over. We the voters takes next-to-free services for granted.''

* '''We have to believe that a BetterGame than a ConGame is possible. '''
* That is the vision (my opinion) needed in TheHeartOfChange, for lots of institutions that we value.

So we need to learn (not just be informed) the LessonsFromFailure.

Selected Pages on Failure on WardsWiki:
*LargeScaleEqualsFailure
*NewTechnologyHasFailed
*BigPublicFailure
*AnUnacceptableWayOfFailing
*InexperienceGeneratesFailure
*LoserManagerMakesProjectFail (?BlameGame)
*MakeFailureImpossible
*IsEarlierCancellationFailure
*DefinitionOfProjectFailure
*SmallFailuresForLargeProblems

----
'''WhyMyCompanyFailed in IT projects'''

From ''Why Software Fails '' at http://www.spectrum.ieee.org/sep05/1685 :

* ''Megasoftware projects, once rare, are now much more common, as smaller IT operations are joined into "systems of systems." ''
* ''The trick of integration has stymied many an IT developer, to the point where academic researchers increasingly believe that computer science itself may need to be rethought in light of these massively complex systems.''
** That is not my interpretation of the above article.  Where does the article indicate that academic researchers  increasingly believe computer science itself needs to be rethought?

Among the most common factors: 

* Unrealistic or unarticulated project goals
* Inaccurate estimates of needed resources
* Badly defined system requirements
* Poor reporting of the project's status
* Unmanaged risks
* Poor communication among customers, developers, and users
* Use of immature technology
* Inability to handle the project's complexity
* Sloppy development practices
* Poor project management
* Stakeholder politics
* Commercial pressures

----
'''Resources'''

''Who's to blame for IT failures?'' http://comment.silicon.com/0,39024711,39126191,00.htm

''Failing to learn and Learning to Fail (intelligently)'' . 2004 paper at http://www.hbs.edu/research/facpubs/workingpapers/papers2/0304/04-053.pdf
* The paper suggests, via examples, there is much to be gained to overcome SocialDynamics and other conditions that inhibit a proper "failure analysis". The paper also mentioned the need for going deeper than "superficial explanations" sometimes being offered during such analyses.
* a shorter version can be seen at http://hbswk.hbs.edu/pubitem.jhtml?id=4959&t=organizations

----
''...academic researchers increasingly believe that computer science itself may need to be rethought in light of these massively complex systems''

In other news, researchers are finding that hammers are not effective at fitting square pegs into round holes.  They believe that our current hammer curriculum needs to be rethought in light of these problems.
----
CategoryManagement CategoryEnterpriseComputingConcerns