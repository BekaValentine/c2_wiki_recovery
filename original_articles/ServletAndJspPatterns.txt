Basic patterns for JavaServerPage''''''s and JavaServlet''''''s.

	* ServletControlledJsp
	* ServletCommandPattern
	* ServletDesign

-----
Otherwise known as the "wot, no MVC?" discussion... -- WillSargent
-----
A well done MVC implementation, using Taglibs to make it WebMaster friendly, is the JakartaStruts
project. http://jakarta.apache.org/struts/index.html Worth a look.  -- MarkSwanson
-----

''[From PortlandJavaUsersGroupThread...]''

I think we've done Java app servers to death, not to mention the fact that this space is so over-marketed I'm beginning to lose interest.

It would be cool to hear some best-practices (or some such) for JSP/servlet frameworks/API's, the newer custom tag JSP architecture (or how to use it in the real world without getting sunk), performance concerns, and definitely how EJB applications compare to strictly JSP/servlet(s) (in the real world, sans app server specifics).

We've done the "imagine the possibilities" thing, lets do some kind of "here's what we did!", its 2001 pjuggers, what have we really done?  ...or are we all on an endless API treadmill?

-- 

''I think you'll find that http://virtualschool.edu/jwaa/ boils down to precisely that, particularly the "The Problem" link in the left margin. --BradCox''

----

Well, to contribue to the "what have I done" category:  I built an application framework around servlets and WebMacro.  I don't do JSP.  I find it so entertaining that all of the patterns, advice, and "tags" come out to turn JSP into a dumbed down templating engine.  WebMacro has the right idea:  Create a template engine from the start and optimize to that.  I don't know if I'd call my engine MVC -- perhaps view-controller.  The problem here is that real MVC, at least to me, implies real-time interaction between all three components in the triad and this isn't really possible in the 3270 .... erhm, oops -- sorry ... HTTP and web space. -- JeffPanici