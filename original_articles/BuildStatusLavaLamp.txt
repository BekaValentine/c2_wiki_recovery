People have been using AmbientOrb, traffic signals, and even Lava Lamps to make the current build status publicly visible.

"Lava Lamps" as a build status indicator were mentioned in...
* The "Pragmatic Project Automation: How to Build, Deploy, and Monitor Java Apps" book by Mike Clark [ISBN: 0974514039]
* How to build and automate a pair of lamps -- red and green:  http://www.pragmaticautomation.com/cgi-bin/pragauto.cgi/Monitor/Devices/BubbleBubbleBuildsInTrouble.rdoc
* http://www.sharpesrus.com/2004/08/monitoring-build-status-in-unique-ways.html
* Maybe this could be used for an on-screen backup display (or maybe not):  http://www.rocketdownload.com/program.php?id=1294

* http://www.developertesting.com/archives/month200404/20040401-eXtremeFeedbackForSoftwareDevelopment.html [Search for the "Java Lava Lamp" title.]
* http://flea.sourceforge.net/gameTestServer.pdf - see AgileTesting

----

''Has anyone found a way to deal with LavaLamp latency?''

As I understand it, ThatsNotaBugItsaFeature:
''Really!  ;->''
Seriously -- When the build breaks, the red lamp clicks on.  And the game is, fix it before it gets fully warmed up!
IE: Fix it, before the red lamp gets '''''really mad!'''''

----

Good:
 http://www.pragmaticautomation.com/images/green_bubbles.jpg

Getting bad:
 http://www.pragmaticautomation.com/images/trouble.jpg

Bad:
 http://www.pragmaticautomation.com/images/red_bubbles.jpg

(The images above are from http://www.pragmaticautomation.com/cgi-bin/pragauto.cgi/Monitor)

----
Damn! We lovers of dynamic languages don't seem to have anything equivalent. I suppose the statikes would suggest an indicator for the number of bugs that would have been caught if it was compiled instead.

''You could write UnitTest''''''s. ;->''

------

Just sneeze while drinking hot tea. It's a "recession lava lamp".

----
See other BuildStatusIndicators.