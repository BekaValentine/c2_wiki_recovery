One thing ExtremeProgramming seems to be about is overcoming guilt over doing the right thing.

Examples:

* On the FoldedZipperedProcess page, RogerLipscombe mentions feeling guilty about writing code to meet QA's test suite.
** XP says always write to the tests.
* PairProgrammingMisconceptions page discusses feeling guilty about programming with someone else.
** XP mandates it.
* DoTheSimplestThingThatCouldPossiblyWork and YouArentGonnaNeedIt seem to be about overcoming guilt over not being clever enough to do something the complicated way.
** Again, XP mandates the simplest possible design at all times.
* People feel guilty when they aren't spending lots of unpaid overtime on a floundering project.
** FortyHourWeek says this isn't your problem, it's a symptom of a broken project.
* Nobody ever reads DesignDocumentation, but everybody feels guilty about not reading it.
** How about replacing it with a simple SystemMetaphor?
* Programming teams frequently get guilt-tripped into committing to more than they know they can do.
* The PlanningGame, and in particular the YesterdaysWeather rule give programmers the courage to say when something can't be done with the time and resources allocated.

-----

"Overcoming the guilt over doing the right thing" because you're reducing fear early.  I think your point ties in very nicely to ExtremeHumility, and ExtremeHumilityAndHowWeAchievedIt. -- MiroslavNovak

----
CategoryExtremeProgramming