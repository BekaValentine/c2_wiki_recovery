Many of the early commercial agents were developed for information search.  Here, individual agents were launched on a tether to gather predefined kinds of information and return them to the human requester.  In other words, these agents were solo operations that had very little�if any�interaction with other agents.  Such an approach certainly has its many uses.  However, if we look at the human world, such an approach alone could not build the societies or support the organizations that humans have come to enjoy.  Instead, we set up networks of people that interact for various purposes.  Interaction among agents, then, is not sufficient to build agent societies, we need agents that can coordinate�either through cooperation, competition, or a combination of both.  These agent "societies" are called multi-agent systems (MAS).

Multi-agent systems, then, are systems composed of agents coordinated through their relationships with one another.  For example in a kitchen, the toaster "knows" when the toast is done, and the coffee-maker "knows" when the coffee is ready.  However, there is no cooperative environment here,�only an environment with single agents.  In a multi-agent environment, the kitchen becomes more than just a collection of processors.  The appliances would be interconnected in such a way that the coffee-maker and the toaster would ensure that the coffee and toast are ready at the same time.

Some of the rationale for multi-agent systems are as follows:

* One agent could be constructed that does everything, but fat agents represent a bottleneck for speed, reliability, maintainability, and so on (''i.e.'', there are no omnipotent agents).  Dividing functionality among many agents provides modularity, flexibility, modifiability, and extensibility.

* Specialized knowledge is not often available from a single agent (''i.e.'', there are no omniscient agents).  Knowledge that is spread over various sources (agents) can be integrated for a more complete view when needed.  

* Applications requiring distributed computing are better supported by MAS.  Here, agents can be designed as fine-grained autonomous components that act in parallel.  Concurrent processing and problem solving can provide solutions to many problems that, up until now, we handled in a more linear manner.  Agent technology, then, provides the ultimate in distributed component technology.


To support multi-agent systems, an appropriate environment needs to be established.  MAS environments:

* provide an infrastructure specifying communication and interaction protocols.

* are typically open and have no centralized designer or top-down control function.

* contain agents that are autonomous, adaptive, and coordinative.  

Clearly, single-agent environments are much simpler, because designers do not have to deal with such issues as cooperation, negotiation, and so on.  However, the large-scale requirements of industry necessitate approaches that employ coordination and distribution.  As such, FIPA and the OMG's Agents Working Group are focusing primarily on multi-agent systems rather than single agents. 

-- JamesOdell

-----

Usually software systems -- but occasionally hardware and wetware as well -- that include more than one AutonomousAgent. Some are designed, others are simply models of natural systems.

For instance, BT has developed MultiAgentSystem''''''s that are software-based for routing cell calls based on ant colonies (See http://www.businessweek.com/1997/25/b353218.htm for instance). A market is a MultiAgentSystem, since we can talk about it in terms of many similar buyers and sellers interacting according to relatively simple rules. And that market could be made up of software agents, actual economic people, or some mix of the two (witness eBay and its combination of real people and BiddingBots).

EmergentBehavior is a common consequence of MultiAgentSystem''''''s. Often they are also ComplexSystems. -- BillTozier
-----
Can anyone recommend another book in this area?  I have Multi-Agent Systems by Jacques Ferber. -- MichaelFeathers

''Michael, Multi Agent Systems edited by Gerhard Weiss and Intelligent Information Agents edited by Matthias Klusch are excellent collections. What did you think of the Ferber book? -- BillDehora''