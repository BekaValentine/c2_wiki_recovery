An application that mines data from a graph naively. 

A traditional miner would look at the data in each node. A NaiveGraphMiner uses only the linked relationships between nodes to mine data. A NaiveGraphMiner would be ideally suited for automated mining of a wiki. It could even be used to find high-level pattern patterns or potentially as a PatternSolver.

NaiveGraphNode Information
* Complexity: # of links to other nodes
* Importance: # of links from other nodes
* Cyclicity: # of levels to back-trace to the node

NaiveGraphSet Information
* Cohesiveness: how linked the set of nodes is to each other (Boolean searches)
* Independence: compared to global (DataIslands, WalledGardens)
* Directedness: cyclicity of a path the set contains

NaiveGraphGlobal Information

----
Prototype Search form:

Solve from node to [  ]

Weights : [  ]

Gather groups : A[  ]  B[  ]  C[  ]

then:

	0 Display weighted relevance of gathered nodes. Output is "relevant reading material" or solutions - if gathered nodes are solutions (say with a *Pattern RegularExpression)
	0 Gathered groups result in a set of sets
	0 A Discerner makes a final processing of the gathered groups

----
See WikiMines