My thought is that the notion of Patterns in Software (derived from Patterns in Architecture) can be analogized in other fields. My formal training is in law and computer science. I have some thoughts (GabrielWachob) that the legal domain is in fact a great example of PatternThink, and might even be described with a big huge Pattern Language. Of course, I might be totally missing the point here. I don't think so. 

Furthermore, I'm thinking that Pattern-style thinking might facilitate inter-domain communication. What do others think?

-GabrielWachob

-------

Tom Erickson at Apple has a paper on patterns in workplace studies, where he points out that the most common use of patterns in architecture is for non-architects to communicate their needs/desires to the professionals.  Since inter-domain communication involves precisely that, there's certainly an opportunity.  There would need to be a higher-level approach to many of the patterns/pattern languages, perhaps only a level or so down from the application definition level, for this to work in the software area.

KenMeltsner

----

PatternThink definitely applies to solutions in very different domains: buildings, software, the design process, organizations, ... (Do these solutions have something like PatternNature in common??). There are even PatternsInChess.

Somewhere on wiki somebody wrote that he writes "with a strong SmalltalkAccent". I guess PatternThink can be described as thinking with a pattern accent. :-)

--FalkBruegmann