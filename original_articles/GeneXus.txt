GeneXus is a knowledge-based software development tool, developed by ArTech, and mainly oriented to enterprise-class applications for the web and Windows platforms. The developer specifies his applications in a high-level (mostly declarative) fashion, from which native code is generated for multiple environments. Site: http://www.genexus.com

-----

What I find most interesting about this tool, is that instead of starting by defining your EntityRelationshipModel model, you start by defining your views (called "transactions" in GeneXus jargon), and GeneXus derives the right property normalized model by using inference rules defined in FormalLogic (the first version of the GeneXus engine was coded in ProLog, and the inefficient parts were recoded in CeePlusPlus to improve performance):

When building a database to solve the needs of really big enterprise, one finds that is really hard to extract a consistent EntityRelationshipModel because each StakeHolder only knows a part of the enterprise (''it is almost impossible to find one that knows everything about everything in the enterprise with enough precision to act as the source of all the required information''). But it turns out that each StakeHolder knows very well the particular part of the enterprise that is directly related to its every day job, its particular view of the all the EntityRelationshipModel. So, why not create a system that derives, using logical inferences, the underlying normalized model. This is called NormalizationBySynthesis.

Genexus also includes a CrudGenerator, and visual UI for customization... but I am not sure if it is a FunctionallyCompleteCrudGenerator
----
History of GeneXus here(Spanish): http://www.aiu.org.uy/gxpsites/agxppdwn?2,1,4,O,S,0,79%3BS%3B1%3B21, (old document 1995)

----

See DeKlarit