Discuss a failed attempt to master IdealProgrammingTime, placing discussion on that or a related page. 

Describe the results of a couple of months' experience estimating all your programming tasks and measuring actual performance against estimate. Try to explain why estimates did not improve.

''Extra Credit: '' Explain how you got here without a lifetime's experience behind you.

----

I have been working in an environment ripe for taking up XP for just over 2 months, in that time I've been involved in one project. This being my first project in the RealWorld I knew I was naive and so when I looked at the requirements and estimated 7 days' work, (the MarketingDroid''''''s had already provisionally talked about 5 days the customer) I knew that I would need to add a pessimism factor (LoadFactor, it might be called). So I thought "It'll probably take a couple of weeks". I showed my estimate to an old friend who worked here already and he laughed a condescending little chuckle and said "You should double your estimates" before he even looked. I figured that, being an inexperienced CodeMonkey, I should add a little to that again to allow for learning on the job. Then we added a bunch of things into the estimate that I hadn't thought to allow time for. Then the customers wanted a couple of features we didn't expect, then there were issues implementing a feature that looked trivial at first.

All in all, the project was delivered 7 weeks after I officially started working on it.

I make that a LoadFactor of 5 for my first estimate...

-- SammyTheSnake
----
CategoryTime