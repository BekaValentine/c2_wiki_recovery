Paul Morrison was educated at Eton College in the UK, and studied social anthropology at Cambridge, but was attracted to computers early on and joined IBM (U.K.) in 1959.  The first computer he programmed was the IBM 650 - 2000 words of memory on a rotating magnetic drum!  The Assembler language was called SOAP (Symbolic Optimizing Assembly Program).  Paul eventually worked for IBM for 33 years in 3 countries - initially in England and the US, but for most of his career with IBM, in Canada (8 years in Montreal - since then in Toronto). He was one of the designers and builders of the Bank of Montreal's "Mech" on-line banking system in the early 70's, still going strong after almost 30 years of continuous evolution.  

His main claim to fame is that he stumbled on FlowBasedProgramming in the late 60s - early 70s, and has been exploring and trying to promote it ever since!  He feels the time is probably right for this technology now, as many people have now discovered for themselves the problems with (some aspects of) OO, and the industry is moving towards more and more complex networks of systems, and ever more complex computer architectures.

Paul is now an independent contractor, maintaining legacy mainframe systems. His favorite programming language is IBM S/390 (now Z/90) High Level Assembler Language, mainly because of its extremely powerful macro facility, but also its incredible longevity (he reckons he has been using it for almost 40 years). However, he has also coded in PL/I, COBOL, APL, REXX and a large number of other IBM Assemblers.  He can also get by in C++ and Java. He has always done his own research in parallel with his official (paid) work, and hopes to one day find some like-minded people to join him in the research described in this web site. 
 
His web site is http://www.jpaulmorrison.com. and the wiki for FlowBasedProgramming is at http://www.jpaulmorrison.com/cgi-bin/wiki.pl. 

''As you know I've read your book and browsed your web site and wiki, but I seem to have overlooked your ongoing/future research; where should I look? -- DougMerritt''

Sorry, Doug! I missed your edit - as you can see (below) I'm wrestling with that issue.  All I've done so far is on my web site - not much new, I'm afraid. I am actually looking for future research directions (for when/if I really retire :-)), so I am open to any suggestions!  I have put a page on the FBP Wiki called F''''''utureDirections - please contribute to it!  I thought the AORTA stuff looked interesting, but it seems to have quiesced recently...

I can now report that AORTA will be coming alive again this summer!  RickardLundin has sent me some ideas for future directions that I have appended to http://www.jpaulmorrison.com/cgi-bin/wiki.pl?AORTA.
----
Content removed to BankOfMontreal -- Hwo040613
----

Paul, given your involvement with FlowBasedProgramming, you might find Kenny Tilton's Cells system for Common Lisp of some interest: http://common-lisp.net/project/cells/. Unfortunately, the documentation is rudimentary, but he's been actively working on it and promoting it within the Lisp community for a while. -- DanMuller

Dan, I note the heading of the Cells page says "A dataflow extension...", but I assume this is more like the values flowing across a spreadsheet.  FBP allows multiple streams to merge into a single port, supports reusable componentry, and even allows loop-shaped networks and subnets.  Its basic concept is the network of processes communicating by means of streams of (passive) data objects passing over bounded buffer connections, so it feels (to me, at least) rather different.  However, as I try to show in one of the chapters in my book - http://www.jpaulmorrison.com/fbp/recurs.htm - I definitely think you could build FBP components using LISP-like notation.

Dan, it sounds like you've had an interesting career!  I figure I have now been working in 360/370/390/.../Assembler for about 40 years.  The other languages seem to come and go, but Assembler keeps on truckin'! --pm
----
Paul:

I'm assuming that it was you who added the link to the old RBC News item in my wiki from the BankOfMontreal page?  If so, I'm very impressed that you actually had the patience to find your way through all of the 'twisty passages that look alike' to get there.  Was your post prompt by the recent MasterCard failure?

Also, thanks for prunning the (W)iKi page.  I have not yet bothered to hunt down that minor pest, given that there are just so many other enjoyable things that I would rather do.

Hope all is well.  Regards, HansWobbe.
----
CategoryHomePage