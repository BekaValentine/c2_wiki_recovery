Not usually, that is.

The title of this page is designed (not architected) to counter intuition, or at least to surface some questions. It seems that an Architect is someone with a specific role on a project to build something. There seems to be consensus that that role is to guide and protect ConceptualIntegrity of a software design. The word also seems to carry a connotation of size or scope, in that the Architect is concerned with the "big" issues. In this case, "big" may be another way of saying "hard to change later". By analogy, the framing style of a house or barn would be relatively hard to change later, while the siding or exterior color would be relatively easy. So, the Architect is there to guard the integrity of the fundamental design decisions.

Architecture may be what Architects do, but I think in more cases it better describes what Architects know, recall and use. This may be a subtle point. What I'm trying to say is that in aggregate, by pushing toward big-boned integrity, architects foster the emergence of Architectures. This is different from a single Architect on a project sitting back and inventing a new Architecture for the project. I think the latter rarely if ever occurs. At the same time, Architects, armed with their historical perspective on Architectures of the past, are able to guide and sometimes preempt emergence on a given project. The relationship between Architect and Architecture is, therefore, a two-way phenomenon.

I now realize that the title of this page is defective. What I meant to say was that ''the'' Architect does not create ''the'' Architecture. (Aha, found a place to put those pesky definite articles!)

A good Architect should have good awareness of forms that have been built in the past, and judgment for when they may be applied with benefit to new work. A good Architect should also be sensitive to emergent design principles, and skilled at suppressing premature Architectural discipline when the energy on a project is moving toward invention and emergence...i.e., the birth of a new Architecture. -- WaldenMathews

----
I'd only refactor this to say that the Architect role could be filled by more than one person. However, in actual practice more than 2 or 3 is untenable. I think the Architect may originate or sketch the architecture, but the entire team creates the architecture. Also, an architecture should be viable long after the architect is gone. -- RobertDiFalco
----
Usually, no one creates architectures. They emerge.

''They emerge or they evolve? If most emerge, no wonder there are so many AmorphousBlobsOfHumanInsensitivity out there. Frameworks that just grow and grow unbounded because someone keeps coming up with "better ways to do things" instead of taking the time to find a better way the first time. You can't think of everything, but there is a fine line between emerging and evolving. I'll take an evolving architecture over one that is emerging anytime. Of course, for small systems, who cares. Do whatever works to deliver on the contract. -- RobertDiFalco''

'''See also:''' ArchitectsSchmooze.

I think that is what everyone meant by create. Most things that are created ''emerge''.

''I'm not so sure. To me, the distinction between intentional creation and emergence is significant. The point here is that you can '''create''' something by following an architecture, while new architectures seem to '''emerge'''. -- Walden''

I think the creative process is always emergent. -- rad

''I agree with you, but there are degrees. Following an architecture limits emergence intentionally, while allowing emergence may result in a new and unexpected architecture. -- Walden''

Cool. This is probably another topic that is ''emerging'', but it is my opinion that the most successful architects do not look at an architecture as being static. This is why they are more concerned with maintaining its ConceptualIntegrity than some ''static'' design. I didn't realize there was a supposition being made that creating architectures was a big-bang process and what was developed did not evolve. I don't know anyone that works like this, extreme or otherwise. -- RobertDiFalco
----
Sure, architectures will emerge. If you don't have an architect, they can be real ugly.

''Paul, not to quibble, but do you mean that '''solutions''' will emerge that can be ugly? If a solution is still ugly, perhaps its architecture has not emerged yet.'' -Walden

I am an architect, I think I'm on the way to becoming a GoodArchitect. I do not claim to create architectures. I used to consider myself a visionary (novice!) - see below, currently re-thinking this - thanks RobertDiFalco. I can discover simple solutions in the very complex world of distributed computing. The vision is created by me - but is not mine. I listen to the needs of the clients, it is their vision - I just help everyone understand it.
I have to communicate the vision, enthuse the team and I also have to enforce that the architectural patterns are followed. The vision is very agile, I have have to be responsive to changes from the technical, management and business communities. I call this a Vision Architecture - it is abstraction art. PaulCaswell

----

Paul, I question the wisdom of considering oneself a visionary, even a novice one. It indicates questionable motives. Creative people don't usually associate themselves with "being" this or that but with the "process of creating". For example, a friend of mine always visualized himself as a successful novelist. He could see his completed works and indeed he had many great ideas. However, he never seemed to produce much. I had another friend who visualized himself as ''someone who wrote''. He never gave much thought to his completed works because what he was interested in was ''writing'' and not the result of ''writing''. As a result, he had a huge collection of completed works and each time he finished one, he couldn't wait to start another. He rarely viewed completed works with pride but rather, he viewed them as flawed, incomplete, and representing the death of the creative process. 

I guess what I am saying is you shouldn't care whether you are a visionary or not or how people view you and your works. Instead, you should be passionate about the process of designing, not how great your designs are. Let others decide whether you are a visionary (or a ''novice'' visionary) or not. You should only be interested with ''design'' and the ''creative process''. ''Most'' great artist are rarely happy with their existing works. Instead, they are consumed by what they are currently ''working'' on. One of my favorite quotes seems appropriate here:

	 :	Achievement is the death of endeavor and the birth of disgust. 
	 :	-- AmbroseBierce

I could never think of myself as a visionary, to me this would be the end of my innovations. Why? Because I would be identifying with ''being'' something instead of ''creating''. And each thing I created would be questioned by ''is this visionary?'' No, the point is to create the best you can. Some may see you as visionary and others not, but it shouldn't be something you are concerned with. -- RobertDiFalco

''That's an interesting thought when applied to developers, maybe the ones who view the software development as a creative, craft are most drawn to iterative development processes while those who tend more to the engineering side are drawn towards phases with closure to them? -- TomAyerst''

----
There are undoubtedly many ways to innovate, ranging from singular genius big bang inventions to folk invention across thousands of people and thousands of years. I think the former is rare but romanticized so that we tend to believe in it, while the latter is the usual case (well kept secret). Out of 100 Architects, one is the Creator, and 99 are just PlainOldScholars. You think? Anyway, this is my point, that what the typical Architect deposits to Architecture is small, while what s/he may withdraw is large. -WM

----
SystemsArchitecting (excellent book, BTW) has the following to say: "The essence of architecting is structuring ... The systems architect's task is to bring structure in the form of systems to an inherently ill-structured world of human needs, technology, economics, politics, engineering, and industrial practice." The structure brought forms the concept whose integrity must be maintained. -- RandyStafford
----
''Paul, not to quibble, but do you mean that '''solutions''' will emerge that can be ugly? If a solution is still ugly, perhaps its architecture has not emerged yet.'' -Walden

very interesting, I think you have have identified an key point that I am still unclear on:

Is Architecture inherently good?
Is the antithesis of a GoodArchitecture, BadArchitecture (Ugly, smelly, ...) or is it The Absence of Architecture?

I think ''(today)'' there are Bad Architectures, bad structures. E.g.1 A deep hierarchical class structure or management structure is bad. E.g.2 Strip Malls, this structure was certainly transferable, with horrendous results. 

-- PaulCaswell
----
Architecture is inherently good if we decide that it is. Bad architecture is inherently better than no architecture, while ugly architecture is inherently worse. How's that for a value system?

Architectures are inherently about control. They are standards we use to control a system we are building to. They allow variations in the details, but insist on conformance in the large scale. That's the kind of control we are seeking when we use architectures. A good architecture lends to optimum control for the task at hand. A bad architecture lends either to overcontrol or undercontrol.

The beauty of an architecture may be nothing more than your subjective response to goodness or badness of fit, as described above. In a different sense, beauty can be architected, if we adhere to pleasing proportions like the golden ratio. Effective architecture is not necessarily beautiful architecture. Torture devices may be effective, but they are Ugly.

Always use architecture for Good, never for Evil. :-)

-- WaldenMathews

I there is always an architecture, even if ignored by its creators. If you build a house with no plans and no design in mind, doesn't it still have an architecture - even if it blows over after the first gust of wind over 25mph? However, when evaluating architecture (not something I spend much time doing), there are too many factors to have simple labels like good or bad. Good in what way? Aesthetically? Its usefulness? Its level of innovation? Some things are commercially successful despite themselves while other creations are perfect in their simplicity but completely ignored by the public. Sometimes this isn't the publics fault, it could be the creation solved a problem no one was interested in. On one level and at one time, something like a Strip Mall was an incredible innovation and a prime example of Good Architecture. Some people think anything that even smells of Bauhaus is immediately bad. Go figure. -- RobertDiFalco

''If you build a house with no plans and no design in mind, doesn't it still have an architecture...?''

It's an excellent question, Robert. At least I like it. And it's a little like that question about the shack that falls in the woods with no one around to hear it. I would like to answer your question by saying that anything you regard has an architecture if you perceive one for it, no matter whether it's the one the builder intended or not. You say it's layered. I say it's pipes and filters. Now what? What is the practical implication of all this? -- WaldenMathews

----

The net needs of a customer is the measure of its "goodness". Architecture is good if it meets (eliminates) customer need. The danger architects face is building needs into a customer. Any architecture that creates more needs than it resolves for a customer is a bad architecture. The measurement or type of need may not be important...

This is just a random thought, but it feels right to me. Let me know what you think. -- KevinKotowski

''The advertising profession seems to thrive on creating more needs than it resolves...is that Good or bad?'' 

''As far as I can see the software industry is pretty similar: constantly inventing (and re-inventing) products that create needs as well as purporting to meet needs, often only re-stating needs in new terms. And what about the whole 'upgrade' business? Software programs constantly on the move/change keeping customers spending & 'in need'?''

''What makes a GoodProgrammer or a BadProgrammer'' 
-- JustAnArchitect
----
The question of what constitutes a good architecture probably belongs on its own page.

This page is intended to help clarify the relationship between the architect and the architecture (or architects and architectures in general). Personally, I think issues as broad as "satisfying the customer" are not helpful for delineating the subject under examination. One reason is that the definition of "the customer" will expand like a gas to suit whatever container or purpose you have in mind. In addition, maybe more importantly, we are aware that products of sucky (or unidentifiable) architecture exist and persist and do well enough at satisfying whomever has to be satisfied. Yet some of us are looking for something more... -- WaldenMathews
----
Interested in GoodArchitecture?