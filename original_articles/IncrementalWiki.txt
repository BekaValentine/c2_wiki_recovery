I've been kicking around some ideas for translating the successful programming technique of IncrementalDevelopment to the Wiki.

'''Technical Problems:'''

	1. Browser/Computer/Connnection Unreliability -- You can either hate your computer's stability, or you can adapt to it.  Assume that content in your browser's buffer doesn't exist until you send it Ward's server's disk drive.

	1. Conflicting Edits -- This Wiki once used "No locking at all", which deleted some edits without warning -- see SteppedOnMyEdit. The current "first one wins" protocol is much better, but still annoying for those who are not "first".

'''Human Problems:'''

	1. Lost Ideas -- The CreativityGoblin runs by and distracts you from what you were trying to say with a different, shinier idea.

	1. Overwhelmed Thoughts -- Breaking off too big a chunk can bring confusion to our poor little minds.

	1. Lack of Formatting Feedback -- Especially when you're learning the TextFormattingRules, it's nice to see the end result as you go.

'''Solutions:'''

	* Save First Drafts as MinorEdit''''''s -- Divert to RecentEdits until you're ready to advertise the new version on RecentChanges. ''[Note: this is no longer possible. See MinorEdit for reasons.]''

	* "Don't Edit Me Yet" Notes -- Sometimes you might want to put up a flag asking the residents to let you finish your thoughts before they contribute.

	* Embrace Incompleteness (a.k.a. WorseIsBetter) -- It's okay if you can't treat the topic as thoroughly as you'd like to. Write your first thoughts, leave "TODO" and "______" markers where appropriate, and come back later. This sometimes leads to that magic experience when a WikiGnome fills in the TODO's and blanks for you.

	* I like the way all consecutive edits by a single author are considered a "single edit" by RecentChanges and EditCopy. That avoids cluttering RecentChanges with all the little minor typo-fixes that occur to me milliseconds ''after'' I hit "save".

	* ThoughtShotgunWriting

	* Atomic Edits/Refactorings. For one example, see: TypeItInNotepadFirst.

* DistributedWiki.  Refactor wiki into a PeerToPeer platform, it's natural evolution.