Software engineering is hard work.  But taking any given engineering design and reifying it into actual source code is generally much easier.
* ''Much easier? according to whom?''
** (According to the software engineer, I'd think.  :)

Interestingly, it also takes the most amount of human resources.  Therefore, it makes more economic sense for a business to invest more in a few ''senior engineers'' who know their stuff, but who delegate the act of actual coding to ''junior engineers'' who get paid less.

* ''And after time passes this "senior engineers" forget more and more about what actual coding is about, and start asking for crazy stuff...''

Because these junior engineers are not nearly as critical in contributing to the design of the product, they tend to be ''disposable;'' a company can hire any coder with experience in the latest relevant technologies to replace anyone else already on the team, after some amount of training investment.

* ''I strongly disagree with the idea that "coders are disposable" is good way to manage software development, because design and coding are two sides of the same coin. You cannot design if you cannot code and you cannot code if you cannot design... I think this page is about people that believe that ArchitectsDontCode is not an AntiPattern... -- LuxSpes''

See also ArchitectsPlayGolf