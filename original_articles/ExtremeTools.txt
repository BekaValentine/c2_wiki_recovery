'''For Java''' ''[Started in a post on the XpMailingList by SeanHanly]'':
abc
'''JavaIde''''''s:'''
	* EclipseIde
	* Modelistic JME (http://www.modelistic.com) Eclipse plugin for Java XP reverse engineered class diagrams
	* VisualAgeJava (see: VisualAgeJavaAndXp)
	* Jedit
	* NetBeans
	* EclipseJava (cmd-1 gives you awesome support for TestDrivenDevelopment)
	* IntellijIdea. All the usual IDE nonsense plus built-in refactoring support.

'''Refactoring:'''
	* IntellijIdea. All the usual IDE nonsense plus built-in refactoring support.
	* EclipseIde (at least some refactorings)
	* InstantiationsjFactor
	* RefactoringBrowser
	* Poor man's tools:
		* grep 
		* ReadWriteGrep
		* SameTool

'''VersionControl Systems:'''
	* VisualAge/ENVY
	* CVS, of course! (See: ConcurrentVersionsSystem)
	* SubVersion
	* PerforceVersionControl

'''UnitTest''''''ing Frameworks:'''
	* JavaUnit
	* [at this point 7/05, there is a *Unit for most major languages]

'''AcceptanceTest''''''ing Frameworks:'''
	* FIT - FrameworkForIntegratedTest
	* Marathon - known on the Wiki as MarathonMan
	* Untold home grown solutions

'''Object Persistence Layers:'''
	* TopLink
	* GemStoneJava -- GemStone/S was used by C3 with various success.
	* EntityBean''''''s make reasonable persistence objects, especially with a server that will manage configuring the database tables for you.
	* Hibernate -- Active OpenSource ObjectRelationalMappingTool(see HiberNate)

'''Performance Measurement:'''
	* (See: JavaProfilers)

'''Integration/Building:'''
	* ApacheAnt
	* AntHill
	* CruiseControl
	* IntegrationGuard
	* JwamIntegrationServer
	* BeetleJuice

'''Planning/Tracking:'''
	* AgilePlan XP planning, bug tracking and wiki
	* IndexCard''''''s
	* Flip Charts
	* XpCgi
	* XpPlanIt
	* IterateByDiamondSky
	* XplannerTool
	* SelectScopeManager
	* XpSwiki
	* ProjectPlanningAndTrackingSystem

----

ExtremeTools is a topic that currently interests me. I originally thought it to be the toolset required to support ExtremeProgramming. The more I looked at the idea, though, and the more time I spent trying to put such a toolset, the more ExtremeTools also came to mean writing tools in an extreme style - which is quite the opposite of what a lot of tools builders do. I'll try to put most of the tools I've written out in the public domain ASAP; some of them will be included in my upcoming book on ENVY. -- JosephPelrine

----

One tool category that seems to be missing in the "tracking" space is one to generate progress graphs from runs of acceptance test suites. This would be much more valuable to me than "story database" tools.

MicrosoftExcel would be the SimplestThing, and I'd probably do that for a start. My next stories would be - the tool takes care of counting ATs in my code base, runs them on a periodic basis, and updates the Excel document accordingly.