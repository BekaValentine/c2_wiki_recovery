Tom Poppendieck wrote (on the XP list):

There are three versions of SixSigma.

The original version dealt with reducing variation and had great value
in cases in which ''product'' variation was the main problem. The emphasis
on TestDrivenDevelopment in agile addresses this concern by eliminating unintended
variation from design intent.  When applied to design process,
however, it was severely counterproductive.  

To address this Six Sigma for Product Development added the voice of
the customer to ensure that discrepancies between what the customer
really wanted and what was developed was minimized.  This improved
value from the customer perspective but did not dramatically improve
productivity.

Lean Six Sigma adds in addition a focus on FLOW and elimination of
Complexity.  The Lean Six Sigma movement is fully compatible with
Agile software development.

Lean Six Sigma has 5 Laws
	1 The Law of the Market - Customer needs define quality.
	2 The Law of Flexibility - The speed of a process depends on how easily people can switch among tasks
	3 The Law of Focus - 20% of the Work delivers 80% of the value
	4 The Law of Velocity - The speed of a process in inversely related to the amount of Work IN Process (Little's Law)
	5 The Law of Complexity and Cost - Complexity generally adds more cost and WIP than either low quality or low speed.

So LeanSixSigma works on a foundation of data and facts.  It strives
to delight customers with quality and speed, and it seeks to improve
processes by focusing on Flow and avoiding product variation and
defects.

So you can demonstrate that Agile processes, done right, not only
apply six sigma concepts, in their place, but go far beyond them to
delight customers and to serve stakeholders with high productivity.

http://www.poppendieck.com/lean-six-sigma.htm has more.

Six Sigma IQ, also has more information about Lean Six Sigma http://www.sixsigmaiq.com 
