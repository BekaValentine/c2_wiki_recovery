A GreatBooksList. See also GreatSoftwareBooks (which seems to have more of the hard-core technical books on it).

'''MetaphorsWeLiveBy''' by LakoffAndJohnson - this is not a software book, but it is about software nonetheless. What software people do is create metaphors that have operational semantics. It might be helpful if they more completely embraced the fact that all of us communicate using unconscious metaphors all the time. I got a lot out of this book. -- RaySchneider

Ray recognizes a very useful category of publication. So, here are some great books that are, in some sense, about software.
	
From MikeLutz (mjl@cs.rit.edu):
	* ''To Engineer Is Human: The Role of Failure in Successful Design'', Henry Petroski (ISBN 0312806809)
	* ''TheExistentialPleasuresOfEngineering'', Samuel Florman (ISBN 0312114494)
	* ''Definition of the Engineering Method'', B. V. Koen (ISBN 0878231013)
	* ''What Engineers Know and How They Know It'', W. Vincenti (ISBN 0801845882)

From BrianFoote (foote@cs.uiuc.edu):
	* ''TheStructureOfScientificRevolutions'', Thomas Kuhn, Chicago (ISBN 0226458075)
	* ''The Act of Creation'', Arthur Koestler (ISBN 0140191917)


From JeffBay:
	* ''QualityIsFree'', Philip Crosby (ISBN 0451625854)
	* ''Out of the Crisis'', WilliamEdwardsDeming (ISBN 0262541157)
	* ''ExtremeProgrammingExplainedEmbraceChange'' (duh :) (ISBN 0201616416)

From FrankLusardi:
	* ''TheLogicOfFailure: Recognizing and Avoiding Error in Complex Situations'', Dietrich Dorner (ISBN 0201479486)
	* ''CloseToTheMachine: Technophilia and its Discontents'', Ellen Ullman (ISBN 0872863379)
	* ''TheVisualDisplayOfQuantitativeInformation'', EdwardTufte (ISBN 0961392142)

From SteveBerczuk (berczuk@acm.org):
In addition to many of the above mentioned books:
	* ''PeopleWare'', DeMarco & Lister
	* ''The Elements of Friendly Software Design'', Paul Heckel
	* ''Are Your Lights On?'', Gause & Weinberg 
	* ''ThePsychologyOfComputerProgramming'', GeraldWeinberg
	* ''The PsychologyOfEverydayThings'', DonaldNorman (reissued as 'TheDesignOfEverydayThings', which makes a less memorable acronym than the original POET)
	* ''HowBuildingsLearn'', StewartBrand (excellent non-software examples of Maintenance, Planning, and Reuse)

From RalphJohnson:
	* ''The Psychology of Computer Programming'', G. Weinberg

Articles
	* "NoSilverBullet", Frederick P. Brooks, Jr.  Originally published in Information Processing 1986, pp. 1069-1076; included in the 20th-anniversary edition of TheMythicalManMonth. Explains why software is hard, and will remain so.

From AlistairCockburn:
	* ''Situated Learning: LegitimatePeripheralParticipation'', Lave and Wenger. This thin book discusses apprenticeship programs, when they do and don't work. I learned much about why programming is not working as an apprenticeship business, and use it as a benchmark. 
	* ''The Meaning of Meaning'', authors' names coming. Written back in 1912, still in print, way ahead of its time about the rock bottom of communication.  Great appendix by a linguistic ethnographer.

From BobKing:
	* ''Flow: The Psychology of Optimal Experience'', Mihaly Csikszentmihalyi. This may be a little removed from the field of software development, but I have experienced it while doing development work.
	* ''Becoming a Technical Leader'', Jerry Weinberg - almost any book by this author is worth a read
	* ''TheStructureOfScientificRevolutions'', Thomas Kuhn
	* ''The Subconscious Mind in Business'', I have lost my copy of this book and I don't remember the author's name - it was published in 1929. The author argues that we must all take time during the work day to just sit so that our subconscious can "cook away" on those hard problems that do not have immediately obvious solutions. He maintains that we should do conscious work 5-6 hours a work day and let the subconscious cook for the remaining 2-3 hours.

From MichaelBeedle:
	* ''Hidden Order'', John Holland - ABC's for the third millennium....
	* ''Emergence'', John Holland - the hidden rules of causality and generativity...
	* ''The Reengineering Revolution'', Michael Hammer - Enterprise Architecture for the new millennium... BPR works, most don't understand it.
	* ''The Tree of Knowledge'', Maturana and Varela - A powerful alternative in viewing life: life is process and change.
	* ''NotesOnTheSynthesisOfForm'', ChristopherAlexander - This really is what got everything started!
	* ''CyberCorp'', James Martin - Business as a "hybid reality" -- ''high-bid'' or ''hybrid''?
	* ''The Society of Mind'', MarvinMinsky - An exploration of the inner shadows of our mind
	* ''The Practical Guide to Enterprise Architecture'', James McGovern - Several industry thought leaders challenge us to think concretely about architecture
	* ''The Knowledge Creating Company'', Nonaka and Tekeuchi - Organizations that create and store knowledge..

From AnthonyLander:
	*  ''Dancing Naked in the Mind Field'', Kary Mullis - Nobel Prize winner for Chemistry in 1993. Brilliant book about life, happiness, adventure and science in these crazy times.
	*  ''Talk Talk Talk'', Jay Ingram - How we understand spoken language. Very deep.

From EdBuffaloe:
	* ''Space, Time, and Deity, The Gifford Lectures at Glasgow, 1916-1918'', Samuel Alexander, 2 vols.  New York: Dover, 1966.
	* ''The Basic Works of Aristotle'', MrAristotle, ed. Richard McKeon. New York:  Random House, 1941.
	* ''The Philosophy of Symbolic Forms'', Ernst Cassirer, tr. Ralph Manheim. New Haven & London: Yale University Press, 1955.
	* ''A Treatise of Human Nature'', David Hume. Oxford: The Clarendon Press, 1888.
	* ''Art And Geometry'', William M. Ivins.  New York:  Dover, 1964.
	* ''Aion, Researches into the Phenomenology of the Self'', Carl Gustav Jung, tr.  R.F.C. Hull. Princeton: Princeton University Press, 1959.
	* ''The Structure and Dynamics of the Psyche'', 2nd Edition, Carl Gustav Jung, tr. R.F.C. Hull. Princeton: Princeton University Press, 1969.
	* ''TheStructureOfScientificRevolutions'', Thomas S. Kuhn. Chicago/London: University of Chicago Press, 1962.
	* ''Feeling and Form'', Susanne K. Langer. New York: Charles Scribner's Sons, 1953.
	* ''Philosophy in a New Key'', 3rd Edition, Susanne K. Langer. Cambridge: Harvard University Press, 1957.
	* ''The Gutenberg Galaxy'', MarshallMcLuhan. New York: Signet, 1969.
	* ''Understanding Media: The Extensions of Man'', MarshallMcLuhan. New York: Signet, 1964.
	* ''Studies in Iconology'', Erwin Panofsky. New York: Harper & Row, 1962.
	*  ''A History of Mechanical Inventions'', Abbott Payson Usher. New York/London: Mc''''''Graw-Hill, 1929.
	* ''TheTenBooksOnArchitecture'', Vitruvius. New York:  Dover, 1960.
	* ''Process and Reality'', Corrected Edition, Alfred North Whitehead. New York/London: The Free Press, 1978.
	* ''Science and the Modern World'', Alfred North Whitehead. New York:  The Free Press, 1925, 1953.

From JeffLangr:
	* ''TheCuckoosEgg'', CliffordStoll. Berkeley astronomer tracks down a hacker.
	* ''TheSoulOfaNewMachine'', Tracy Kidder. The race to build a new machine.					

From MartinPool (all my favourite books directly about computing are mentioned above, so...)
	* ''TheLittlePrince'', AntoineDeSaintExupery. A children's book for adults.
	* ''Siddartha'', HermannHesse.
	* ''The Glass Bead Game'', HermannHesse -- Ray Schneider

These are great books to be sure with lessons appropriate for many disciplines but I don't believe they could be construed as ''about software''. Maybe these would be more appropriate in LiteratureBookList. BTW, I really liked ''Magister Ludi'' (i.e. The Glass Bead Game). Though my favorite is probably ''Narcissus and Goldmund'' (ISBN: 0553275860). -- RobertDiFalco

From JohnPassaniti:

Getting back to lists of books about ''software'', here's a few favorites of mine. These are all very practical books. They are either great because of their clarity, scope, or ideas.
	* ''ProgrammingPearls'', JonBentley
	* ''ThinkingForth'', LeoBrodie
	* ''CompilersPrinciplesTechniquesAndTools'', Aho, Sethi, Ullman (a.k.a. TheDragonBook)
	* ''TheArtOfComputerProgramming'', DonaldKnuth

From ArieVanDeursen: 

Just read ''SecretsOfConsulting'' by GeraldWeinberg. Great for any one who wants to change something - and introducing XP is always a major change. 

From HowardFear:

In addition to the books listed above (particularly everything by Weinberg), some of the books that have informed my views on software engineering and management include:
	* ''TheFifthDiscipline'', PeterSenge
	* ''Managing the Design Factory'', Donald Reinertsen
	* ''The Goal'', Elihu Goldratt
	* ''Abolishing Performance Appraisals'', Coens, Jenkins, and Block
	* ''Wicked Problems, Righteous Solutions'', DeGrace and Stahl
	* ''The TaoOfProgramming'', Geoffrey James
	
From KentSchnaith:
	* ''Dynamics of Software Development'', Jim Mc''''''Carthy
	* ''SoftwareForYourHead'', Jim and Michele Mc''''''Carthy

From AndyMoore:
	* ''CodeComplete'' and ''RapidDevelopment'', SteveMcConnell
	* ''Object-Oriented Analysis and Design'' (among many others), GradyBooch
	* ''Object-Oriented Analysis'', Coad & Yourdon
	* ''MrBunny's Big Cup o' Java'', CarltonEgremontIII

----
See the BookShelved wiki

----
CategoryBooks