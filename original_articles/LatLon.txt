My first {regular expression} pattern, and I don't know the whole schema. Your editing and advice ought to be appreciated.

LatLon represents latitude and longitude on the thin surface of this planet we call Earth. From a point on this surface (latest geoid), things could be tens of thousands of meters above and below -- e.g. seafloor and commercial jet.

To represent LatLon, I suggest using degrees, both for latitude and longitude, with fractional parts to as many digits of resolution as your precision can provide or requires. Elevation may be appended, but it must be signed, and should indicate its units and some sort of reference model (default is the sphere).

Example: equinox is when the sun LatLon is 0.000000000ne0+93e6miles

PostelsLaw suggests accepting notations with DegreesMinutes and DegreesMinutesSeconds. PostelsLaw also suggests accepting both as signed angles.

LatLon when output should sound like this pattern: Latitude: A number less than to or equal to +/- 90; followed by two characters (CaseInsensitive) [nNsS][eEwW] indicating quadrant; Longitude: A nunber less than or equal to +/-180.

PostelsLaw wants us to specify that output should be described thus
'''real[ns][ew]real''' where both reals are usually positive
and matched by this regular expression with positive numbers and this case:

Bugs:
LatLon doesn't include a convenient place for time in an almost non-relativistic universe - perhaps the DateStamp (with TZ, lt, or ut) should precede the LatLon as it is here this morning:
20090915.02PDT33nw117

Parse that before firing your ICBM. I propose that it's rather simple and almost complete.

JimPostel, you guided us well... -- ChrisGarrod

----
* I'm interested in adding (a great many) Tags to GeoCodeCoordinates, which makes me wonder about extending these patterns.
** One objective would be to let people use common Names to reference a particular location. ( e.g. OldFaithful = ... )
*** This has a great many benefits since modern digital cameras are capable of capturing LatLon as part of their EXIF data, making FlickR an incredibly complete repository of "benchmarks" that can be triangulated. Since most pictures on FlickR are also tagged with many terms, thinking of such terms as an index into an AssociateArray's dimension effectively categorizes a vast amount of content in an EnDimensioalArray.
*** Since all digital cameras capture a TimeStamp, it simply makes sense to have TimeLatLon.
* What I'm beginning to appreciate is extending this even further to TagTimeLatLon
** In practice, this can be shortened (like using a nickName or a pronoun), based on the context within which it appears. Hence I suspect we will need to apply the DotName conventions and facilities available in many modern languages.
-- HansWobbe
----
Related:
* InformationIntersection