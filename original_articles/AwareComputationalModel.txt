ComputationalModel with built-in awareness -- DonaldNoyes ThinkingOutLoud 20071207 20100510

Can such a system exist? Is it possible to build a Model of Computing which will not only record and compute the results of predictable and ordinary processes, also be capable of interpreting via interfaces what actions and computations should be made for non-ordinary events and occasional participations?

Can a Computer System be modeled such that it can be made "aware" of events and participation which impact it and change the way it should react? 

See also ExplicitUserModel

'''Presentation Model'''

Suppose a model has been constructed which consists of hundreds and thousands of procedures which can be defined as normal and ordinarily executed "in-total" and which may have been constructed so as to "continually update" the results it presents to its users. Can it become aware of the possibility that presentation updates need not be performed "continually" but only when the user of the information may either be "present and cognizant" or when the user may have configured a personal interface calling for "conditional", "demand", or "periodic" updates to be presented and preserved in a referral space or cache? 

Such a model could make a system more efficient and speedy, and increase its handling capacity.  It might also be made to become aware of the user's usage characteristics and be prepared to react accordingly when the system becomes aware of a user's "presence" and "immediate operating mode".  

'''Navigational and Demands'''

We already have systems whereby "cookies" are used to identify users and their preferences and configurations for sites accessed in the internet. This is a sort of "awareness" on the part of the site toward its users. What can be added to such configurations is information as to behaviors and locales in the site one may visit and of which one may require information. An "Aware" computationalModel would be one which would be aware, not only of consistent and predictable, but also of the probability of inconsistent and unpredictable behaviors and demands. 

Are there existing models which meet some of, if not all, or even more than here expressed levels of "computing awareness"?

----

Awareness is proven when an entity adapts its behavior based upon the conditions it can sense or predict in order to better accomplish a purpose.  ControlTheory studies related models of computation.  

In general, a model for awareness will need an inference system for understanding the environment from low-level percepts, and a planning system to adapt its behavior accordingly (relative to some set of goals).  If ThereAreExactlyThreeParadigms, then such GoalBasedProgramming is the fourth - a paradigm absent due to its requirement for powerful planning and inference systems (which are still in their awkward toddler stages).  GoalBasedProgramming would probably be the greatest extent of AwareComputationalModel, and there is a rather large wall to climb before it becomes viable as a programming paradigm.  There are more limited forms of it available for immediate use.  Any sort of reactive-loop programming qualifies to some degree as 'aware'... even the lesser forms seen in such devices as cruise control.
----
Consider: 

Models are Abstractions
* ".. InsideModelVsOutsideModel "
** Data (Service Oriented Architecture)
*** http://msdn2.microsoft.com/en-us/library/ms954587.aspx
Models are Developed
* Model Driven Development
** http://msdn2.microsoft.com/en-us/library/aa964145.aspx
Control Theory
*
Markov Decision Processes
* Markov Chains
** In mathematics, a MarkovChain, named after AndreyMarkov, is a discrete-time stochastic process with the MarkovProperty. Having the Markov property means the next state solely depends on the present state and doesn't directly depend on the previous states. -- WikiPedia 
** Policies And Values 
*** http://mtr.utia.cas.cz/pgm06/proceedings/49_paper.pdf 
**** "... a novel approach for solving a continuous and hybrid MarkovDecisionProcess ..... evaluated by comparing the policies and values. per state. ... "
** Grid Based MDP discretizations
** Parametric Approximations
** Two Phase Approach
** 1) an initial approximate solution is obtained by partitioning the state space based on the reward function, and solving the resulting discrete MDP. 
** 2) the initial abstraction is refined and improved. States with high variance in their value with respect to neighboring states are partitioned, and the MDP is solved locally to improve the policy.

See:
* KnowLedge
* WhatIsData
* FrameProblem
* DesigningVsModeling

----
WardCunningham'''''''s Video touches on computational awareness, sounds, shadows of trees, sounding wave movements in deep ocean, visualization of long time frame events, etc.
http://farm4.static.flickr.com/3113/3161997602_050762c4fd.jpg

Video Locale
* http://cyborgcamp.blip.tv/
Click for video
* http://blip.tv/play/gpQ738JfAg%2Em4v
Background sources:
* Daylight Sensor
** http://c2.com/~ward/bs2/
*Skylight via sampling of Webcam images
** http://c2.com/~ward/sky/
*Sounds from wave height and movement variation (data to soundcard)
** http://c2.com/doc/waves/

