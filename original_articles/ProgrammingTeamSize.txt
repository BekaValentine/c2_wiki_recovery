What, in general, are the forces acting upon large programming teams, versus those acting upon small programming teams? How do different methodologies attempt to address these forces?
------
''Moved from YouArentGonnaNeedIt''

	* I see this part of XP not as a radical change, but as a re-adjustment in balance, acknowledging that instability is not the chimera for small teams that some of the literature (often aimed at big teams) says it is.

''Yes.  We don't see it as a radical change either, but as a way we focus our attention on our real needs.  In addition, it's important to remember that we're a fairly small (10) team, and we're working in Smalltalk.  There's some discussion relating to C++ below.''


	* This re-adjustment is necessary, but there's a danger of over-balancing the other way. I've added some comments to that effect. -- DaveHarris

