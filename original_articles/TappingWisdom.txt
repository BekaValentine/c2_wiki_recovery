Let me describe a situation that happens to me fairly often when doing CRC designs in a corporate setting.

I'm brought in as an expert to jump-start a group doing some big project using OO for the first time.  We have eight to ten people in a conference room for three or four days.  There is a good mix of talent: some young designers, some users, some trainers and managers.

There is an old guy too.  He was the young guy that made the current system work when they deployed it in the '60s.  He doesn't want to be there.  Whenever he hears the young guys jabbering it makes him think of retirement. But he is there, and he's half listening, and by day two he figures out that the group isn't going half as fast as he had thought.

So how did the old guy figure that out?  He was finally able to connect his experience with the discussion in front of him.  Had the discussion been more efficient, the young guys probably could have dropped him.  That's what he expected. He has a map.

So then he figures out that not only is the design progressing slowly, it's going in the wrong direction.  If they are going to do what they say they are going to do then they are going to have the same problems he had 25 years ago.  (Actually, he had always suspected this, but now he knows for sure.)

Then he realizes that his map works both ways.  He doesn't have to tell the story about 25 years ago.  (He tried that once and they wouldn't listen.) He grabs a CrcCard and says: "What are you going to do when this shows up over here?"

What an easy sentence to say.  There are no complicated nouns, just "this" and "here".  The young guys try to figure out what he means.  They ask: "How could that happen?" It's the first real design dialog they have ever had.

He explains how it could happen.  They get it, then fix it, and move along.  But a big change has happened.  From then on, with each scenario the young guys work, they glance at his eyes to make sure he approves.

-- WardCunningham

What goes around comes around - Now Ward is being "tapped" for his wisdom at a PlatformArchitectureGuidance group at Microsoft. Could it be the "Old Guy" he refers to here is repeating the story above in a new and different setting?