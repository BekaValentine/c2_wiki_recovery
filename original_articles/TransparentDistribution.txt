When people say "transparent networking" or "transparent distribution", what do they mean?

For many, it means that you provide high-level abstractions which hide network location behind an impenetrable wall. In such a system, a process ''can't'' know where it is executing, even when it wants and needs to know. And in such a system, it isn't so much that networking is transparent as that it is hidden behind an opaque brick wall.

More prosaically, transparent distribution means that executing on a remote CPU is a non-event, no more exceptional than executing on a particular one of the local CPUs. You may specify execution on a particular remote CPU just as you would specify execution on a particular one of the local CPUs.

Similarly for accessing of remote data.

Note that transparency is a high-level concern and as such independent of low-level concerns such as, say, SingleAddressSpaceOperatingSystem.

The MozartProgrammingSystem provides TransparentDistribution.

See also LocationTransparency.