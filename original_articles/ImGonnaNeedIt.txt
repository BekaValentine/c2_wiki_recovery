'''Expectations versus Intentions'''

''This page title is confusing. I expected it to be an argument againt YagNi. This page has nothing to do with YagNi.''

'''''The aim is to explain the use of a tag place within the code'''''

A source code tag you can use which isn't owned by anyone yet as a trademark, copyright, or patent. A useful substitute for ToDo now that Microsoft has patented a certain use of that tag.

It can be placed as a SearchMarker in source to indicate what you will need to construct before you are at the point of ItWorks as was intended.
----
 
I am just describing a tag I use in my code instead of "ToDo" or "D''''''ontForget" which will serve to R''''''emindMe. YagNi is a name given to something having to do with wasted effort. What I am describing is to allow economy of effort and the continuation on the matters involved in the first step. It is to prevent the M''''''issedDirection which occurs when one is drawn from what one should be doing to something which can be done later.
----
'''Other Suggested names for this''

''Then why not make the tag IMightNeedIt? Haven't there been times when you've left an ImGonnaNeedIt tag, gone off and coded somewhere else, and then come back and realised you don't need it after all?''

Anothing suggestion: WIP for WorkInProgress

I do not find it necessary to use tags which are fuzzy and smack of uncertainty. Uncertainties exist, and will change things, but to introduce uncertainty is inefficient and counterproductive.

It is far better to have been certain of something and find that you were wrong, than it is to be uncertain of something and find that you were right. In the first case, you learn something, in the second case, you have wasted time and effort. 

''The tag itself can't introduce uncertainty. It can only recognise that uncertainty exists. If you insist on being certain about everything, you're going to make a lot of arrogant mistakes, and pay for it. Being P''''''rematurelyCertain leads to PrematureOptimization, PrematureGeneralization, and all sorts of other program-killers.''
----
'''The humble programmer'''

''"The competent programmer is fully aware of the strictly limited size of his own skull; therefore he approaches the programming task in full humility."'' -- DonKnuth

----
CategoryContinuation