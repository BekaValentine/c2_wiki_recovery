Models and measurements of ''physical force systems'' (e.g. dams, planes, rockets, transistors) are commonly used for quantitative prediction.  What is the chance a dam designed this way will burst?  Will an airplane's landing gear built this way collapse?  What is the specific thrust of this rocket design?  What is the gain of this transistor?

Designers and modelers of physical force systems often use the process ''model, predict, make decisions''.  Because a more complex model will give better predictions, a model of a physical force system is a MorePainMoreGainSolution.  Such models are usually made as complex as needed to achieve some desired level of prediction.

Since most ''information flow systems'' (e.g. business units, software programs, armies, economies) are too complicated to predict, models and measurements of such systems are commonly used for human understanding.

Designers and modelers of information flow systems often use the process ''model, understand, make decisions''.  Because humans can handle only a limited amount of complexity, a model of an information flow system is a GoldilocksSolution.  Such models balance a human's need for simplicity against the need for completeness and accuracy, to try to maximize human understanding.

'''Therefore'''

* When modeling physical force systems, increase completeness and accuracy until the desired level of quantitative prediction is achieved.
* When modeling information flow systems, balance simplicity against completeness and accuracy to maximize human understanding.

'''Be careful!'''.  Because our technical training is influenced by four hundred years of modeling physical force systems, the former approach is more "natural" to us than the latter.  Thus it is tempting to make a model of an information flow system ever more complex, in an often vain attempt to achieve a "predictive" ability.

If you can achieve such an ability, by all means do so.  But if you can't, don't leave you model hanging.  Back way up, throwing away completeness and accuracy, until you return to a model that will MaximizeHumanUnderstanding.
 
'''Examples'''
* Use many detailed structural diagrams to model a dam;
** use a few CRC cards to model software.

* Use complex simulation software to model an airplane;
** use an org chart to model a business unit.

* Use a thick book as a mechanical engineering handbook;
** use a thin book as a management guide.

* Use AutoCad to create your mechanical and electrical engineering schematics
** use GalacticModelingLanguage to create SoftwareEngineering schematics

'''See Also'''

SpecializationSweetSpot WabiSabi ShortBooks