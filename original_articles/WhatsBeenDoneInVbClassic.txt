This is a bit of a challenge to VbClassic programmers, and/or a request for education:

What important and widely used pieces of software have been done in VbClassic? Particularly public domain or Open Source software, that
can be looked at. 

''Why is this a criterion for a "serious" language? VB is primarily meant for enterprise applications, the kind you don't shrink-wrap or give away.''

Yeah, yeah, I know: 90% of business apps are now written in VB. But what
can I look at?  Why aren't there any VB projects on SourceForge?

''I can answer that. It's an incredible pain in the butt to set up a SourceForge project for those not familiar with the UnixCulturalAssumption, and VB programmers would fall heavily into that group.''

Also, people who like to write open-source software tend to steer clear of proprietary OS-specific development tools.

------

VB is primarily a '''custom''' business application language. It is not geared toward producing boxed/packaged applications. (Delphi would perhaps be a better comparable choice for such.) But, I don't think this by itself makes it "bad". No language is ideal for every use and every application (although a few GoldenHammer enthusiests may claim such). Therefore, I see no reason to enter into a DomainPissingMatch about this.

----

In university people learn C++ or Java because this is a more general language; VB is Microsoft.
 
''"General" is not necessarily better, or even perhaps possible. See GeneralPurposeProgrammingLanguage.''

Next they make all kind of interesting studies in this language. Or even in Pascal, because their theachers happen to know all about Pascal.

So if you want to find interesting software, most isn't written in VB

Simple as it is.

''Only if you consider "interesting software" to be that which is written and studied at universities.''

Maybe "interesting" and "useful" are contradictory attributes, eh?

----

In the former VisualBasicProgramersJournal there was a column called 'Visual Basic Heroes'. I remember a 911 dispatching system created in VisualBasic. DogWaffle is a painting application written in VB. -- ThomasEyde

See VisualBasicFailures for KatieLucas' response about the 911 dispatching system for the London Ambulance Service.

-----

Some software written in VisualBasic:
	* ToadTool (Tool for Oracle Application Developers)
	* VbUnit
	* City Desk (see http://www.fogcreek.com/CityDesk/ ) content management system.

-----

A quick Google search yielded these sites: 
http://www.zarr.net/vb/default.asp http://www.freevbcode.com/ http://www.thescarms.com/VBasic/

----

This question is probably becoming moot, as the DotNetFramework makes the language of development irrelevant to the resulting application. Maybe we need a new page: WhatsBeenDoneInVisualBasicDotNet.

''That's absolutely untrue.  Language is, and always will be an important factor, DotNet simply allows multiple language to share common code easily, and even that has some bumps in it due to language features.  Different languages allow the expression of ideas differently, VB and C# do not have the same feature set, and that gap is continuing to grow as C# gains anonymous functions in it's next release while VB does not.  VB also has optional parameters, which C# thankfully doesn't support, but it does make accessing VB libraries that use those features rather interesting.  C# is case sensitive, unfortunately, VB is not, another issue when mixing language libraries.  Features like that have a huge impact on productivity and code structure, and should make it clear that all language are not created equal just because they can share a common library and runtime.''

* I disagree with your judgement on named parameters and case-sensativity, but perhaps this belongs in another topic, something like VbDotNetVsCsharp if an existing topic does not exist.

''I'm sure you do, but my point was that language choice matters, and no common framework will ever change that.  A language is an expression of a particular way of thinking, you can't simply translate from one to the next, languages are far more than just syntax.  We all have our own favorite language features, I dislike those two, because I came from a VB maintenance background, and I've seen how they 'can' invite bad code, though, if I only had to work on my own code... I'd probably like named parameters.''

What kind of problems are created by named parameters?

----
See WhatsBeenDoneInSmalltalk
----
CategoryVbClassic