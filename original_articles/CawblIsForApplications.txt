CAWBL Is For Applications because
*It can be organized like an application instead of a document.
*It reads like application code instead of text markup, HTML, or XML . 
*It is easier to manage than a document, due to it being geared for application.
*It is more complex than a document.
*It is '''not''' driven line by line, line after line, by carriage return, like in a document.
*It uses precise screen positioning like in offline software applications who use forms with Left, Top, Width, attributes or properties.
*It uses properties, an object-oriented way of accessing a control.
*It uses widgets and components as a basis instead of text or rich text or marked up text.
*It is not embedded in a document. It is not an e-brochure or a flat enriched document. It is a true application on the screen, similar to offline software applications.
*It can load documents into widgets or components. Loading applications into documents is AssBackwards, so CAWBL loads documents into the application's widgets.

----
See also ComponentBrowserMarkup