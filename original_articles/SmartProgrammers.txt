See also:  CritiqueOfXp

As presented in http://www.ratio.co.uk/ov3pdf.zip as an alternative to ExtremeProgramming by DougRosenberg and KendallScott.  Often abbreviated to SP.

	* Hire only the top 5% performers that are personally known to you, or referred by a top 5%er that you trust. 
	* Have a chief architect plan the software architecture very carefully, such that there is minimal coupling between work units (say, UML packages). 
	* Have the chief architect match the work units to the specific skill sets and experience of the SP staff. 
	* Have all of your SP programmers work from home, where they will not be disturbed, unless they explicitly request to work in a common facility. 
	* Limit status reports to half a page, sent via E-mail, once a week. 
	* Have your SPers bring in incremental builds for testing when they decide they are ready. 
	* Restrict communication between SP developers to E-mail and phone, on an as-needed basis. Never bring all of the programmers into the same room at the same time except during integration testing, and then only those whose code is directly involved. 

(Summarized from CritiqueOfXp) -- PeterForeman

----

N.B. this isn't presented as a ''serious'' alternative to XP, but more in the spirit of a StrawMan argument.

----

Has this been tried?  I wonder especially about the WorkFromHome part, because this would make me unmotivated, I guess.

----

What do we do with the 95% of the programmers not suitable for SP?  ExtremeProgramming?

It doesn't matter in SP since they can never be productive anyway?

''What do you think is the main reason so much software is crap? Too many programmers who just are not good enough. But then IsThereEverGoingToBeSufficientEconomicIncentiveToDoSoftwareRight?''
----
ProgrammerStereotype