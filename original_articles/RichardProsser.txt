I've been studying OO principles for some time, and I like Java very much. In my experience, the analysis stage of a project is the one that people devote the least time to, yet obviously it is the most important. Thus, I think that more attention paid to this area will yield very good results. Most of the tools and techniques available skip over this "soft" domain, and assume that the analysis has (somehow) already been conducted.

I believe that there is a lot of scope here for the NLP meta-model (which helps one to spot distortions, deletions and "normalizations" in language) and mind maps. The latter would be used prior to the design stage, to summarize the concepts and potential objects or patterns.

I also have an idea for a MultimediaObjectOrientedSpecificationEngine (MOOSE), which I believe will offer a better way of capturing requirements than current techniques.

e-mail: mailto:wiki@swanmedia.com 
----
	* The ExtremeProgramming ideas partly contradict your assertion that the analysis stage is the most important. Do you still think it's the case?
	* What do you mean by ''the NLP meta-model'', and how does that help one spot distortions and deletions?
	* Are you going to tell us any more about the MOOSE?
----
How does one program without first analyzing? If you do not BeginWithTheEndInMind, how will you know when you are finished? 
Richard, the MOOSE you mention as an idea for capturing requirements is sure worth considering. I believe that the effective use of PaperPorting (which is a multimedia approach to information capture and storage) might be a starting point.
----
CategoryHomePage