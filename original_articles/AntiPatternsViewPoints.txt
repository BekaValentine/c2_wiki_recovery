In the Book AntiPatternsBook, the authors presented AntiPattern''''''s from three major viewpoints: 

* the software developer, 
* the software architect, and 
* the software manager. 

Development AntiPattern''''''s describe situations encountered by the programmer when solving programming problems. ArchitectureAntiPattern''''''s focus on common problems in system structure, their consequences and solutions. Many of the most serious unresolved problems in software systems occur from this perspective. Management AntiPattern''''''s describe at common problems and solutions due to the software organization. Management AntiPattern''''''s affect people in all software roles, and their solutions directly affect the technical success of the project.

http://www.antipatterns.com/images/viewpoints.gif

''Principal AntiPattern Viewpoints''

A common reference model us used for terminology common to all three viewpoints.

The reference model is based upon three topics that introduce the key concepts of AntiPattern''''''s:

	* Root Causes
	* Primal Forces
	* Software Design Level Model (SDLM)

Root causes provide the fundamental context for AntiPattern''''''s. Primal forces are the key motivators of decision making. The relative importance of these forces varies significantly with architectural scale. The architectural scales are defined by the SDLM. An understanding of the architectural levels defines the different scales for pattern applicability. Each pattern has a most applicable scale where it is presented in the catalog, but may also have applicability to other scales (also described in each pattern). The pattern template provides the outline for pattern definition.

-- regards, SkipMcCormick