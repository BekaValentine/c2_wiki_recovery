How does a ModelViewController GUI system differ from an EventDrivenProgramming-based model?

''Apples and oranges.  MVC describes large scale structure, EventDrivenProgramming describes how flow is controlled.  One can use both simultaneously.''

Events don't really control the flow, other than requesting actions, such as asking to open a new form window. Perhaps you are suggesting that the underlying framework, the one that is often hidden explicity or implicitly from event-filling application developer, can be made with MVC. '''In EventDrivenProgramming, an application developer does not concern themselves with the "controller"''' code. That is an implementation detail that is expected be abstracted away. MVC implies that they should be on equal footing. Under WhatsaControllerAnyway, it seems what exactly is a controller is kind of vague.
----------------
CategoryUserInterface