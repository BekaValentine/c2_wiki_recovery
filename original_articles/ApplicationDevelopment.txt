How come there isn't a page called this?  Isn't this what 90% of programmers do?!

* It's what some percentage of '''application programmers''' do. There are more kinds of programmers in the world than just application programmers.

''Possibly because it's too generic a term?''

I was thinking of application development, as opposed to software development.  I just came from a contract at a bank where the application developers outnumbered the software developers by a significant margin - wouldn't this be true for most companies outside the IT industry?

''What distinction was made between "application developers" and "software developers" at that bank?''

* The application developers supported the financial applications, especially those used by bank tellers or accessed via ATMs, together with all the batch systems that manage the data, whereas the software developers were mostly involved in middleware (e.g. services to map bank data items onto the databases, transaction log compare tools, debugging aids, etc.).  I was one of the people who set up that system 30 years ago and, interestingly, I had an uphill struggle to convince management that we needed any middleware at all!  Management didn't understand why application developers couldn't just issue CICS service calls directly from the application code (CICS is a mainframe OLTP environment). 

Exactly Maybe you should define application development to avoid a LaynesLaw debate over this

ApplicationDevelopment creates software in some domain for use by end users; examples include business domain apps such as accounting software, business suite software (word processors, spreadsheets, etc). Some specialized sub-domains:
* Enterprise financial software
* Game programming

It is usually distinguished from systems programming, scientific programming and numerical analysis, embedded programming, etc.

''Isn't ApplicationDevelopment a subset of SoftwareDevelopment though?''

* They may share technologies, but I think the users of the end product are different.  The definition above is interesting, too, as I would think much application development is specific to a particular customer, which is surely not true of word processors and spreadsheets.   Maybe that's why application developers are somewhat anonymous.  Think of an application development department in a large company, probably working in COBOL - they won't have very high levels of technical curiosity, and may not run across this wiki at all!  Their concerns tend to be very different from those discussed in these pages.

** ''These are arbitrary distinctions I've never encountered.  If an application is software, then developing an application is developing software.''

* ''Saying that COBOL'ers don't have a "high level of technical curiosity" is probably an over-generalization. It is true that they tend to be more focused on business logic and customer/user requirements gathering/understanding than say middle-ware designers, but I am not sure they are mutually exclusive.''

* Of course, you're right - I was trying to explain why that type of work, which employs large numbers of programmers, seems to have low visibility on this wiki.  Any theories?  Or am I just not looking in the right place?

* ''I speculate that the original wiki was biased toward certain domains and paradigms, and that was reinforced by who stayed and who didn't over time.''

----

ApplicationDevelopment leads to software, often customized for a particular company, with large numbers of end-users. It does not include ProductDevelopment, which generates a ShrinkWrapped software product. ChryslerComprehensiveCompensation (aka C3, CCC) is a good example

''Again, this is an arbitrary distinction.  What happens when the software developed for in-house use is sold as a commercial off-the-shelf product?  Do the application developers turn into product developers overnight?  I think you're making up these definitions.  I've never heard them used, and I've developed shrink-wrapped products, in-house products and system software.  -- EricHodges''

I concur, word for word, except that I grant that there can be oddball terminology used in certain odd corners of the world. If this usage is standard in some such place, though, it is extremely ill-advised, and should be changed to avoid confusion. -- DougMerritt

InformationTechnologyRolesPoorlyDefined
