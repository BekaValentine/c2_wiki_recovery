MixingLevels is applying a part of a LevelOfAbstraction to a part of another LevelOfAbstraction.
Using ConceptsOutOfContext or a LevelCategoryError is usually the consequence of doing so.

'''Examples:'''

	Wiki:	I was thinking of writing this up as a pattern, but PrinciplesAreNotPatterns. That is, this phenonemon is too abstract to be pattern, it's probably an AntiPrinciple.
	Philosophy:	On the FreeWill page, Michael Brazier made the claim ''"if reality is totally mechanical at one level of abstraction, it must be equally mechanical at all higher levels of abstraction too."''. For a compatibilist, this is another example of MixingLevels (and the first one I encountered, while reading GoedelEscherBach). (Is http://www.rep.routledge.com/article/V014SECT1 a good explanation of compatibilism ?)
	Programming:	On the AlgorithmsThatDemandGarbageCollection page, CurtisBartley claimed that ''"Perl and Python both use ref-counting to do memory management, without requiring any special work on the part of the programmer.''". He was mixing the C and Perl/Python levels here.
	puns and onomatopei and anagrams:	the level of "what it sounds like" (phoneme) and "what the word means" level; very difficult if not impossible to translate from one SpokenLanguage to another.
	Biology:	Just because individual dogs are alive, that doesn't mean that the entire Canine species, considered as a single thing, is a living thing. (SelfReplication)
	QuineProgram:	Just because a source file cannot hold another copy of the source file inside itself does not mean that self-printing programs are impossible.
	
I could come up with some more, but I think these adequately demonstrate this is a pretty common phenonemon. However, I do not understand why this is the case. Any thoughts?

"TheMapIsNotTheTerritory."
----
StrangeLoops are important when mixing levels
----
See RepresentationConfusion FallaciousArgument

CategoryCommunication