A proponent of the theory that the activities of programming--e.g. analysis, design, implementation, testing, deployment--should be separated from each other in time, presumably to achieve EconomyOfScale. The feedback-less WaterFall is the well-known example of a phasist development discipline.

As an alternative, feedback between the activities leads to EconomyOfScope. 
---------
Like when your PointyHairedBoss demands "Why are you designing now? we're in the test phase!"? ''See RobertCecilMartin's "Rufus and Rupert" story.  http://www.egroups.com/files/extremeprogramming/Rupert.PDF''

PhasistPractices is a nickname for programming approaches that seek to divide the development time into specialized 'phases' during which only certain kinds of work are allowed, e.g. analysis phase, DesignPhase, and so on.  Kent coined the phrase during a lecture at XpImmersionOne.

TimeIsTheEnemyPhasesDontHelp
----
CategoryExtremeProgramming
