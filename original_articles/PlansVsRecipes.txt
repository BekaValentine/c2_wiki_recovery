Biologists make the point that our genes are more 
like a recipe than a plan.  The distinction is that
one is more easily reversed than the other.  
A building plan can be
drawn for an existing building.  But, it's hard to 
make a cake recipe from a cake.

Is a pattern language more like a recipe than a plan?
Perhaps that is why patterns pass easily from father to son
through the shared act of building while it took 
ChristopherAlexander and colleagues ten years to
construct his pattern language by examining buildings.

And yet when a cake is made from a recipe there are chemical 
transformations that take place, rendering the initial 
ingredients not readily identifiable.  
With a building the pieces
are not changed, making reversal possible to extract the 
plan.  When the solution to a problem is applied from a 
pattern language, is it reversable?   Alexander was able
to construct his pattern language by examining buildings.
He says
"But of course, the fact that these rules are simple does 
not mean that they are easy to observe, or easy to invent."  
(TimelessWayOfBuilding, p. 222) When we apply a pattern
to a computer system context, will it always be reversible?