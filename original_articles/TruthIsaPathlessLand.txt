I maintain that Truth is a pathless land, and you cannot approach it by any path whatsoever, by any religion, by any sect. That is my point of view, and I adhere to that absolutely and unconditionally. Truth, being limitless, unconditioned, unapproachable by any path whatsoever, cannot be organized; nor should any organization be formed to lead or to coerce people along any particular path. If you first understand that, then you will see how impossible it is to organize a belief. A belief is purely an individual matter, and you cannot and must not organize it. If you do, it becomes dead, crystallized; it becomes a creed, a sect, a religion, to be imposed on others. JidduKrishnamurti.

----

Maybe that is why all software development methodologies eventually fail? Because those how use them, by trying to blindly follow a set of rules, get them crystallized; they becomes a creed, a sect, a religion, to be imposed on others, not something organic, that adapts to the situation? And some say OOP is the way, and other says functional is the way, and other say XP is the way, and others say RUP is the way, when in fact, those are all predefined, crystallized path, and blindly following them will never (or almost never) work.

''Their benefit (if any) may be a common work-place vocabulary and conventions so that developers know their targets and know what to expect. It provides some degree of rigor. Whether one rigor is better than another is a different issue.''

Yes... at least that is what they attempt to provide, but in reality, Smalltalk, CLOS and Java are all object oriented and very very different... SQL and and TutorialDee are both supposed to represent "relational databases" and XP, Agile and RUP are all supposed to be iterative... It seems like after some time the concepts are eroded by use, and loose their original meaning... and people fight to force people in an organization to use RUP, while at the same time (inadverntly) kill it by reshaping it in to a waterfall like process. And thye fight for the use of Java, while writing all their code in a procedural way as scriptlets inside JSP files. An promote (or fight) for, (or against) SQL thinking their are fighting for (or against) the relational paradigm... it all seems pretty pointless after some years... like a modern Babel tower, where everybody believes everyone else understands, when in fact, they do not. And at the same time they block new ways of thinking because "they are not object oriented" o "they are relational" or "they are not industry accepted methologies"

And they look for the "Java way" or the "OOP Way" or the "RUP Way" or the "XP Way" to solve a problem, instead of looking at the problem and try to create a way that fits its particular and unique nature, rigor may help developers communicate using a common work-place vocabulary and conventions, but that sama vocabulary and conventions can be precisely what hides the right solution from the eyes of the developers.

---- 

See also TheMapIsNotTheTerritory