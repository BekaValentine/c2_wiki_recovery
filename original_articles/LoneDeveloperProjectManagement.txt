PairProgramming is not always possible, and many developers are still "alone in the night"

A lone-developer project suffers from many of the same problems as multi-person projects, such as delays, budget overruns, ScopeCreep, GoldPlating, unrealistic expectations, lack of indicators, etc. What methods for managing larger projects can be used efficiently in a lone developer project?

Some suggestions:
* Use IndexCard''''''s.
* Use TestDrivenDevelopment.  This will help avoid many delays due to buggy code.  Done diligently, it will also resist GoldPlating because you won't implement anything that you aren't testing for.
* Use short increments and the PlanningGame, measure the number of "points" of work you do in an increment and schedule that many more for the next increment.  This suggestion alone can help a lot for the problems mentioned above.
* Use an AutomatedConfigurationManagementEnvironment to mercilessly automate repetitive tasks.
* AutomateMercilessly is good, even for multiple programmer projects -- you automate it once, and everybody benefits.  See also ThreeStrikesAndYouAutomate.
* FourVariablesUnderStress must be managed.
* RubberDucking is perhaps more viable while working alone.  MultiplePersonalityDevelopment can be a replacement.

----
See also:
* SoloXpProjects 
* ExtremeProgrammingForOne
----
CategoryProjectManagement