Austrian school of programming values savings in form of libraries of reusable code and domain-specific languages, individualism, code ownership, unit testing.

Keynesian school of programming values planning in form of deadlines, debugging, troubleshooting, collectivism, coding standards, hard work, multitasking.

Promises, obligations, contracts and resulting plans with deadlines are examples of debt.

SDLC based on debt causes booms in form of quick delivery, rapid increase of code base and success in meeting deadlines.

Then booms are followed by busts in form of production emergencies, failing deadlines and degradation of quality of software and productivity of developers.

During boom cycle contractual debt gradually transforms into technical debt. Then, when deadline is met and product is delivered, technical debt causes production emergencies and slow developers productivity, which indicates bust cycle.


Keynesian economy causes and enforces Keynesian style of programming.
Austrian economy would allow Austrian style of programming to commercially exist.

Currently Austrian style of programming exists mostly in open source code because Keynesian debt-based economy does not allow economic survival of a company or individual with Austrian style of programming.

-AlekseyPavlichenko
