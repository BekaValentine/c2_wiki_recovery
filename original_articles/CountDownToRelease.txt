You're counting down toward your deadline, and you'd really like to make it. At the same time, no one wants to release unless the code is good enough.

You have your functional tests at or near 100%. The customers can look at the tests under 100 and determine whether they are showstoppers.

Quite possibly you have some special release-oriented tests, such as a parallel run with the legacy program. The customers can see if there are showstoppers in these tests as well.

How do you manage the countdown? You need to make sure that everyone knows the system status, that all necessary tasks get done, and that the go/nogo decision is made properly. To get smoothly to release, rely on three XP processes: UserStories, IterationPlan, and StandupMeeting.

'''UserStories'''

Just as at any other time in an XP project, CountDownToRelease is customer-driven. Customers look at the test results and identify things that need to be changed. They write UserStories for the necessary changes.

'''IterationPlan'''

Have frequent IterationPlan meetings, probably once a week. At the meeting, customers describe the UserStories needed to get the test results where they need to be, and write them on the whiteboard. As always, developers expand stories to EngineeringTask's, sign up, and estimate.

You may wish to use a WorkQueue signup, where developers sign up for only one task. This way, customers can put new stories on the board any time, and developers can sign up for the most important thing each time they finish a task.

'''StandupMeeting'''

Customers will be actively making tradeoffs in what to fix and what not to fix. They will add things to the board, and may remove them. At every day's StandupMeeting, customers update the group on their expectations, and developers update on their progress. The StandupMeeting is key at critical times like these, to make sure everyone knows what is happening.