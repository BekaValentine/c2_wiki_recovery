Dibol was a DigitalEquipmentCorporation implementation of the CobolLanguage for its PDP and VMS [VmsOperatingSystem] OperatingSystem''''''s.  When DEC was in its death throes the language was sold to a company in Sacramento California called DISC who had created a cross-platform implementation of the product called DBL (the extension on DiBol source).  The product still exists.  It is produced by a company called Synergex which can be found at:
http://www.synergex.com/
----
I think (having actually worked with Dibol) that it's overstating to say it's an "implementation" of Cobol.  More of a very stripped-down "TinyCobol".

Like the difference between chess and tic-tac-toe.
---------------
I'd disagree - it's a cross between Cobol and the FortranLanguage. I worked with Dibol and DBL for about 20 years, it had its faults but for business use it was easy to produce applications without getting into OO programming etc.

-----------------
Second programming language I ever learned. And I'm only 40 :-) -- PaulHudson

-----------------

I worked in DIBOL for the same years as most others (1978-1980), writing extensive database code and screen handling code. I also wrote a PDP-11 TecoEditor ("Visual TECO") program to do screen layouts. I always used to say "It combines the elegant syntax of FORTRAN with the sophisticated numeric handling capabilities of COBOL." For all I have maligned the language over the years, however, you could write a lot of it very quickly. I once had to convert an application from DIBOL to Microsoft BASIC, and I was astounded at how much longer (probably about twice as long) the BASIC code was.

-- GaryBisaga

-------------------
Talk about a blast from the past.... I helped write the 2nd incarnation of DIBOL on the PDP-8 and the several incarnations on the PDP-11. 
When people look at the language today, when any unit of memory smaller than "mega-" isn't worth talking about, it may be difficult to comprehend the mindset that existed with PDP-8 programmers in 1971 when 16K (that's "kilo-," folks) of memory was about as much as one could ever reasonably expect to have and a 256K disk was big. 
Even when we moved to the PDP-11, around 1973 (?), things weren't much better. 
As as result, one of the primary driving forces was "make it SMALL." 

One of the most appealing things (to me) about PDP-8 and PDP-11 DIBOL was the arithmetic. We did add, subtract,multiply, and divide of numbers represented by ASCII text strings. You just haven't lived until you have written code to do long division of ASCII text strings! It was weird. We thought about converting the numbers to binary, doing the math, then converting back to ASCII, but eventually decided that the resulting code would be bigger and probably not any faster, maybe even slower. Doing things that way also had the interesting side effect of making is possible to overlay numeric and alpha data records in peculiar and often useful ways.


---------------------
DIBOL is nothing like COBOL. I wrote both DIBOL and COBOL programs back in the early '80s and let me tell you -- COBOL ain't nothin' like DIBOL, and DIBOL ain't nothin' like COBOL. If anything, DIBOL is more FORTRAN-esque than anything else. But we did some amazing things back in the day with DIBOL. Even wrote an ISAM file manager to do indexed record searches. 