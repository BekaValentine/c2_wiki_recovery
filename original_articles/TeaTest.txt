'''Context:''' Interface testing.

Sometimes in the software field, a message window is used by the program to communicate to the user. The message should be worded so that it is clear to the user what it means, even if the user does not see the message until about ten minutes have passed (enough time to go away, boil some water and steep the tea before finally returning.) 

If the user performs a function, and a generic warning comes up on the screen, such as ''Don't do that!'', they'll reason that what ever they did last was the cause for the message. But imagine if they only saw that message after making a cup of tea... was the computer upset that they went for tea?

'''Therefore:'''

If an interface message comes up on the screen, and the user does not know its cause (due to distraction such as making tea, or if the user was currently involved in several tasks at once) the message must be easy to relate back to the cause.

Example: ''Warning: Security error'' is useless, but ''Warning: I don't have security rights to edit the file EDIT.TXT'' is much better. Even better would be a message that leads the user to a solution for the problem.
----
Do not confuse this test with the environment based H''''''otTeaTest where a cup of scalding hot cup of tea loaded with sugar is dumped on or in the device in question. This tests how well the unit will survive a user with a hot drink.
----
Also do not confuse with the "Tea Cosy Test" for personality disorders "Never trust a man who when left alone in a room with a tea cosy didn't try it on his head" :o) --AndrewCates
----
CategoryTesting