Attendees:
   Alejandro Oyarbide
   Jack Azoulay
   Martin Laplante
   NicolaeGiurescu
   PatrickHodoul

Discussions:

Due to new members, we firstly presented ourselves. The new members are all from SR-Telecom in Ville-St-Laurent. And the meeting started with a general discussion about meanings and uses of Patterns in Software Design.
All members should refer to the document "http://www.industriallogic.com/papers/learning.html" to have more in-depths, and also the chapters 1 and 2 of GoF books.
The goal of the group is to "Study Patterns in group". The "Study" of Pattern is important because the most important to correctly use Patterns is to correctly understand them and not strictly copy/paste them. The "Group" idea is to have different views and ideas on a pattern, and so really understand it.

Right after, we started to discuss about GoF-Prototype.
The intent is "Specify the kinds of objects to create using a prototypical instance, and create new objects by copying this prototype".

One important thing to signal about Patterns is that to understand a pattern, you should firstly focus on its intent. The intent shall describe the purpose of the pattern, you can also refer to the applicability and consequences. You shall never forget that the sample is provided as sample and not as the pattern. The sample gives you a way for a better understanding.

During the discussion, it appears that some person didn't clearly identify the difference with the GoF-Factory-Method and GoF-Prototype. One major difference is in the dynamic aspect of the prototype. If you refer to the applicability of the prototype, the differences should appear.
The goal of the prototype could be to have a centralized instances' manager, dynamically configurable. By doing so, you could at runtime change the reference class (the class which is cloned) without any impacts on the rest of the application. 


Could the group idea be implemented as a MOO rather than a physical meeting place?
---CayteLindner
