It is a commonly held view by a lot of programmers that aesthetics don't matter.  All that it takes is an hour here or there, a beautiful colorfade from a pure blue (0000FF) to a pure green (00FF00) and it's fine.

This is a complete fallacy, equivalent to a graphic designer saying that programming is just building a few forms in VisualBasic and you're done with it.

In reality, graphic design is very important, and can make the difference between an application or Web site that is barely tolerable and one that is a joy to use.

There is an entire language devoted to graphic design, and it is about as complex to design a usable and beautiful application as it is to program it.

Just something to think about.  

----

Remember that graphic design is not identical to aesthetics.  Aesthetics is the branch of philosophy that deals with the nature of beauty.  Part of the programmer's job is to give beauty to the visual appearance of the application, but a separate part of the job is to make the source code 'beautiful'.  Here 'beautiful' means (among other things) that the code is easy for a programmer to read, understand, and re-use.  

In theory, an application with much beauty in its graphical interface could be implemented as a collection of ugly kludges invisible to the user.  In practice, applications like this tend to have short lives as they are harder to maintain.  The converse, where a programmer does not devote enough effort to the design of the user interface, is all too common.  

There are plenty of completely non-graphical applications.  I'm a frequent user of telephone-accessed applications that communicate by 'talking' to me while I press the phone keys.  Some of these definitely have more beauty than others.  

----
See NextStep, MacOsx