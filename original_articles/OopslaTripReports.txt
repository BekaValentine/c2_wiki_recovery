I wrote something like a trip report after OOPSLA 96.
I'm probably not the only one.
I invite comments on mine,
and invite others to post links to your reports
for any OOPSLA
(whether or not you'd like comments)
and impressions.
--PaulChisholm

	* http://www.exmachina.com/~psrc/trip9610.html

What I didn't say in my trip report (but should have) is that OOPSLA can be, and should be, an important opportunity to stretch yourself past what you think your limits are. Thinking about taking an introductory tutorial? Consider an intermediate or advanced one. Got a little bored with a tutorial last year? Maybe you should submit a paper to a workshop. This is particularly important now that the call for participation has gone out for OOPSLA '97 in Atlanta. --PaulChisholm

----

I appreciate Paul's effort and thoughtfulness.  
His report is a great mixture of reportage and analysis.
As a Smalltalker, I agree with his remarks on Smalltalk 
and other OOP languages.  (Although I wouldn't like to see 
the language get "bigger".)

Is Christopher Alexander's presentation available in any 
format?  Any additional thoughts on it?
Thanks. -- JamesCollins

''{Videotapes should be available from the ACM in early February -- check back with me then -- JimCoplien}''




----

I have four new impressions in my head from OOPSLA (96),
but you really don't want to hear about them -- JimCoplien

----

Highlights of OOPSLA 97 (Atlanta):

	* Little C++ coverage. It's ''the'' mainstream programming language for a lot of people; what more is there to say?

	* The calm before the Java storm? Little pre-experience hype, little post-experience praise or backlash. Maybe next year?

	* Everybody's programming in Perl but nobody's talking about it.

	* No pattern backlash (yet?)

	* The ChryslerComprehensiveCompensation project. Who'd have thunk a ''payroll'' system would have gotten people excited? Smalltalk, plus PairProgramming, plus some "things that are hard to take a photo of," combined into something magic. (KentBeck's involvement probably has a lot to do with it.)

	* Smalltalk market consolidation. ParcPlace/Digitalk didn't even show up, maybe because they couldn't take the heat for killing the Digitalk product line? IBM's VisualAge just keeps sailing. ENVY/Developer and Gemstone rule the seven seas.

	* SqueakSmalltalk, a freely available Smalltalk-80 implementation for Mac, Windows 95/NT, Unix, and even the Casiopeia PDA I always carry (2MB total storage, 2 AA cells, $299). The "last best hope" for Smalltalk as a mainstream programming language?

(These are observations of a C++ programmer turned Perl programmer turned manager. Comments greatly appreciated!)
--PaulChisholm
----
	*My favorite OOPSLA '97 quote came from Kent Beck: "The benefits of reuse decline to zero as the speed of development approaches infinity".  (Please feel free to correct this text if I misquoted).
	*It may have been my bias, but I heard a lot more Smalltalk success stories than C++ or Java success stories.
	*Squeak is cool, but I don't think its creators intend for it to become a "mainstream programming language".  At least not a common business-oriented programming language.
	*Luke Hohmann's Lo-fi Prototyping tutorial had some interesting (at least to me) social side-effects [http://ourworld.compuserve.com/homepages/smalltalker/touristics.htm1].  There's nothing like being forced work as a team to create an object model in 15 minutes to break the proverbial ice.  I'm sure that other sessions led to friendships and alliances.
	*Another great quote came from Luke's class, when he casually mentioned that he likes "to change gender when I'm writing".  After an awkward pause, the class laughed; perhaps we took it out of context.
--JamesCollins