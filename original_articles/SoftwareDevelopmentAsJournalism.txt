I've been wondering how ordinary people accomplish the seemingly mammoth task of delivering a newspaper every day.  I took a closer look at what newspaper journalists do and found that we have a lot to learn from them.

Here is an article I wrote suggesting practical changes our industry could begin to make.

http://www.softwarereality.com/lifecycle/stop_the_press.jsp

--ChrisSteinbach

----

What is said can be summarized as ''"testers should be empowered to fix problems themselves"''.  This we are told is how copy editing at a newspaper works.  The editor does not send back copy to a reporter for every little mistake.

How exactly this it to be achieved on a software project is not fully explored.  It would be good to come up with some more possibilities:

	* Testers must learn how to code (otherwise how can they fix problems?) ''Or coders must learn to test.'' It should be required that coders acquire good testing skills to advance in the field.
	* Style guides/coding convention documents used (to reduce conflict?)
	* Testers must have access to the same code base and a complete development environment
	* Concise design documentation must be available for reference
	* Automated unit tests/integration tests are probably essential
	* ''other ideas''

----

The article says that a newspaper editor is analogous to a software tester.  An alternative (and maybe better) analogy would be that an editor is like a software "architect" (or technical lead or lead developer or whatever term you prefer).  The role is that of somebody who oversees and shapes the product, not that of someone who simply detects and corrects mistakes made by others.

There are at least two kinds of people called "editor" at a newspaper.  One kind, like a section editor or editor-in-chief, is the senior manager of reporters, and does little in the way of actual wordsmithing.  The other, a copy editor, is a senior employee who sits at the copy desk and reads, collectively with other copy editors, every word of every story in the paper and subjects it to rigorous scrutiny.  Facts are checked, spelling is corrected (people hate to have their name appear in the paper misspelled), grammar is simplified, and syntax is cleaned up.
----
If I misspell someting [sic], it is not only clear what the problem is, but what the solution is. If I tester discovers a "small problem" in a program's operation, chances are good that the only way they're going to know where the problem is is if they're intimately familiar with the program's operation. Furthermore, the "small problem" may turn out to require some sort of major architectural work, if the small problem is the result of an unexpected race condition (for example).

In other words, the only way this is going to work is if the testers '''are''' the programmers. Not only are the programmers going to be unconvinced of that, I can hear the testers laughing at the idea, too.

-- BillTrost

If a tester finds a problem then there aren't enough automated tests.  At the very least the tester should be allowed to create the new test.
----
Some values that reporters and editors share with XP:

	* Worst things first. The first paragraph of a news story, the "lead", is always the most important fact that tells what happened.
	* Do the simplest thing.  Newspaper writing is driven to be clean and clear, never bombastic or showy.
--StevenNewton
----
''Is the idea that the "testers '''are''' the programmers" laughable?  XP does not have any strict devision between programmers and testers. And even if things are as you say, what are the barriers to a tester becoming "intimately familiar" with the program's operation?''

If the testers are intimately familiar with the program's operation, in what way are they not programmers?

----
CategoryTesting
