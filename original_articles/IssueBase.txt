View the Orignal ISSUEBASE at http://www.issuebase.com/

Don't use a BugBase, have an IssueBase. If NoBugDatabase needed, transcend this page!

'''Name''': IssueBase

'''Problem''': You need to track a bunch of code-related complaints, changes, workarounds, or bugs.

'''Context''': You are developing a system with others and must satisfy all the DefectTrackingPatterns.

'''Forces''':	
Requires the following roles:
* Requires at least one developer
* IssueDispatcher - Assigns issues to developers
* QualityAssurance - Closes solved issue once they are verified
* ConfigurationManagement - Does daily builds, scriptable activities

'''Solution''': Use, adopt, or develop an IssueBase

An open source version of an IssueBase might be a MySQL/PHP/Apache combo, integrate that with some custom scripts, RevisionControlSystem, a good AutomatedBuild, and an AutomatedConfigurationManagementSystem - you have an IssueBase. Some say 

Required Roles(people can double up or automate):
Every Issue has the following data:
* id
* creation date
* type : Trouble Report(TR) or Change Request(CR)
* state : Open, Solved, Testing, or Closed
* priority : 1(high), 2(middle), 3(low)
* severity : A(critical), B(dangerous), C(moderate)
* origin
* owner
* version found & version fixed
* short description
* long description

The IssueBase is written in PHP/MySQL and is integrated with:
* custom tooled PHP scripts
* CVS code repository
* email system
* ODBC based tools

An integrated IssueBase uses all the DefectTrackingPatterns
* TrackingTool - Tracks every issue
* AutomatedTodoList - Issue can be ChangeRequests
* DocumentWork - Long descriptions allow lengthy data
* CoordinateEfforts - network access and multiple owners
* DifferentiatePriorityAndSeverity - Allows dispatcher fine control
* BugLifeCycle - Issues are never deleted, their entire lifecycle is recorded
* FixedIsNotClosed - QualityAssurance must closed a solved issue
* IncidentsAndFaults - TR descriptions
* ReviewsBeforeBigChanges - QualityAssurance reviews releases before approving the big ones.
* DefectTrackingRoles - QualityAssurance and ConfigurationManagement(tools) track all changes

'''Resulting Context''': You now have excellent logging of issues, a way to measure your team's performance, almost universal extendability, and you satisfy the DefectTrackingPatterns.
