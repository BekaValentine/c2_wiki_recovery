'''TGP and Other Methodologies'''

The TgpMethodology is not a firm technique. It can serve as a main approach to develop and maintain software or as a source for using distinct elements and principles. The major TgpPrinciples: Collaboration with BusinessProfessionals using a VisualSharedModel, SeparationOfDeclarative and imperative parts of the software, FlexibilityZonesArchitecture, IncrementalDevelopment and OrganicTesting, can be used ''independently'' to improve development and maintenance. 

The TgpMethodology does not contradict most other methods, since it mainly focuses on maintenance rather than on initial development. Moreover, the development of the stable parts of the software that are not likely to be changed should be carried out by other conservative development methods (like the WaterFall/SpiralModel: SRS, HLD, LLD, Coding, QA). The following figure shows a schematic representation of a differential approach ImplementingTgp: first, dividing the software modules to stable and hot; with only the hot ones being implemented by TGP.

http://dl.dropbox.com/u/22745533/Tgp/general/other.png

TGP claims that several development methodologies can live together on the same project (WhenToUseWhatParadigm). The following table may give some guidance displaying a comparison of key parameters that may be relevant when taking such a decision. In the table, TGP is presented in relation to the traditional approach and the agile ExtremeProgramming methodology.	
 
http://dl.dropbox.com/u/22745533/Tgp/general/CompareMethodologies.jpg



-- ShaiBenYehuda and OriInbar 
----
'''Discussion'''

----
CategoryAgileMethodology CategoryComparisons TgpMethodology TgpArchitecture TgpProcess ImplementingTgp TgpBackground