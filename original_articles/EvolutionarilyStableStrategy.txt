A strategy that, when used by an entire population, is resistant to invasion by new (mutant) strategies, i.e., is stable with respect to evolutionary changes. Defined by John Maynard Smith. An EvolutionarilyStableStrategy is always a NashEquilibrium.

'''Example:'''

In a game (in the GameTheory sense), two individuals are disputing over a chicken. There are two pure strategies in this game, an aggressive and a conciliatory one. Mixing Maynard Smith's metaphors, let's call these Hawk and Dove. The outcomes are as follows:

	* Hawk/Hawk: -1, -1
	* Hawk/Dove: 1, 0
	* Dove/Hawk: 0, 1
	* Dove/Dove: 1/2, 1/2 
That is, two Hawks will fight over the chicken, letting it get away, when a Hawk meets a Dove the Hawk will get the chicken and two Doves will share the chicken (the metaphor stops making sense here). Now, let's assume the individuals playing the game can distinguish themselves from the other: before each game, the player who got to the chicken first (with probability 1/2) receives a signal 'A' and the other a signal 'B'. In this version of Chicken, there are three strategies thad correspond with Nash equilibria: 

	1. When A, play Hawk, when B play Dove.
	1. When A, play Dove, when B, play Hawk.
	1. A mixed strategy of playing Hawk with probability 1/3.
However, strategy 3 is not evolutionarily stable. Against an opponent who plays strategy 3, ''every'' strategy gives the same expected utility (that is, 1/3). so an individual loses nothing by playing strategy 1 rather than 3. On the rare occasions when two deviants meet, they'll be able to coordinate with one another. Thus the deviants will do slightly better than the rest of the population, which means a tendency will arise to repeat the deviant strategy. Thus strategy 3 is not evolutionarily stable, while 1 and 2 are.
----
''Does this say anything about scalability, or is it solely a measure of resistance to new strategies?''

Group size can affect stability of a strategy.  A strategy that works for a group of 20 may not work for a group of 2000.  This is especially true of strategies that depend on communication or knowledge/memory of individual relationships.
----
Hmm, interesting, there could be many evolutionarily stable Strategies to ponder. Or design and deploy it more stable in the first place - testing it and repairing it while doing so. Similar to some XtremeProgramming practices. Leave your car unmaintained and it will eventually become extinct 

Man-made objects (non-living) differ quite a bit from animals or humans or plants though (alive). Are we talking about humans, computers, or software? I think something can be more stable by testing it and repairing it more often. With an animal, you cannot keep replacing parts though, whereas a computer or car, you can. So they are very different evolutions: man made materials vs animals/human evolution. Also, the probability of the dinosaurs vanishing may have been low, but it just happens. 

''Animals are parts that replace themselves,''

That's one way of looking at it.

''and H''''''umanBeans are animals that repeat mistakes :)''
* JavaBeans are only too human :)

----
See also: http://en.wikipedia.org/wiki/Evolutionarily_stable_strategy